{"version":3,"sources":["scripts/app.js"],"names":["routesConfig","$stateProvider","$urlRouterProvider","$locationProvider","allRoles","admins","sales","productions","support","html5Mode","hashPrefix","otherwise","$injector","auth","get","state","getCurrentUser","then","user","indexOf","role","go","abstract","component","data","roles","url","parent","$inject","angular","module","config","$httpProvider","$compileProvider","interceptors","push","useApplyAsync","debugInfoEnabled","run","$transitions","$q","match","to","onStart","trans","Auth","injector","$to","hasOwnProperty","reject","onError","$state","router","stateService","createSalesComponent","Sales","toastr","Upload","Customers","vm","this","$onInit","sale","resolve","date","Date","cancel","dismiss","$value","save","_id","updateSale","close","error","message","createSale","response","getCustomers","customerName","query","getAll","docs","convertDate","obj","value","upload","file","resp","console","log","status","evt","progress","parseInt","loaded","total","templateUrl","bindings","controller","controllerAs","createDeviceComponent","Device","device","updateDevice","createDevice","deviceSubcategories","Documents","$scope","subcategories","deviceId","category","relatedCategory","forEach","document","i","fields","length","field","subcategoryField","filterDocuments","$watchCollection","onDelelte","create","openDocumentModal","onCreateClick","sub","ev","preventDefault","stopPropagation","documents","doc","delete","deviceSerialNumbersComponent","$stateParams","$uibModal","localStorageService","$httpParamSerializer","StaticFields","model","modelOptions","debounce","limits","pagination","page","limit","sortFilters","sort","order","searchFilters","serialNumber","$watch","loadSales","getFields","onLimitChange","set","id","reset","onSortFiltersChanged","key","openCreateModal","product","map","item","modalInstance","open","animation","copy","result","openImportModal","size","headers","label","type","required","createCollection","parser","index","deleteSale","deviceCategoryTable","deviceCategoryGallery","deviceCategoryForm","createStaticFieldComponent","loadTypes","types","loadInProgress","updateField","createField","createUserComponent","Users","filter","updateUser","createUser","serialsListComponent","serials","rmaCreateComponent","Rma","$filter","matchCustomers","customerFields","options","editMode","getOne","rma","products","formNumberStatic","loadStaticFields","getSerials","sn","openCustomerModal","loadCustomerFields","customer","onCustomerChanged","fromSerial","customerFromSerial","onSerialNumberChanged","selected","some","closed","staticFields","deleteSerialNumber","splice","totalCount","closedCount","update","formNumber","formNumberDynamic","toggleEditedState","editable","invalidCustomer","invalidProducts","updateSerialsCustomer","createFieldComponent","Fields","documentCreateComponent","updateDocument","createDocument","DeviceSearchController","filters","search","onFiltersChanged","openDeviceModal","mode","deviceListComponent","devices","deviceDetailComponent","Category","getCategories","categories","getDevice","deviceCategoryComponent","categoryId","loadDocuments","getCategory","deleteDocument","createCustomerComponent","staticComponent","toUpperCase","slice","openFieldModal","title","deleteField","createCategoryComponent","getCategoriesForSub","relationCategories","categoryType","clearRelatedCategory","clearRelatedField","updateCategory","createCategory","usersComponent","getUsers","users","openUserModal","name","deleteUser","serialsComponent","dateFrom","dateTo","loadSerials","filtersCopy","serial","rmaComponent","rmaes","loadRma","NavbarController","isNavCollapsed","MainController","currentDate","LoginComponent","logOut","login","currentUser","importComponent","editedData","parts","part","onParseStarted","onDataChanged","Math","ceil","nextPart","HomeController","loadDevices","deleteDevice","helpComponent","fieldsComponent","customersComponent","customers","dynamicFields","loadCustomers","categoriesComponent","openCategoryModal","deleteCategory","aboutComponent","$http","self","post","put","service","getField","Field","Sale","Customer","me","isLoggedin","token","when","remove","AuthInterceptor","request","responseError","$current","factory","items","nth","isArray","hasRole","restrict","scope","link","element","attr","hide","directive","parseStarted","$elm","$attrs","on","changeEvent","$apply","reader","FileReader","onload","target","workbook","XLSX","read","cellDates","utils","sheet_to_json","Sheets","SheetNames","header","val","readAsBinaryString","files","$templateCache"],"mappings":"AA46FA,QAASA,cAAaC,EAAgBC,EAAoBC,GACxD,GAAIC,IAAY,QAAS,kBAAmB,iBAAkB,aAAc,YAAa,WACrFC,GAAU,QAAS,kBAAmB,cACtCC,GAAS,QAAS,aAAc,aAChCC,GAAe,QAAS,kBAAmB,kBAC3CC,GAAW,QAAS,UACxBL,GAAkBM,WAAU,GAAMC,WAAW,KAC7CR,EAAmBS,UAAU,SAAUC,GACrC,GAAIC,GAAOD,EAAUE,IAAI,QACrBC,EAAQH,EAAUE,IAAI,SAC1BD,GAAKG,iBACFC,KAAK,SAAUC,GACXX,EAAYY,QAAQD,EAAKE,WAC1BL,EAAMM,GAAG,QACDf,EAAMa,QAAQD,EAAKE,WAC3BL,EAAMM,GAAG,WACDb,EAAQW,QAAQD,EAAKE,WAC7BL,EAAMM,GAAG,OAETN,EAAMM,GAAG,aAIjBpB,EACGc,MAAM,QACLO,YAAU,EACVC,UAAW,gBACXC,MACEC,MAAOrB,KAGVW,MAAM,QACLW,IAAK,WACLC,OAAQ,OACRJ,UAAW,gBACXC,MACEC,MAAOlB,KAGVQ,MAAM,WACLW,IAAK,SACLC,OAAQ,OACRJ,UAAW,mBACXC,MACEC,MAAOnB,KAGVS,MAAM,SACLW,IAAK,SACLC,OAAQ,OACRJ,UAAW,iBACXC,MACEC,MAAOpB,KAGVU,MAAM,cACLW,IAAK,cACLC,OAAQ,OACRJ,UAAW,sBACXC,MACEC,OAAQ,YAGXV,MAAM,OACLW,IAAK,OACLC,OAAQ,OACRJ,UAAW,eACXC,MACEC,MAAOjB,KAGVO,MAAM,aACLW,IAAK,WACLC,OAAQ,OACRJ,UAAW,qBACXC,MACEC,MAAOjB,KAGVO,MAAM,aACLW,IAAK,cACLC,OAAQ,OACRJ,UAAW,qBACXC,MACEC,MAAOjB,KAGVO,MAAM,SACLW,IAAK,SACLC,OAAQ,OACRJ,UAAW,iBACXC,MACEC,MAAOrB,KAGVW,MAAM,QACLW,IAAK,QACLC,OAAQ,OACRJ,UAAW,gBACXC,MACEC,MAAOrB,KAGVW,MAAM,aACLW,IAAK,aACLC,OAAQ,OACRJ,UAAW,qBACXC,MACEC,MAAOrB,KAGVW,MAAM,UACLW,IAAK,4BACLC,OAAQ,OACRJ,UAAW,kBACXC,MACEC,OAAQ,YAGXV,MAAM,UACLW,IAAK,kBACLC,OAAQ,OACRJ,UAAW,kBACXC,MACEC,OAAQ,YAGXV,MAAM,UACLW,IAAK,cACLC,OAAQ,OACRJ,UAAW,wBACXC,MACEC,MAAOrB,KAGVW,MAAM,wBACLW,IAAK,6BACLC,OAAQ,SACRJ,UAAW,+BACXC,MACEC,MAAOnB,KAGVS,MAAM,mBACLW,IAAK,eACLC,OAAQ,SACRJ,UAAW,0BACXC,MACEC,MAAOrB,KAIVW,MAAM,SACLW,IAAK,SACLH,UAAW,mBArkGjBvB,aAAa4B,SAAW,iBAAkB,qBAAsB,qBADhEC,QACGC,OAAO,OACN,YACA,eACA,aACA,sBACA,qBACA,SACA,YACA,gBACA,eACA,uBAEDC,QAAA,gBAAA,mBAAO,SAAUC,EAAeC,GAC/BD,EAAcE,aAAaC,KAAK,mBAChCH,EAAcI,eAAc,GAC5BH,EAAiBI,kBAAiB,MAEnCC,KAAA,eAAA,KAAI,SAAUC,EAAcC,GAC3B,GAAIC,IACFC,GAAI,SAAU3B,GACZ,MAAOA,GAAMS,MAAQT,EAAMS,KAAKC,OAGpCc,GAAaI,QAAQF,EAAO,SAAUG,GACpC,GAAIC,GAAOD,EAAME,WAAWhC,IAAI,QAC5BC,EAAQ6B,EAAMG,KAClB,OAAOF,GAAK7B,iBACTC,KAAK,SAAUC,GACd,IAAIA,EAAK8B,eAAe,SAAWjC,EAAMS,KAAKC,MAAMN,QAAQD,EAAKE,WAC/D,MAAOoB,GAAGS,OAAO,oBAIzBV,EAAaW,QAAQT,EAAO,SAAUG,GACpC,GAAIO,GAASP,EAAMQ,OAAOC,YAC1BF,GAAO9B,GAAG,cAMhB,WAcE,QAASiC,GAAqBC,EAAOC,EAAQC,EAAQC,GACnD,GAAIC,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGG,KAAOH,EAAGI,QAAQD,KAClBH,EAAGG,KAAKE,OACTL,EAAGG,KAAKE,KAAO,GAAIC,MAAKN,EAAGG,KAAKE,QAGpCL,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAEtBT,EAAGU,KAAO,WACLV,EAAGG,KAAKQ,IACTf,EAAMgB,WAAWZ,EAAGG,MACjB7C,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAGG,SAFzBP,SAIS,SAAUkB,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAG1BnB,EAAMoB,WAAWhB,EAAGG,MACjB7C,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/B+B,SAIS,SAAUkB,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,YAK9Bf,EAAGkB,aAAe,SAAUC,GAC1B,GAAIC,GAAQ,yBAA2BD,CACvC,OAAOpB,GAAUsB,OAAOD,GACrB9D,KAAK,SAAU2D,GACd,MAAOA,GAASpD,KAAKyD,QAI3BtB,EAAGuB,YAAc,SAAUC,GACtBA,EAAIC,QACLD,EAAIC,MAAQ,GAAInB,MAAKkB,EAAIC,SAI7BzB,EAAG0B,OAAS,SAAUC,EAAMH,GAC1B1B,EAAO4B,QACL3D,IAAK,cACLF,MACE8D,KAAMA,KAGPrE,KAAK,SAAU2D,GACdO,EAAIC,MAAQR,EAASpD,MACpB,SAAU+D,GACXC,QAAQC,IAAI,iBAAmBF,EAAKG,SACnC,SAAUC,GACXR,EAAIS,SAAWC,SAAS,IAAQF,EAAIG,OAASH,EAAII,UAlFzDzC,EAAqB1B,SAAW,QAAS,SAAU,SAAU,aAD7DC,QACGC,OAAO,OACPP,UAAU,uBACTyE,YAAa,gGACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAY5C,EACZ6C,aAAc,UAiFpB,WAaE,QAASC,GAAsBC,EAAQ7C,GACrC,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG2C,OAAS3C,EAAGI,QAAQuC,QAEzB3C,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAEtBT,EAAGU,KAAO,WACLV,EAAG2C,OAAOhC,IACX+B,EAAOE,aAAa5C,EAAG2C,QACpBrF,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAG2C,WAFzBD,SAIS,SAAU5B,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAG1B2B,EAAOG,aAAa7C,EAAG2C,QACpBrF,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/B6E,SAIS,SAAU5B,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,YA/ChC0B,EAAsBxE,SAAW,SAAU,UAF3CC,QACGC,OAAO,OACPP,UAAU,yBACTyE,YAAa,wEACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAYE,EACZD,aAAc,UAiDpB,WAeE,QAASM,GAAoBC,EAAWlD,EAAQmD,GAC9C,GAAIhD,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGiD,iBACHF,EAAU1B,OAAOrB,EAAGkD,SAAUlD,EAAGmD,SAASC,iBACvC9F,KAAK,SAAU2D,GACdjB,EAAGiD,iBACHhC,EAASpD,KAAKwF,QAAQ,SAAUC,GAC9B,IAAI,GAAIC,GAAI,EAAGA,EAAID,EAASE,OAAOC,OAAQF,IACzC,GAAGD,EAASE,OAAOD,GAAGG,MAAM/C,MAAQX,EAAGmD,SAASQ,iBAAiB,CAC/D3D,EAAGiD,cAAczE,KAAK8E,EAASE,OAAOD,GACtC,UAINvD,EAAG4D,oBAXPb,SAaS,WACLlD,EAAOiB,MAAM,8BAA+B,WAEhDkC,EAAOa,iBAAiB,eAAgB7D,EAAG4D,kBAG7C5D,EAAG8D,UAAY,SAAUR,GACvBtD,EAAAA,WACEsD,SAAUA,KAIdtD,EAAG+D,OAAS,SAAUT,GACpBtD,EAAGgE,mBACDV,SAAUA,KAIdtD,EAAGiE,cAAgB,SAAUC,EAAKC,GAChCA,EAAGC,iBACHD,EAAGE,kBACHrE,EAAG+D,QACDJ,iBAAkBO,EAAIvD,OAI1BX,EAAG4D,gBAAkB,WAChB5D,EAAGiD,cAAcQ,QAAUzD,EAAGsE,WAC/BtE,EAAGiD,cAAcI,QAAQ,SAAUa,GACjCA,EAAII,aACJtE,EAAGsE,UAAUjB,QAAQ,SAAUkB,GAC1BA,EAAIZ,mBAAqBO,EAAIvD,KAC9BuD,EAAII,UAAU9F,KAAK+F,QA/D/BzB,EAAoB7E,SAAW,YAAa,SAAU,UAHtDC,QACGC,OAAO,OACPP,UAAU,uBACTyE,YAAa,uFACbE,WAAYO,EACZN,aAAc,KACdF,UACEgC,UAAW,IACXpB,SAAU,IACVC,SAAU,IACVK,OAAQ,IACRgB,SAAQ,IACRR,kBAAmB,UAoE3B,WAME,QAASS,GAA6BC,EAAc9E,EAAOC,EAAQ8E,EAAWC,EAAqB5B,EAAQ6B,EAAsBC,GAC/H,GAAI9E,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG+E,MAAQ,OACX/E,EAAGgF,cACDC,SAAU,KAEZjF,EAAGkF,QAAU,GAAI,GAAI,GAAI,KACzBlF,EAAGmF,YACDC,KAAM,EACNC,MAAOT,EAAoBzH,IAAI,oBAAsB,IAEvD6C,EAAGsF,YAAcV,EAAoBzH,IAAI,sBACrCoI,KAAM,aACNC,OAAO,GAEXxF,EAAGyF,iBACCf,EAAagB,eACf1F,EAAGyF,cAAcC,aAAehB,EAAagB,cAE/C1C,EAAO2C,OAAO,mBAAoB,WAChC3F,EAAG4F,cACF,GACHd,EAAae,UAAU7F,EAAG+E,OACvBzH,KAAK,SAAU2D,GACdjB,EAAGwD,OAASvC,EAASpD,OAFzBiH,SAIS,WACLjF,EAAOiB,MAAM,uBAAwB,YAK3Cd,EAAG8F,cAAgB,WACjBlB,EAAoBmB,IAAI,kBAAmB/F,EAAGmF,WAAWE,OACzDrF,EAAG4F,aAGL5F,EAAG4F,UAAY,WACb,GAAIxE,GAAQ,YAAcsD,EAAasB,GAAK,GAC5C5E,IAASyD,EAAqB7E,EAAGyF,eAAiB,IAClDrE,GAAS,SAAWpB,EAAGsF,YAAYE,MAAQ,GAAK,KAAOxF,EAAGsF,YAAYC,KAAO,IAC7EnE,EAAQA,EAAQ,QAAUpB,EAAGmF,WAAWC,KAAO,IAC/ChE,EAAQA,EAAQ,SAAWpB,EAAGmF,WAAWE,MACzCzF,EAAMyB,OAAOD,GACV9D,KAAK,SAAU2D,GACdjB,EAAGrD,MAAQsE,EAASpD,KAAKyD,KACzBtB,EAAGmF,WAAW/C,MAAQnB,EAASpD,KAAKuE,MACpCpC,EAAGmF,WAAWC,KAAOnE,EAASpD,KAAKuH,OAJvCxF,SAMS,WACLC,EAAOiB,MAAM,uBAAwB,YAK3Cd,EAAGiG,MAAQ,WACTjG,EAAGyF,iBACHzF,EAAG4F,aAGL5F,EAAGkG,qBAAuB,SAAUC,GAC9BnG,EAAGsF,YAAYC,OAASY,EAC1BnG,EAAGsF,YAAYE,OAASxF,EAAGsF,YAAYE,OAEvCxF,EAAGsF,YAAYC,KAAOY,EACtBnG,EAAGsF,YAAYE,OAAQ,GAEzBZ,EAAoBmB,IAAI,mBAAoB/F,EAAGsF,aAC/CtF,EAAG4F,aAEL5F,EAAGoG,gBAAkB,SAAUjG,GACxBA,EAAKQ,MACRR,EAAKkG,QAAU3B,EAAasB,GAC5B7F,EAAKqD,OAASxD,EAAGwD,OAAO8C,IAAI,SAAUC,GACpC,OACE7C,MAAO6C,KAIb,IAAIC,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,sBACXwC,SACED,KAAM,WACJ,MAAOjC,SAAQyI,KAAKxG,MAK1BqG,GAAcI,OAAOtJ,KAAK,WACxB0C,EAAG4F,eAGP5F,EAAG6G,gBAAkB,WACnB,GAAIL,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,kBACXkJ,KAAM,KACN1G,SACE2G,QAAS,WACP,QAEIZ,IAAK,eACLa,MAAO,gBACPC,KAAM,OACNC,UAAU,IAGVf,IAAK,UACLa,MAAO,UACPC,KAAM,OACNC,UAAU,IAGVf,IAAK,aACLa,MAAO,cACPC,KAAM,OACNC,UAAU,IAGVf,IAAK,OACLa,MAAO,OACPC,KAAM,OACNC,UAAU,KAIhBxG,KAAM,WACJ,MAAO,UAAU7C,GASf,MARAA,GAAKwF,QAAQ,SAAUlD,GACrBA,EAAKkG,QAAU3B,EAAasB,GAC5B7F,EAAKqD,OAASxD,EAAGwD,OAAO8C,IAAI,SAAUC,GACpC,OACE7C,MAAO6C,OAIN3G,EAAMuH,iBAAiBtJ,GAAvB+B,SACE,WACLC,EAAOiB,MAAM,uBAAwB,aAI7CsG,OAAQ,WACN,MAAO,UAAUvJ,GACfA,EAAKwF,QAAQ,SAAUkD,GACrBA,EAAKlG,MAAQkG,EAAKlG,KAAO,GAAIC,MAAK,KAAM,GAAIiG,EAAKlG,KAAO,GAAK,WAOvEmG,GAAcI,OAAdJ,WAA6B,WAC3BxG,EAAG4F,eAGP5F,EAAAA,UAAY,SAAUG,EAAMkH,GAC1B1C,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,wCAGV6F,OAAOtJ,KAAK,WACbsC,EAAM0H,WAAWnH,GACd7C,KAAK,WAEJ0C,EAAG4F,cAHPhG,SAKS,WACLC,EAAOiB,MAAM,uBAAwB,cApL/C2D,EAA6BxG,SAAW,eAAgB,QAAS,SAAU,YAAa,sBAAuB,SAAU,uBAAwB,gBAJjJC,QACGC,OAAO,OACPP,UAAU,gCACTyE,YAAa,mGACbE,WAAYkC,EACZjC,aAAc,UA6LpB,WAgBE,QAAS+E,MAfTrJ,QACGC,OAAO,OACPP,UAAU,uBACTyE,YAAa,yFACbE,WAAYgF,EACZ/E,aAAc,KACdF,UACEgC,UAAW,IACXd,OAAQ,IACRQ,kBAAmB,IACnBQ,SAAQ,UAWhB,WAcE,QAASgD,MAbTtJ,QACGC,OAAO,OACPP,UAAU,yBACTyE,YAAa,6FACbE,WAAYiF,EACZhF,aAAc,KACdF,UACEgC,UAAW,IACXE,SAAQ,UAWhB,WAeE,QAASiD,MAdTvJ,QACGC,OAAO,OACPP,UAAU,sBACTyE,YAAa,uFACbE,WAAYkF,EACZjF,aAAc,KACdF,UACEgC,UAAW,IACXN,kBAAmB,IACnBQ,SAAQ,UAgBhB,WAUE,QAASkD,GAA2B5C,EAAcjF,GAChD,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG0D,MAAQ1D,EAAGI,QAAQsD,MACtBoB,EAAa6C,YACVrK,KAAK,SAAU2D,GACdjB,EAAG4H,MAAQ3G,EAASpD,OAFxBiH,SAIS,WACLjF,EAAOiB,MAAM,sBAAuB,YAG1Cd,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAEtBT,EAAGU,KAAO,WACRV,EAAG6H,gBAAiB,EACjB7H,EAAG0D,MAAM/C,IACVmE,EAAagD,YAAY9H,EAAG0D,OACzBpG,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAG0D,UAFzBoB,SAIS,SAAUhE,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAX1B+D,WAaW,WACP9E,EAAG6H,gBAAiB,IAGxB/C,EAAaiD,YAAY/H,EAAG0D,OACzBpG,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/BiH,SAIS,SAAUhE,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAX1B+D,WAaW,WACP9E,EAAG6H,gBAAiB,KA1D9BH,EAA2BzJ,SAAW,eAAgB,UALtDC,QACGC,OAAO,OACPP,UAAU,8BACTyE,YAAa,6EACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAYmF,EACZlF,aAAc,UAkEpB,WASE,QAASwF,GAAoB9I,EAAM+I,EAAOpI,GACxC,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGzC,KAAOyC,EAAGI,QAAQ7C,IACrB,IAAId,KAEAuK,MAAO,mBACPvF,MAAO,oBAGPuF,MAAO,kBACPvF,MAAO,mBAGPuF,MAAO,cACPvF,MAAO,eAGPuF,MAAO,aACPvF,MAAO,cAGPuF,MAAO,cACPvF,MAAO,UAGPuF,MAAO,UACPvF,MAAO,WAGXvC,GAAK7B,iBACFC,KAAK,SAAUC,GACG,UAAdA,EAAKE,KACNuC,EAAGlC,MAAQrB,EACY,oBAAdc,EAAKE,KACduC,EAAGlC,MAAQrB,EAASyL,OAAO,SAAUzK,GACnC,MAAOA,GAAKgE,MAAMjE,QAAQ,yBAEL,eAAdD,EAAKE,KACduC,EAAGlC,MAAQrB,EAASyL,OAAO,SAAUzK,GACnC,MAAOA,GAAKgE,MAAMjE,QAAQ,oBAG5BwC,EAAGlC,YAKXkC,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAEtBT,EAAGU,KAAO,WACLV,EAAGzC,KAAKoD,IACTsH,EAAME,WAAWnI,EAAGzC,MACjBD,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/BoK,SAIS,SAAUnH,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAG1BkH,EAAMG,WAAWpI,EAAGzC,MACjBD,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/BoK,SAIS,SAAUnH,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,YAtFhCiH,EAAoB/J,SAAW,OAAQ,QAAS,UANhDC,QACGC,OAAO,OACPP,UAAU,uBACTyE,YAAa,yDACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAYyF,EACZxF,aAAc,UAyFpB,WAgBE,QAAS6F,MAfTnK,QACGC,OAAO,OACPP,UAAU,wBACTyE,YAAa,kEACbE,WAAY8F,EACZ7F,aAAc,KACdF,UACEgG,QAAS,IACT9D,SAAQ,IACRc,YAAa,IACbY,qBAAsB,UAkB9B,WAGE,QAASqC,GACPxI,EACA+E,EACAjF,EACA8E,EACA7E,EACAF,EACA4I,EACAhJ,EACAkF,EACA+D,EACAzF,EACA9D,GACA,GAAIc,GAAKC,IACTD,GAAGE,QAAU,WACXhB,EAAK7B,iBACFC,KAAK,SAAUC,GACdyC,EAAGzC,KAAOA,IAEdyC,EAAG+E,MAAQ,MACX/B,EAAO2C,OAAO,SAAU3F,EAAG0I,gBAAgB,GAC3C1I,EAAG2I,eAAiB7D,EAAAA,UAAoB,SACxC9E,EAAG4I,WACAlE,EAAasB,IACdhG,EAAG6I,UAAW,EACdL,EAAIM,OAAOpE,EAAasB,IACrB1I,KAAK,SAAU2D,GACdjB,EAAG+I,IAAM9H,EAASpD,OAFtB2K,SAKS,WACL3I,EAAOiB,MAAM,oBAAqB,aAItCd,EAAG6I,UAAW,EACd7I,EAAG+I,OACH/I,EAAG+I,IAAIC,YACPhJ,EAAG4I,QAAQK,iBAAmB,KAAOR,EAAQ,QAAQ,GAAInI,MAAQ,aAGnEN,EAAGkJ,oBAGLlJ,EAAGkB,aAAe,SAAUC,GAC1B,GAAIC,GAAQ,yBAA2BD,CACvC,OAAOpB,GAAUsB,OAAOD,GACrB9D,KAAK,SAAU2D,GACd,MAAOA,GAASpD,KAAKyD,QAI3BtB,EAAGmJ,WAAa,SAAUC,GACxB,GAAIhI,GAAQ,iCAAmCgI,CAC/C,OAAOxJ,GAAMyB,OAAOD,GACjB9D,KAAK,SAAU2D,GACd,MAAOA,GAASpD,KAAKyD,QAI3BtB,EAAGqJ,kBAAoB,SAAUlF,GAC/BA,EAAGC,iBACHpE,EAAGsJ,qBACAhM,KAAK,SAAUkG,GACd,GAAI+F,KAMJ,OALAA,GAAS/F,OAASA,EAAO8C,IAAI,SAAUC,GACrC,OACE7C,MAAO6C,KAGJgD,IAERjM,KAAK,SAAUiM,GACd,MAAO5E,GAAU8B,MACfC,WAAW,EACX9I,UAAW,0BACXwC,SACEmJ,SAAU,WACR,MAAOrL,SAAQyI,KAAK4C,SAK3BjM,KAAK,SAAUkJ,GACdA,EAAcI,OAAOtJ,KAAK,SAAUiM,GAClCvJ,EAAG+I,IAAIQ,SAAWA,EAClBvJ,EAAGwJ,yBAKXxJ,EAAGsJ,mBAAqB,WACtB,MAAOxE,GAAae,UAAU,YAC3BvI,KAAK,SAAU2D,GACd,MAAOA,GAASpD,OAFbiH,SAIE,WACLjF,EAAOiB,MAAM,uBAAwB,YAI3Cd,EAAGwJ,kBAAoB,SAAUC,GAC/BzJ,EAAG4I,QAAQc,qBAAuBD,GAGpCzJ,EAAG2J,sBAAwB,WACzB,IAAI3J,EAAG0F,aAAc,OAAO,CAC5B,IAAIkE,GAAW5J,EAAG+I,IAAIC,SAASa,KAAK,SAAUtD,GAC5C,MAAOA,GAAKpG,KAAKQ,MAAQX,EAAG0F,aAAa/E,KAEvCiJ,KACF5J,EAAG+I,IAAIC,SAASxK,MACdsL,QAAQ,EACR3J,KAAMH,EAAG0F,aACTlC,OAAQxD,EAAG+J,aAAazD,IAAI,SAAU5C,GACpC,OACEA,MAAOA,EACPjC,MAAO,QAITzB,EAAG+I,IAAIQ,WACTvJ,EAAG+I,IAAIQ,SAAWvJ,EAAG0F,aAAa6D,SAClCvJ,EAAGwJ,mBAAkB,KAGzBxJ,EAAG0F,aAAe,IAGpB1F,EAAGgK,mBAAqB,SAAUZ,GAChC,IAAI,GAAI7F,GAAI,EAAGA,EAAIvD,EAAG+I,IAAIC,SAASvF,OAAQF,IACzC,GAAGvD,EAAG+I,IAAIC,SAASzF,GAAG5C,MAAQyI,EAAGzI,IAAK,CACpCX,EAAG+I,IAAIC,SAASiB,OAAO1G,EAAG,EAC1B,QAGAvD,EAAG+I,IAAIC,SAASvF,QAAUzD,EAAG4I,QAAQc,qBACvC1J,EAAG+I,IAAIQ,SAAW,KAItBvJ,EAAGkJ,iBAAmB,WACpBpE,EAAae,UAAU7F,EAAG+E,OACvBzH,KAAK,SAAU2D,GACdjB,EAAG+J,aAAe9I,EAASpD,OAF/BiH,SAIS,WACLjF,EAAOiB,MAAM,uBAAwB,YAG3Cd,EAAGU,KAAO,WAER,MADAV,GAAG+I,IAAImB,WAAalK,EAAG+I,IAAIC,SAASvF,SAChCzD,EAAG+I,IAAImB,aACXlK,EAAG+I,IAAIoB,YAAcnK,EAAG+I,IAAIC,SAASd,OAAO,SAAU7B,GACpD,MAAOA,GAAQyD,SACdrG,OACHzD,EAAG+I,IAAIe,OAAS9J,EAAG+I,IAAImB,aAAelK,EAAG+I,IAAIoB,iBAC1CnK,EAAG6I,SACJL,EAAI4B,OAAOpK,EAAG+I,KACXzL,KAAK,WACJkC,EAAO9B,GAAG,SAFd8K,SAIS,WACL3I,EAAOiB,MAAM,uBAAwB,YAGzCd,EAAG+I,IAAIsB,WAAarK,EAAG4I,QAAQK,iBAAmBjJ,EAAG4I,QAAQ0B,kBAC7D9B,EAAIzE,OAAO/D,EAAG+I,KACXzL,KAAK,WACJkC,EAAO9B,GAAG,SAFd8K,SAIS,WACL3I,EAAOiB,MAAM,uBAAwB,eAK7Cd,EAAGuB,YAAc,SAAUC,GACtBA,EAAIC,QACLD,EAAIC,MAAQ,GAAInB,MAAKkB,EAAIC,SAI7BzB,EAAG0B,OAAS,SAAUC,EAAMH,GAC1B1B,EAAO4B,QACL3D,IAAK,cACLF,MACE8D,KAAMA,KAGPrE,KAAK,SAAU2D,GACdO,EAAIC,MAAQR,EAASpD,MACpB,SAAU+D,GACXC,QAAQC,IAAI,iBAAmBF,EAAKG,SACnC,SAAUC,GACXR,EAAIS,SAAWC,SAAS,IAAQF,EAAIG,OAASH,EAAII,UAIvDpC,EAAGuK,kBAAoB,SAAUnB,GAC/BA,EAAGoB,UAAYpB,EAAGoB,UAEpBxK,EAAG0I,eAAiB,WAClB,IAAI1I,EAAG+I,MAAQ/I,EAAG+I,IAAIQ,WAAavJ,EAAG+I,IAAIC,SAASvF,OACjD,MAAOzD,GAAGyK,iBAAkB,CAE9B,IAAIC,GAAkB1K,EAAG+I,IAAIC,SAASd,OAAO,SAAU7B,GACrD,OAAIA,EAAQlG,KAAKoJ,UACVlD,EAAQlG,KAAKoJ,SAAS5I,MAAQX,EAAG+I,IAAIQ,SAAS5I,KAEvDX,GAAGyK,kBAAoBC,EAAgBjH,QAEzCzD,EAAG2K,sBAAwB,WACzB,QAAI3K,EAAG+I,IAAIQ,cACXvJ,GAAG+I,IAAIC,SAAS3F,QAAQ,SAAUgD,GAChCA,EAAQlG,KAAKoJ,SAAWvJ,EAAG+I,IAAIQ,YAzNrChB,EAAmBtK,SAAW,YAAa,eAAgB,SAAU,YAAa,SAAU,QAAS,MAAO,SAAU,eAAgB,UAAW,SAAU,QAP3JC,QACGC,OAAO,OACPP,UAAU,sBACTyE,YAAa,sDACbE,WAAYgG,EACZ/F,aAAc,UA6OpB,WAOE,QAASoI,GAAqBC,EAAQhL,GACpC,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG0D,MAAQ1D,EAAGI,QAAQsD,MACtBmH,EAAOlD,YACJrK,KAAK,SAAU2D,GACdjB,EAAG4H,MAAQ3G,EAASpD,OAFxBgN,SAIS,WACLhL,EAAOiB,MAAM,sBAAuB,YAG1Cd,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAEtBT,EAAGU,KAAO,WACRV,EAAG6H,gBAAiB,EACjB7H,EAAG0D,MAAM/C,IACVkK,EAAO/C,YAAY9H,EAAG0D,OACnBpG,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAG0D,UAFzBmH,SAIS,SAAU/J,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAX1B8J,WAaW,WACP7K,EAAG6H,gBAAiB,IAGxBgD,EAAO9C,YAAY/H,EAAG0D,OACnBpG,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/BgN,SAIS,SAAU/J,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAX1B8J,WAaW,WACP7K,EAAG6H,gBAAiB,KAvD9B+C,EAAqB3M,SAAW,SAAU,UAR1CC,QACGC,OAAO,OACPP,UAAU,wBACTyE,YAAa,2DACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAYqI,EACZpI,aAAc,UAqEpB,WAME,QAASsI,GAAwB/H,EAAWjD,GAC1C,GAAIE,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGsD,SAAWtD,EAAGI,QAAQkD,UAE3BtD,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAEtBT,EAAGU,KAAO,WACRV,EAAG6H,gBAAiB,EACjB7H,EAAGsD,SAAS3C,IACboC,EAAUgI,eAAe/K,EAAGsD,UACzBhG,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAGsD,aAFzBP,SAIS,SAAUjC,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,OAAOiB,MAAMC,EAAS,WAX1BgC,WAaW,WACP/C,EAAG6H,gBAAiB,IAGxB9E,EAAUiI,eAAehL,EAAGsD,UACzBhG,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/BkF,SAIS,SAAUjC,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,OAAOiB,MAAMC,EAAS,WAX1BgC,WAaW,WACP/C,EAAG6H,gBAAiB,KAK5B7H,EAAGuB,YAAc,SAAUC,GACtBA,EAAIC,QACLD,EAAIC,MAAQ,GAAInB,MAAKkB,EAAIC,SAI7BzB,EAAG0B,OAAS,SAAUC,EAAMH,GAC1B1B,EAAO4B,QACL3D,IAAK,cACLF,MACE8D,KAAMA,KAGPrE,KAAK,SAAU2D,GACdO,EAAIC,MAAQR,EAASpD,MACpB,SAAU+D,GACXC,QAAQC,IAAI,iBAAmBF,EAAKG,SACnC,SAAUC,GACXR,EAAIS,SAAWC,SAAS,IAAQF,EAAIG,OAASH,EAAII,UAtEzD0I,EAAwB7M,SAAW,YAAa,UAThDC,QACGC,OAAO,OACPP,UAAU,2BACTyE,YAAa,yEACbE,WAAYuI,EACZtI,aAAc,KACdF,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,UA4EjB,WAgBE,QAASyK,KACP,GAAIjL,GAAKC,IAETD,GAAGiG,MAAQ,WACTjG,EAAGkL,WACHlL,EAAGmL,UAELnL,EAAGmL,OAAS,WACVnL,EAAGoL,kBACDF,QAASlL,EAAGkL,WAxBlBhN,QACGC,OAAO,OACPP,UAAU,yBACTyE,YAAa,mEACbC,UACE8I,iBAAkB,IAClBF,QAAS,IACTG,gBAAiB,IACjBC,KAAM,KAER/I,WAAY0I,EACZzI,aAAc,UAmBpB,WAiBE,QAAS+I,MAhBTrN,QACGC,OAAO,OACPP,UAAU,uBACTyE,YAAa,+DACbE,WAAYgJ,EACZ/I,aAAc,KACdF,UACEkJ,QAAS,IACTH,gBAAiB,IACjB7G,SAAQ,IACRc,YAAa,IACbY,qBAAsB,UAqB9B,WAAE,QAASuF,GAAsB/G,EAAcgH,EAAUhJ,EAAQ7C,GAC7D,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXwL,EAASC,gBACNrO,KAAK,SAAU2D,GACdjB,EAAG4L,WAAa3K,EAASpD,OAF7B6N,SAIS,WACL7L,EAAOiB,MAAM,2BAA4B,WAE7C4B,EAAOmJ,UAAUnH,EAAasB,IAC3B1I,KAAK,SAAU2D,GACdjB,EAAG2C,OAAS1B,EAASpD,OAFzB6E,SAIS,WACL7C,EAAOiB,MAAM,4BAA6B,YAdlD2K,EAAsBxN,SAAW,eAAgB,WAAY,SAAU,UAVvEC,QACGC,OAAO,OACPP,UAAU,yBACTyE,YAAa,mEACbE,WAAYkJ,EACZjJ,aAAc,UAoCpB,WADE,QAASsJ,GAAwBpH,EAAc3B,EAAW8H,EAAQlG,EAAW+G,GAC3E,GAAI1L,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGkD,SAAWwB,EAAasB,GAC3BhG,EAAG+L,WAAarH,EAAaqH,WAC7B/L,EAAGgM,gBACHN,EAASO,YAAYvH,EAAaqH,YAC/BzO,KAAK,SAAU2D,GACdjB,EAAGmD,SAAWlC,EAASpD,OAE3BgN,EAAOhF,UAAUnB,EAAaqH,YAC3BzO,KAAK,SAAU2D,GACdjB,EAAGwD,OAASvC,EAASpD,QAG3BmC,EAAGgM,cAAgB,WACjBjJ,EAAU1B,OAAOqD,EAAasB,GAAItB,EAAaqH,YAC5CzO,KAAK,SAAU2D,GACdjB,EAAGsE,UAAYrD,EAASpD,QAG9BmC,EAAGgE,kBAAoB,SAAUV,GAC1BA,EAAS3C,MACZ2C,EAASH,SAAWuB,EAAaqH,WACjCzI,EAAS+C,QAAU3B,EAAasB,GAChC1C,EAASE,OAASxD,EAAGwD,OAAO8C,IAAI,SAAUC,GACxC,OACE7C,MAAO6C,KAIb,IAAIC,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,0BACXwC,SACEkD,SAAU,WACR,MAAOpF,SAAQyI,KAAKrD,MAK1BkD,GAAcI,OAAOtJ,KAAK,WACxB0C,EAAGgM,mBAGPhM,EAAAA,UAAY,SAAUsD,GACpBqB,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,4CAGV6F,OAAOtJ,KAAK,WACbyF,EAAUmJ,eAAe5I,GACtBhG,KAAK,WACJ0C,EAAGgM,kBAFPjJ,SAIS,WACLlD,OAAOiB,MAAM,uBAAwB,cA3D/CgL,EAAwB7N,SAAW,eAAgB,YAAa,SAAU,YAAa,YAXvFC,QACGC,OAAO,OACPP,UAAU,2BACTyE,YAAa,uEACbE,WAAYuJ,EACZtJ,aAAc,UAqFpB,WAGE,QAAS2J,GAAwBpM,EAAWF,EAAQiF,EAAchF,GAChE,GAAIE,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGwD,OAASsB,EAAAA,UAAoB,SAChC9E,EAAGuJ,SAAWvJ,EAAGI,QAAQmJ,UAE3BvJ,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAGtBT,EAAGuB,YAAc,SAAUC,GACtBA,EAAIC,QACLD,EAAIC,MAAQ,GAAInB,MAAKkB,EAAIC,SAI7BzB,EAAG0B,OAAS,SAAUC,EAAMH,GAC1B1B,EAAO4B,QACL3D,IAAK,cACLF,MACE8D,KAAMA,KAGPrE,KAAK,SAAU2D,GACdO,EAAIC,MAAQR,EAASpD,MACpB,SAAU+D,GACXC,QAAQC,IAAI,iBAAmBF,EAAKG,SACnC,SAAUC,GACXR,EAAIS,SAAWC,SAAS,IAAQF,EAAIG,OAASH,EAAII,UAGvDpC,EAAGU,KAAO,WACLV,EAAGuJ,SAAS5I,IACbZ,EAAUqK,OAAOpK,EAAGuJ,UACjBjM,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAGuJ,aAFzBxJ,SAIS,SAAUe,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAG1BhB,EAAUgE,OAAO/D,EAAGuJ,UACjBjM,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/BkC,SAIS,SAAUe,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,YA5DhCoL,EAAwBlO,SAAW,YAAa,SAAU,eAAgB,UAZ1EC,QACGC,OAAO,OACPP,UAAU,2BACTyE,YAAa,uDACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAY4J,EACZ3J,aAAc,UAkFpB,WAHE,QAAS4J,GAAgBtH,EAAcJ,EAAc7E,EAAQL,EAAQmF,GACnE,GAAI3E,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG+E,MAAQL,EAAaK,MAAM,GAAGsH,cAAgB3H,EAAaK,MAAMuH,MAAM,GAC1EtM,EAAG+J,aAAejF,EAAAA,UAAoB9E,EAAG+E,OACpC/E,EAAG+J,eACNlK,EAAOiB,MAAM,0BAA4Bd,EAAG+E,MAAQ,aAAc,SAClEvF,EAAO9B,GAAG,eAEZoH,EAAae,UAAU7F,EAAG+E,OACvBzH,KAAK,SAAU2D,GACdjB,EAAGwD,OAASvC,EAASpD,OAFzBiH,SAIS,WACLjF,EAAOiB,MAAM,uBAAwB,YAG3Cd,EAAGuM,eAAiB,SAAU7I,EAAO2D,GAC/B3D,EAAMqB,QAAOrB,EAAMqB,MAAQ/E,EAAG+E,OAClCrB,EAAMwD,WAAaxD,EAAMwD,QACzB,IAAIV,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,6BACXwC,SACEsD,MAAO,WACL,MAAOxF,SAAQyI,KAAKjD,MAK1B8C,GAAcI,OAAOtJ,KAAK,SAAUsJ,GAC/BlD,EAAM/C,MAAQiG,EAAOjG,IACtBX,EAAGwD,OAAO6D,GAAST,EAEnB5G,EAAGwD,OAAOhF,KAAKoI,MAIrB5G,EAAAA,UAAY,SAAU0D,EAAO2D,GAC3B1C,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,gCAAkC2C,EAAM8I,MAAQ,QAG1D5F,OAAOtJ,KAAK,WACbwH,EAAa2H,YAAY/I,GACtBpG,KAAK,WACJ0C,EAAGwD,OAAOyG,OAAO5C,EAAO,KAF5BvC,SAIS,WACLjF,EAAOiB,MAAM,uBAAwB,cAlD/CsL,EAAgBnO,SAAW,eAAgB,eAAgB,SAAU,SAAU,aAb/EC,QACGC,OAAO,OACPP,UAAU,mBACTyE,YAAa,yDACbE,WAAY6J,EACZ5J,aAAc,UA+EpB,WACE,QAASkK,GAAwBhB,EAAU7L,GACzC,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGmD,SAAWnD,EAAGI,QAAQ+C,SACzBuI,EAASiB,sBACNrP,KAAK,SAAU2D,GAEd,GADAjB,EAAG4M,mBAAqB3L,EAASpD,KAC7BmC,EAAGmD,SAASxC,KAA4B,2BAArBX,EAAGmD,SAAS8D,KAAmC,CACpE,IAAI,GAAI1D,GAAI,EAAGA,EAAIvD,EAAG4M,mBAAmBnJ,OAAQF,IAC/C,GAAGvD,EAAG4M,mBAAmBrJ,GAAG5C,MAAQX,EAAGmD,SAASC,gBAAgB,CAC9DpD,EAAGmD,SAASC,gBAAkBpD,EAAG4M,mBAAmBrJ,EACpD,OAGJ,IAAIA,EAAI,EAAGA,EAAIvD,EAAGmD,SAASC,gBAAgBI,OAAOC,OAAQF,IACxD,GAAGvD,EAAGmD,SAASC,gBAAgBI,OAAOD,GAAG5C,MAAQX,EAAGmD,SAASQ,iBAAiB,CAC5E3D,EAAGmD,SAASQ,iBAAmB3D,EAAGmD,SAASC,gBAAgBI,OAAOD,EAClE,WAbVmI,SAkBS,WACL7L,EAAOiB,MAAM,uBAAwB,WAGzCd,EAAG6M,cAAgB,QAAS,cAAe,UAAW,2BAGxD7M,EAAG8M,qBAAsB,iBAChB9M,GAAGmD,SAASC,gBACnBpD,EAAG+M,qBAGL/M,EAAG+M,kBAAoB,iBACd/M,GAAGmD,SAASQ,kBAGrB3D,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAGtBT,EAAGU,KAAO,WACRV,EAAG6H,gBAAiB,EACjB7H,EAAGmD,SAASxC,IACb+K,EAASsB,eAAehN,EAAGmD,UACxB7F,KAAK,WACJ0C,EAAGa,OAAOJ,OAAQT,EAAGmD,aAFzBuI,SAIS,SAAU5K,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAX1B2K,WAaW,WACP1L,EAAG6H,gBAAiB,IAGxB6D,EAASuB,eAAejN,EAAGmD,UACxB7F,KAAK,SAAU2D,GACdjB,EAAGa,OAAOJ,OAAQQ,EAASpD,SAF/B6N,SAIS,SAAU5K,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,WAX1B2K,WAaW,WACP1L,EAAG6H,gBAAiB,KA5E9B6E,EAAwBzO,SAAW,WAAY,UAd/CC,QACGC,OAAO,OACPP,UAAU,2BACTyE,YAAa,kEACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAYmK,EACZlK,aAAc,UAsGpB,WALE,QAAS0K,GAAehO,EAAM+I,EAAOtD,GACnC,GAAI3E,GAAKC,IACTD,GAAGE,QAAU,WACXhB,EAAK7B,iBACFC,KAAK,SAAUC,GACdyC,EAAGzC,KAAOA,IAEd0K,EAAMkF,WACH7P,KAAK,SAAU2D,GACdjB,EAAGoN,MAAQnM,EAASpD,OAFxBoK,SAIS,WACLpI,OAAOiB,MAAM,uBAAwB,YAK3Cd,EAAGqN,cAAgB,SAAU9P,EAAM8J,GACjC,GAAIb,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,sBACXwC,SACE7C,KAAM,WACJ,MAAOW,SAAQyI,KAAKpJ,MAK1BiJ,GAAcI,OAAOtJ,KAAK,SAAUsJ,GAC/BrJ,EAAKoD,MAAQiG,EAAOjG,IACrBX,EAAGoN,MAAM/F,GAAST,EAElB5G,EAAGoN,MAAM5O,KAAKoI,MAIpB5G,EAAAA,UAAY,SAAUzC,EAAM8J,GAC1B1C,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,+BAAiCxD,EAAK+P,KAAO,QAGvD1G,OAAOtJ,KAAK,WACb2K,EAAMsF,WAAWhQ,GACdD,KAAK,WACJ0C,EAAGoN,MAAMnD,OAAO5C,EAAO,KAF3BY,SAIS,WACLpI,OAAOiB,MAAM,uBAAwB,cA9C/CoM,EAAejP,SAAW,OAAQ,QAAS,aAf3CC,QACGC,OAAO,OACPP,UAAU,kBACTyE,YAAa,4CACbE,WAAY2K,EACZ1K,aAAc,UA+EpB,WANE,QAASgL,GAAiB5I,EAAqBhF,EAAOC,EAAQ8E,EAAWE,GACvE,GAAI7E,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGsI,WACHtI,EAAGsF,YAAcV,EAAoBzH,IAAI,wBACrCoI,KAAM,gBACNC,OAAO,GAEXxF,EAAGkF,QAAU,GAAI,GAAI,GAAI,KACzBlF,EAAGmF,YACDC,KAAM,EACNC,MAAOT,EAAoBzH,IAAI,oBAAsB,IAEvD6C,EAAGkL,QAAUtG,EAAoBzH,IAAI,sBAClC6C,EAAGkL,QAAQuC,WACZzN,EAAGkL,QAAQuC,SAAW,GAAInN,MAAKN,EAAGkL,QAAQuC,WAEzCzN,EAAGkL,QAAQwC,SACZ1N,EAAGkL,QAAQwC,OAAS,GAAIpN,MAAKN,EAAGkL,QAAQwC,SAE1C1N,EAAG2N,eAEL3N,EAAG8F,cAAgB,WACjBlB,EAAoBmB,IAAI,kBAAmB/F,EAAGmF,WAAWE,OACzDrF,EAAG2N,eAGL3N,EAAG2N,YAAc,WACf,GAAIvM,GAAQ,IACRwM,EAAc1P,QAAQyI,KAAK3G,EAAGkL,QAC/B0C,GAAYvH,UACbuH,EAAYvH,QAAUuH,EAAYvH,QAAQ1F,KAE5CS,GAASyD,EAAqB+I,GAAe,IAM7CxM,EAAQA,EAAQ,SAAWpB,EAAGsF,YAAYE,MAAQ,GAAK,KAAOxF,EAAGsF,YAAYC,KAAO,IACpFnE,EAAQA,EAAQ,QAAUpB,EAAGmF,WAAWC,KAAO,IAC/ChE,EAAQA,EAAQ,SAAWpB,EAAGmF,WAAWE,MACzCzF,EAAMyB,OAAOD,GACV9D,KAAK,SAAU2D,GACdjB,EAAGsI,QAAUrH,EAASpD,KAAKyD,KAC3BtB,EAAGmF,WAAW/C,MAAQnB,EAASpD,KAAKuE,MACpCpC,EAAGmF,WAAWC,KAAOnE,EAASpD,KAAKuH,OAJvCxF,SAMS,WACLC,EAAOiB,MAAM,uBAAwB,YAI3Cd,EAAGkG,qBAAuB,SAAUC,GAC/BnG,EAAGsF,YAAYC,OAASY,EACzBnG,EAAGsF,YAAYE,OAASxF,EAAGsF,YAAYE,OAEvCxF,EAAGsF,YAAYC,KAAOY,EACtBnG,EAAGsF,YAAYE,OAAQ,GAEzBZ,EAAoBmB,IAAI,qBAAsB/F,EAAGsF,aACjDtF,EAAG2N,eAGL3N,EAAGoL,iBAAoB,SAAUF,GAC/BtG,EAAoBmB,IAAI,iBAAkBmF,GAC1ClL,EAAGkL,QAAUA,EACblL,EAAG2N,eAGL3N,EAAAA,UAAY,SAAU6N,GACpBlJ,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,wCAA0C8M,EAAOnI,aAAe,QAG1EkB,OAAOtJ,KAAK,WACbsC,EAAM0H,WAAWuG,GACdvQ,KAAK,WACJ0C,EAAG2N,gBAFP/N,SAIS,WACLC,EAAOiB,MAAM,uBAAwB,cA/E/C0M,EAAiBvP,SAAW,sBAAuB,QAAS,SAAU,YAAa,wBAhBnFC,QACGC,OAAO,OACPP,UAAU,oBACTyE,YAAa,gDACbE,WAAYiL,EACZhL,aAAc,UAoHpB,WAPE,QAASsL,GAAatF,EAAK3I,EAAQ+E,EAAqBD,EAAWE,GACjE,GAAI7E,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG+N,SACH/N,EAAGsF,YAAcV,EAAoBzH,IAAI,oBACrCoI,KAAM,aACNC,OAAO,GAEXxF,EAAGkF,QAAU,GAAI,GAAI,GAAI,KACzBlF,EAAGmF,YACD/C,MAAO,EACPgD,KAAM,EACNC,MAAOT,EAAoBzH,IAAI,oBAAsB,IAEvD6C,EAAGkL,QAAUtG,EAAoBzH,IAAI,kBACrC6C,EAAGgO,WAGLhO,EAAG8F,cAAgB,WACjBlB,EAAoBmB,IAAI,kBAAmB/F,EAAGmF,WAAWE,OACzDrF,EAAGgO,WAGLhO,EAAGoL,iBAAoB,SAAUF,GAC/BtG,EAAoBmB,IAAI,aAAcmF,GACtClL,EAAGkL,QAAUA,EACblL,EAAGgO,WAGLhO,EAAGkG,qBAAuB,SAAUC,GAC/BnG,EAAGsF,YAAYC,OAASY,EACzBnG,EAAGsF,YAAYE,OAASxF,EAAGsF,YAAYE,OAEvCxF,EAAGsF,YAAYC,KAAOY,EACtBnG,EAAGsF,YAAYE,OAAQ,GAEzBZ,EAAoBmB,IAAI,iBAAkB/F,EAAGsF,aAC7CtF,EAAGgO,WAGLhO,EAAGgO,QAAU,WACX,GAAI5M,GAAQ,GACZA,IAASyD,EAAqB7E,EAAGkL,SAAW,IAC5C9J,EAAQA,EAAQ,SAAWpB,EAAGsF,YAAYE,MAAQ,GAAK,KAAOxF,EAAGsF,YAAYC,KAAO,IACpFnE,EAAQA,EAAQ,QAAUpB,EAAGmF,WAAWC,KAAO,IAC/ChE,EAAQA,EAAQ,SAAWpB,EAAGmF,WAAWE,MACzCmD,EAAInH,OAAOD,GACR9D,KAAK,SAAU2D,GACdjB,EAAG+N,MAAQ9M,EAASpD,KAAKyD,KAMzBtB,EAAGmF,WAAW/C,MAAQnB,EAASpD,KAAKuE,MACpCpC,EAAGmF,WAAWC,KAAOnE,EAASpD,KAAKuH,OATvCoD,SAWS,WACL3I,EAAOiB,MAAM,uBAAwB,YAI3Cd,EAAAA,UAAY,SAAU+I,GACpBpE,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,8BAAgCgI,EAAIsB,WAAa,SAG3DzD,OAAOtJ,KAAK,WACbkL,EAAAA,UAAWO,GACRzL,KAAK,WACJ0C,EAAGgO,YAFPxF,SAIS,WACL3I,EAAOiB,MAAM,uBAAwB,cAK7Cd,EAAGiG,MAAQ,WACTjG,EAAGkL,WACHlL,EAAGgO,WA7EPF,EAAa7P,SAAW,MAAO,SAAU,sBAAuB,YAAa,wBAjB7EC,QACGC,OAAO,OACPP,UAAU,gBACTyE,YAAa,wCACbE,WAAYuL,EACZtL,aAAc,UAgHpB,WARE,QAASyL,GAAiB/O,GACxB,GAAIc,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGkO,gBAAiB,EACpBhP,EAAK7B,iBACFC,KAAK,SAAUC,GACdyC,EAAGzC,KAAOA,KAGlB0Q,EAAiBhQ,SAAW,QAlB5BC,QACGC,OAAO,OACPP,UAAU,mBACTyE,YAAa,8CACbE,WAAY0L,EACZzL,aAAc,UAgBpB,WAUE,QAAS2L,KACP,GAAInO,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAGoO,YAAc,GAAI9N,OAZzBpC,QACGC,OAAO,OACPP,UAAU,iBACTyE,YAAa,0CACbE,WAAY4L,EACZ3L,aAAc,UA+BpB,WATE,QAAS6L,GAAenP,EAAMM,EAAQK,GACpC,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXhB,EAAKoP,SACLtO,EAAGnC,SAELmC,EAAGuO,MAAQ,WACTrP,EAAKqP,MAAMvO,EAAGnC,MACXP,KAAK,SAAUkR,GACU,eAArBA,EAAY/Q,MAA8C,cAArB+Q,EAAY/Q,KAClD+B,EAAO9B,GAAG,WAEiB,YAArB8Q,EAAY/Q,KAClB+B,EAAO9B,GAAG,OAEP8B,EAAO9B,GAAG,UARnBwB,SAUS,SAAU4B,GACf,GAAIC,EAEFA,GADED,EAAMjD,MAAQiD,EAAMjD,KAAKkD,QACjBD,EAAMjD,KAAKkD,QAEX,uBAEZlB,EAAOiB,MAAMC,EAAS,YAd9BsN,EAAepQ,SAAW,OAAQ,SAAU,UAnB5CC,QACGC,OAAO,OACPP,UAAU,kBACTyE,YAAa,4CACbE,WAAY8L,EACZ7L,aAAc,UAmCpB,WAeE,QAASiM,KACP,GAAIzO,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG6H,gBAAiB,EACpB7H,EAAG+G,QAAU/G,EAAGI,QAAQ2G,QACxB/G,EAAGnC,QACHmC,EAAG0O,cACH1O,EAAGmF,YACDE,MAAO,GACPsJ,MAAO,EACPvM,MAAO,EACPwM,KAAM,IAGV5O,EAAG6O,eAAiB,WAClB7O,EAAG6H,gBAAiB,GAGtB7H,EAAG8O,cAAgB,SAAUjR,GAC3BmC,EAAGnC,KAAOA,EACPmC,EAAGI,QAAQgH,QACZpH,EAAGI,QAAQgH,OAAOpH,EAAGnC,MAEvBmC,EAAGmF,WAAW/C,MAAQpC,EAAGnC,KAAK4F,OAC9BzD,EAAGmF,WAAWyJ,KAAO,EACrB5O,EAAGmF,WAAWwJ,MAAQI,KAAKC,KAAKhP,EAAGmF,WAAW/C,MAAQpC,EAAGmF,WAAWE,OACpErF,EAAGiP,WACHjP,EAAG6H,gBAAiB,GAGtB7H,EAAGiP,SAAU,WACXjP,EAAGmF,WAAWyJ,OACd5O,EAAG0O,WAAa1O,EAAGnC,KAAKoM,OAAO,EAAGjK,EAAGmF,WAAWE,QAGlDrF,EAAGU,KAAO,WACRV,EAAG6H,gBAAiB,EACpB7H,EAAGI,QAAQM,KAAKV,EAAG0O,YAChBpR,KAAK,WACA0C,EAAGnC,KAAK4F,OAGVzD,EAAGiP,WAFHjP,EAAGa,UAHTb,WAQW,WACPA,EAAG6H,gBAAiB,KAI1B7H,EAAGO,OAAS,WACVP,EAAGQ,SAASC,OAAQ,YAjExBvC,QACGC,OAAO,OACPP,UAAU,mBACTyE,YAAa,8CACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAYkM,EACZjM,aAAc,UAgFpB,WAVE,QAAS0M,GAAetK,EAAqBlC,EAAQ7C,EAAQ8E,GAC3D,GAAI3E,GAAKC,IAETD,GAAGE,QAAU,WAEXF,EAAGwL,WACHxL,EAAGsF,YAAcV,EAAoBzH,IAAI,uBACvCoI,KAAM,QACNC,OAAO,GAETxF,EAAGkF,QAAU,GAAI,GAAI,GAAI,KACzBlF,EAAGmF,YACDC,KAAM,EACNC,MAAOT,EAAoBzH,IAAI,oBAAsB,IAEvD6C,EAAGkL,QAAUtG,EAAoBzH,IAAI,qBACrC6C,EAAGmP,eAGLnP,EAAG8F,cAAgB,WACjBlB,EAAoBmB,IAAI,kBAAmB/F,EAAGmF,WAAWE,OACzDrF,EAAGmP,eAGLnP,EAAGoL,iBAAoB,SAAUF,GAC/BtG,EAAoBmB,IAAI,gBAAiBmF,GACzClL,EAAGkL,QAAUA,EACblL,EAAGmP,eAGLnP,EAAGkG,qBAAuB,SAAUC,GAC/BnG,EAAGsF,YAAYC,OAASY,EACzBnG,EAAGsF,YAAYE,OAASxF,EAAGsF,YAAYE,OAEvCxF,EAAGsF,YAAYC,KAAOY,EACtBnG,EAAGsF,YAAYE,OAAQ,GAEzBZ,EAAoBmB,IAAI,oBAAqB/F,EAAGsF,aAChDtF,EAAGmP,eAGLnP,EAAGmP,YAAc,WACf,GAAI/N,GAAQ,GACZ,KAAI,GAAI+E,KAAOnG,GAAGkL,QACblL,EAAGkL,QAAQ/E,KACZ/E,EAAQA,EAAQ+E,EAAM,IAAMnG,EAAGkL,QAAQ/E,GAAO,IAGlD/E,GAAQA,EAAQ,SAAWpB,EAAGsF,YAAYE,MAAQ,GAAK,KAAOxF,EAAGsF,YAAYC,KAAO,IACpFnE,EAAQA,EAAQ,QAAUpB,EAAGmF,WAAWC,KAAO,IAC/ChE,EAAQA,EAAQ,SAAWpB,EAAGmF,WAAWE,MACzC3C,EAAOrB,OAAOD,GACX9D,KAAK,SAAU2D,GACdjB,EAAGwL,QAAUvK,EAASpD,KAAKyD,KAC3BtB,EAAGmF,WAAW/C,MAAQnB,EAASpD,KAAKuE,MACpCpC,EAAGmF,WAAWC,KAAOnE,EAASpD,KAAKuH,OAJvC1C,SAMS,WACL7C,EAAOiB,MAAM,uBAAwB,YAI3Cd,EAAGqL,gBAAkB,SAAU1I,EAAQ0E,GACrC,GAAIb,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,wBACXwC;AACEuC,OAAQ,WACN,MAAOzE,SAAQyI,KAAKhE,MAK1B6D,GAAcI,OAAOtJ,KAAK,SAAUsJ,GAMlC5G,EAAGmP,iBAGPnP,EAAAA,UAAY,SAAU2C,EAAQ0E,GAC5B1C,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,iCAAmC4B,EAAOoC,MAAQ,QAG5D6B,OAAOtJ,KAAK,WACboF,EAAO0M,aAAazM,GACjBrF,KAAK,WAEJ0C,EAAGmP,gBAHPzM,SAKS,WACL7C,EAAOiB,MAAM,uBAAwB,cAxF/CoO,EAAejR,SAAW,sBAAuB,SAAU,SAAU,aApBrEC,QACGC,OAAO,OACPP,UAAU,iBACTyE,YAAa,0CACbE,WAAY2M,EACZ1M,aAAc,UAwHpB,WAUE,QAAS6M,MATTnR,QACGC,OAAO,OACPP,UAAU,iBACTyE,YAAa,0CACbE,WAAY8M,EACZ7M,aAAc,UA+BpB,WAXE,QAAS8M,GAAgBzE,EAAQnG,EAAcC,EAAW+G,EAAUlM,EAAQK,GAC1E,GAAIG,GAAKC,IACTD,GAAGE,QAAU,WACXwL,EAASO,YAAYvH,EAAasB,IAC/B1I,KAAK,SAAU2D,GACdjB,EAAGmD,SAAWlC,EAASpD,OAF3B6N,SAIS,WACL7L,EAAOiB,MAAM,uBAAwB,SACrCtB,EAAO9B,GAAG,gBAGdmN,EAAOhF,UAAUnB,EAAasB,IAC3B1I,KAAK,SAAU2D,GACdjB,EAAGwD,OAASvC,EAASpD,OAFzBgN,SAIS,WACLhL,EAAOiB,MAAM,uBAAwB,YAG3Cd,EAAGuM,eAAiB,SAAU7I,EAAO2D,GAC/B3D,EAAMP,WAAUO,EAAMP,SAAWuB,EAAasB,IAClDtC,EAAMwD,WAAaxD,EAAMwD,QACzB,IAAIV,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,uBACXwC,SACEsD,MAAO,WACL,MAAOxF,SAAQyI,KAAKjD,MAK1B8C,GAAcI,OAAOtJ,KAAK,SAAUsJ,GAC/BlD,EAAM/C,MAAQiG,EAAOjG,IACtBX,EAAGwD,OAAO6D,GAAST,EAEnB5G,EAAGwD,OAAOhF,KAAKoI,MAIrB5G,EAAAA,UAAY,SAAU0D,EAAO2D,GAC3B1C,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,gCAAkC2C,EAAM8I,MAAQ,QAG1D5F,OAAOtJ,KAAK,WACbuN,EAAO4B,YAAY/I,GAChBpG,KAAK,WACJ0C,EAAGwD,OAAOyG,OAAO5C,EAAO,KAF5BwD,SAIS,WACLhL,EAAOiB,MAAM,uBAAwB,cA7C/CwO,EAAgBrR,SAAW,SAAU,eAAgB,YAAa,WAAY,SAAU,UArBxFC,QACGC,OAAO,OACPP,UAAU,mBACTyE,YAAa,8CACbE,WAAY+M,EACZ9M,aAAc,UA0FpB,WAZE,QAAS+M,GAAmBxP,EAAWF,EAAQ+E,EAAqBD,EAAW3B,EAAQ8B,GACrF,GAAI9E,GAAKC,IACTD,GAAGE,QAAU,WACXF,EAAG+E,MAAQ,WACX/E,EAAGwD,OAASsB,EAAAA,UAAoB9E,EAAG+E,OACnC/E,EAAGwP,aACHxP,EAAGsF,YAAcV,EAAoBzH,IAAI,0BACrCoI,KAAM,OACNC,OAAO,GAEXxF,EAAGkF,QAAU,GAAI,GAAI,GAAI,KACzBlF,EAAGmF,YACD/C,MAAO,EACPgD,KAAM,EACNC,MAAOT,EAAoBzH,IAAI,oBAAsB,IAEvD6C,EAAGkL,QAAUtG,EAAoBzH,IAAI,wBACrC6C,EAAGyP,iBACH3K,EAAae,UAAU7F,EAAG+E,OACvBzH,KAAK,SAAU2D,GACdjB,EAAGyP,cAAgBxO,EAASpD,OAFhCiH,SAIS,WACLjF,EAAOiB,MAAM,uBAAwB,WAKzCd,EAAG0P,iBAGL1P,EAAG0P,cAAgB,WACjB,GAAItO,GAAQ,GACZ,KAAI,GAAI+E,KAAOnG,GAAGkL,QACblL,EAAGkL,QAAQ/E,KACZ/E,EAAQA,EAAQ+E,EAAM,IAAMnG,EAAGkL,QAAQ/E,GAAO,IAGlD/E,GAAQA,EAAQ,SAAWpB,EAAGsF,YAAYE,MAAQ,GAAK,KAAOxF,EAAGsF,YAAYC,KAAO,IACpFnE,EAAQA,EAAQ,QAAUpB,EAAGmF,WAAWC,KAAO,IAC/ChE,EAAQA,EAAQ,SAAWpB,EAAGmF,WAAWE,MACzCtF,EAAUsB,OAAOD,GACd9D,KAAK,SAAU2D,GACdjB,EAAGwP,UAAYvO,EAASpD,KAAKyD,KAC7BtB,EAAGmF,WAAW/C,MAAQnB,EAASpD,KAAKuE,MACpCpC,EAAGmF,WAAWC,KAAOnE,EAASpD,KAAKuH,OAJvCrF,SAMS,WACLF,EAAOiB,MAAM,uBAAwB,YAI3Cd,EAAGqJ,kBAAoB,SAAUE,GAC3BA,EAAS5I,MACX4I,EAAS/F,OAASxD,EAAGyP,cAAcnJ,IAAI,SAAUC,GAC/C,OACE7C,MAAO6C,KAIb,IAAIC,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,0BACXwC,SACEmJ,SAAU,WACR,MAAOrL,SAAQyI,KAAK4C,MAK1B/C,GAAcI,OAAOtJ,KAAK,WACxB0C,EAAG0P,mBAGP1P,EAAG6G,gBAAkB,WACnB,GAAIL,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,kBACXkJ,KAAM,KACN1G,SACE2G,QAAS,WACP,MAAO/G,GAAGwD,QAEZ9C,KAAM,WACJ,MAAO,UAAU7C,GASf,MAAOkC,GAAUoH,iBAAiBtJ,GAA3BkC,SACE,WACLF,EAAOiB,MAAM,uBAAwB,eAOjD0F,GAAcI,OAAdJ,WAA6B,WAC3BxG,EAAG0P,mBAIP1P,EAAAA,UAAY,SAAUuJ,GACpB5E,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,mCAAqCwI,EAAS+D,KAAO,QAG/D1G,OAAOtJ,KAAK,WACbyC,EAAAA,UAAiBwJ,GACdjM,KAAK,WACJ0C,EAAG0P,kBAFP3P,SAIS,WACLF,EAAOiB,MAAM,uBAAwB,cAK7Cd,EAAG8F,cAAgB,WACjBlB,EAAoBmB,IAAI,kBAAmB/F,EAAGmF,WAAWE,OACzDrF,EAAG0P,iBAGL1P,EAAGoL,iBAAoB,SAAUF,GAC/BtG,EAAoBmB,IAAI,mBAAoBmF,GAC5ClL,EAAGkL,QAAUA,EACblL,EAAG0P,iBAGL1P,EAAGkG,qBAAuB,SAAUC,GAC/BnG,EAAGsF,YAAYC,OAASY,EACzBnG,EAAGsF,YAAYE,OAASxF,EAAGsF,YAAYE,OAEvCxF,EAAGsF,YAAYC,KAAOY,EACtBnG,EAAGsF,YAAYE,OAAQ,GAEzBZ,EAAoBmB,IAAI,uBAAwB/F,EAAGsF,aACnDtF,EAAG0P,iBAGL1P,EAAGiG,MAAQ,WACTjG,EAAGkL,WACHlL,EAAG0P,iBA3IPH,EAAmBtR,SAAW,YAAa,SAAU,sBAAuB,YAAa,SAAU,gBAtBnGC,QACGC,OAAO,OACPP,UAAU,sBACTyE,YAAa,oDACbE,WAAYgN,EACZ/M,aAAc,UAkKpB,WACEtE,QACGC,OAAO,OACPP,UAAU,oBACTyE,YAAa,gDACbC,UACElC,QAAS,IACTS,MAAO,IACPL,QAAS,KAEX+B,WAAY,aAGZC,aAAc,UA2BpB,WAbE,QAASmN,GAAoBjE,EAAU7L,EAAQ8E,GAC7C,GAAI3E,GAAKC,IACTD,GAAGE,QAAU,WACXwL,EAASC,gBACNrO,KAAK,SAAU2D,GACdjB,EAAG4L,WAAa3K,EAASpD,OAF7B6N,SAIS,WACL7L,EAAOiB,MAAM,2BAA4B,YAG/Cd,EAAG4P,kBAAoB,SAAUzM,EAAUkE,GACzC,GAAIb,GAAgB7B,EAAU8B,MAC5BC,WAAW,EACX9I,UAAW,0BACXwC,SACE+C,SAAU,WACR,MAAOjF,SAAQyI,KAAKxD,MAK1BqD,GAAcI,OAAOtJ,KAAK,SAAUsJ,GAG/BzD,EAASxC,MAAQiG,EAAOjG,IACzBX,EAAG4L,WAAWvE,GAAST,EAEvB5G,EAAG4L,WAAWpN,KAAKoI,MAIzB5G,EAAAA,UAAY,SAAUmD,EAAUkE,GAC9B1C,EAAU8B,MACRC,WAAW,EACX9I,UAAW,mBACXkJ,KAAM,KACN1G,SACEW,QAAS,WACP,MAAO,mCAAqCoC,EAASqJ,MAAQ,QAGhE5F,OAAOtJ,KAAK,WACboO,EAASmE,eAAe1M,GACrB7F,KAAK,WACJ0C,EAAG4L,WAAW3B,OAAO5C,EAAO,KAFhCqE,SAIS,WACL7L,EAAOiB,MAAM,uBAAwB,cAlC/C6O,EAAoB1R,SAAW,WAAY,SAAU,aAvBrDC,QACGC,OAAO,OACPP,UAAU,uBACTyE,YAAa,sDACbE,WAAYoN,EACZnN,aAAc,UA2DpB,WAUE,QAASsN,MATT5R,QACGC,OAAO,OACPP,UAAU,kBACTyE,YAAa,4CACbE,WAAYuN,EACZtN,aAAc,UAkCpB,WAlBE,QAASyF,GAAM8H,GACb,GAAIC,GAAO/P,IAEX+P,GAAK7C,SAAW,WACd,MAAO4C,GAAM5S,IAAI,eAGnB6S,EAAK5H,WAAa,SAAU7K,GAC1B,MAAOwS,GAAME,KAAK,aAAc1S,IAGlCyS,EAAK7H,WAAc,SAAU5K,GAC3B,MAAOwS,GAAMG,IAAI,cAAgB3S,EAAKoD,IAAKpD,IAE7CyS,EAAKzC,WAAa,SAAUhQ,GAC1B,MAAOwS,GAAAA,UAAa,cAAgBxS,EAAKoD,MAI7CsH,EAAMhK,SAAW,SAxBjBC,QACGC,OAAO,OACPgS,QAAQ,QAASlI,MAkDtB,WAnBE,QAASnD,GAAaiL,GACpB,GAAIC,GAAO/P,IAEX+P,GAAKnK,UAAY,SAAUd,GACzB,MAAOgL,GAAM5S,IAAI,4BAA8B4H,IAGjDiL,EAAKI,SAAW,SAAUpK,GACxB,MAAO+J,GAAM5S,IAAI,sBAAwB6I,IAG3CgK,EAAKjI,YAAc,SAAUrE,GAC3B,MAAOqM,GAAME,KAAK,qBAAsBvM,IAG1CsM,EAAKlI,YAAe,SAAUpE,GAC5B,MAAOqM,GAAMG,IAAI,sBAAwBxM,EAAM/C,IAAK+C,IAEtDsM,EAAKvD,YAAc,SAAU/I,GAC3B,MAAOqM,GAAAA,UAAa,sBAAwBrM,EAAM/C,MAEpDqP,EAAKrI,UAAY,WACf,MAAOoI,GAAM5S,IAAI,cAGnB,IAAIkT,GAAQ,SAAU/C,EAAMrG,EAAMC,GAChCjH,KAAK+G,MAAQsG,EACbrN,KAAKgH,KAAOA,EACZhH,KAAKiH,SAAWA,EAGlB8I,GAAAA,WACEM,MACE,GAAKD,GAAM,gBAAiB,WAAU,IACtC,GAAKA,GAAM,UAAW,WAAU,IAChC,GAAKA,GAAM,cAAe,WAAU,IACpC,GAAKA,GAAM,OAAQ,SAAQ,IAC3B,GAAKA,GAAM,gBAAiB,aAAY,KAE1CE,WAEIpK,IAAK,OACLa,MAAO,OACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,QACLa,MAAO,QACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,gBACLa,MAAO,iBACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,QACLa,MAAO,QACPE,UAAU,EACVD,KAAM,UAGNd,IAAK,WACLa,MAAO,YACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,UACLa,MAAO,UACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,OACLa,MAAO,OACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,UACLa,MAAO,WACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,QACLa,MAAO,QACPE,UAAU,EACVD,KAAM,SAGNd,IAAK,UACLa,MAAO,UACPE,UAAU,EACVD,KAAM,SAGVuB,KACE,GAAK6H,GAAM,gBAAiB,WAAU,IACtC,GAAKA,GAAM,UAAW,WAAU,IAChC,GAAKA,GAAM,cAAe,WAAU,IACpC,GAAKA,GAAM,OAAQ,SAAQ,IAC3B,GAAKA,GAAM,gBAAiB,aAAY,MAtF9CvL,EAAa7G,SAAW,SAzBxBC,QACGC,OAAO,OACPgS,QAAQ,eAAgBrL,MA8I7B,WApBE,QAASlF,GAAMmQ,GACb,GAAIC,GAAO/P,IACX+P,GAAK3O,OAAS,SAAUD,GACtB,MAAO2O,GAAM5S,IAAI,aAAeiE,IAKlC4O,EAAKhP,WAAa,SAAUb,GAC1B,MAAO4P,GAAME,KAAK,aAAc9P,IAGlC6P,EAAKpP,WAAc,SAAUT,GAC3B,MAAO4P,GAAMG,IAAI,cAAgB/P,EAAKQ,IAAKR,IAE7C6P,EAAK1I,WAAa,SAAUnH,GAC1B,MAAO4P,GAAAA,UAAa,cAAgB5P,EAAKQ,MAE3CqP,EAAK7I,iBAAmB,SAAUxK,GAChC,MAAOoT,GAAME,KAAK,wBAAyBtT,IAE/CiD,EAAM3B,SAAW,SA1BjBC,QACGC,OAAO,OACPgS,QAAQ,QAASvQ,MAyDtB,WArBE,QAAS4I,GAAIuH,GACX,GAAIC,GAAO/P,IAEX+P,GAAK3O,OAAS,SAAUD,GACtB,MAAO2O,GAAM5S,IAAI,WAAaiE,IAGhC4O,EAAKlH,OAAS,SAAU9C,GACtB,MAAO+J,GAAM5S,IAAI,YAAc6I,IAGjCgK,EAAKjM,OAAS,SAAUgF,GACtB,MAAOgH,GAAME,KAAK,WAAYlH,IAGhCiH,EAAK5F,OAAU,SAAUrB,GACvB,MAAOgH,GAAMG,IAAI,YAAcnH,EAAIpI,IAAKoI,IAE1CiH,EAAAA,UAAc,SAAUjH,GACtB,MAAOgH,GAAAA,UAAa,YAAchH,EAAIpI,MAG1C6H,EAAIvK,SAAW,SA3BfC,QACGC,OAAO,OACPgS,QAAQ,MAAO3H,MAyDpB,WAtBE,QAASqC,GAAOkF,GACd,GAAIC,GAAO/P,IAEX+P,GAAKnK,UAAY,SAAUkG,GACzB,MAAOgE,GAAM5S,IAAI,wBAA0B4O,IAG7CiE,EAAKI,SAAW,SAAUpK,GACxB,MAAO+J,GAAM5S,IAAI,eAAiB6I,IAGpCgK,EAAKjI,YAAc,SAAUrE,GAC3B,MAAOqM,GAAME,KAAK,cAAevM,IAGnCsM,EAAKlI,YAAe,SAAUpE,GAC5B,MAAOqM,GAAMG,IAAI,eAAiBxM,EAAM/C,IAAK+C,IAE/CsM,EAAKvD,YAAc,SAAU/I,GAC3B,MAAOqM,GAAAA,UAAa,eAAiBrM,EAAM/C,MAE7CqP,EAAKrI,UAAY,WACf,MAAOoI,GAAM5S,IAAI,eACrB0N,EAAO5M,SAAW,SA5BlBC,QACGC,OAAO,OACPgS,QAAQ,SAAUtF,MA4DvB,WAvBE,QAAS9H,GAAUgN,GACjB,GAAIC,GAAO/P,IAEX+P,GAAK3O,OAAS,SAAU6B,EAAU6I,GAChC,MAAOgE,GAAM5S,IAAI,0BAA4B+F,EAAW,aAAe6I,IAQzEiE,EAAKhF,eAAiB,SAAU1H,GAC9B,MAAOyM,GAAME,KAAK,iBAAkB3M,IAGtC0M,EAAKjF,eAAkB,SAAUzH,GAC/B,MAAOyM,GAAMG,IAAI,kBAAoB5M,EAAS3C,IAAK2C,IAErD0M,EAAK9D,eAAiB,SAAU5I,GAC9B,MAAOyM,GAAAA,UAAa,kBAAoBzM,EAAS3C,MAIrDoC,EAAU9E,SAAW,SA7BrBC,QACGC,OAAO,OACPgS,QAAQ,YAAapN,MA2D1B,WAxBE,QAASL,GAAOqN,GACd,GAAIC,GAAO/P,IAEX+P,GAAK3O,OAAS,SAAUD,GACtB,MAAO2O,GAAM5S,IAAI,gBAAkBiE,IAErC4O,EAAKnE,UAAY,SAAU7F,GACzB,MAAO+J,GAAM5S,IAAI,iBAAmB6I,IAEtCgK,EAAKnN,aAAe,SAAUF,GAC5B,MAAOoN,GAAME,KAAK,gBAAiBtN,IAGrCqN,EAAKpN,aAAgB,SAAUD,GAC7B,MAAOoN,GAAMG,IAAI,iBAAmBvN,EAAOhC,IAAKgC,IAElDqN,EAAKZ,aAAe,SAAUzM,GAC5B,MAAOoN,GAAAA,UAAa,iBAAmBpN,EAAOhC,MAQlD+B,EAAOzE,SAAW,SA9BlBC,QACGC,OAAO,OACPgS,QAAQ,SAAUzN,MAyDvB,WAzBE,QAAS3C,GAAUgQ,GACjB,GAAIC,GAAO/P,IAEX+P,GAAK3O,OAAS,SAAUD,GACtB,MAAO2O,GAAM5S,IAAI,iBAAmBiE,IAGtC4O,EAAKjM,OAAS,SAAUwF,GACtB,MAAOwG,GAAME,KAAK,iBAAkB1G,IAEtCyG,EAAK7I,iBAAmB,SAAUqI,GAChC,MAAOO,GAAME,KAAK,4BAA6BT,IAGjDQ,EAAK5F,OAAU,SAAUb,GACvB,MAAOwG,GAAMG,IAAI,kBAAoB3G,EAAS5I,IAAK4I,IAErDyG,EAAAA,UAAc,SAAUzG,GACtB,MAAOwG,GAAAA,UAAa,kBAAoBxG,EAAS5I,MAQrDZ,EAAU9B,SAAW,SA/BrBC,QACGC,OAAO,OACPgS,QAAQ,YAAapQ,MA4D1B,WA1BE,QAAS2L,GAASqE,GAChB,GAAIC,GAAO/P,IAEX+P,GAAKrE,cAAgB,WACnB,MAAOoE,GAAM5S,IAAI,oBAEnB6S,EAAK/D,YAAc,SAAUjG,GAC3B,MAAO+J,GAAM5S,IAAI,mBAAqB6I,IAExCgK,EAAKrD,oBAAsB,WACzB,MAAOoD,GAAM5S,IAAI,oCAEnB6S,EAAK/C,eAAiB,SAAU9J,GAC9B,MAAO4M,GAAME,KAAK,kBAAmB9M,IAGvC6M,EAAKhD,eAAkB,SAAU7J,GAC/B,MAAO4M,GAAMG,IAAI,mBAAqB/M,EAASxC,IAAKwC,IAEtD6M,EAAKH,eAAiB,SAAU1M,GAC9B,MAAO4M,GAAAA,UAAa,mBAAqB5M,EAASxC,MAOtD+K,EAASzN,SAAW,SAhCpBC,QACGC,OAAO,OACPgS,QAAQ,WAAYzE,MA+DzB,WA3BE,QAASxM,GAAK6Q,EAAOnL,EAAqB/F,GA+BxC,QAAS2R,KACP,MAAOT,GAAM5S,IAAI,iBACdG,KAAK,SAAU2D,GACd,MAAOA,GAASpD,OAjCtB,GAAImS,GAAO/P,IACX+P,GAAKS,aAAe7L,EAAoBzH,IAAI,QAC5C,IAAIqR,KAEAwB,GAAKS,aACPjC,EAAcgC,KAGhBR,EAAKzB,MAAQ,SAAU1Q,GACrB,MAAOkS,GAAME,KAAK,kBAAmBpS,GAClCP,KAAK,SAAU2D,GAId,MAHA2D,GAAoBmB,IAAI,QAAS9E,EAASpD,KAAK6S,OAC/CV,EAAKS,YAAa,EAClBjC,EAAcgC,OAKpBR,EAAK3S,eAAiB,WACpB,MAAOwB,GAAG8R,KAAKnC,IAGjBwB,EAAK1B,OAAS,WACZ1J,EAAoBgM,OAAO,SAC3BhM,EAAoBgM,OAAO,iBAC3BhM,EAAoBgM,OAAO,qBAC3BZ,EAAKS,YAAa,EAClBjC,MAAJtP,EAAKjB,SAAW,QAAS,sBAAuB,MAjChDC,QACGC,OAAO,OACPgS,QAAQ,OAAQjR,MA8ErB,WA5BE,QAAS2R,GAAiBjM,EAAqB/F,EAAI5B,GACjD,OACE6T,QAAS,SAAU1S,GAGjB,MAFAA,GAAO2I,QAAU3I,EAAO2I,YACxB3I,EAAO2I,QAAQ,cAAmB,UAAYnC,EAAoBzH,IAAI,SAC/DiB,GAET2S,cAAe,SAAU9P,GACvB,GAAuB,MAApBA,EAASc,OAAe,CACzB,GAAI3E,GAAQH,EAAUE,IAAI,SACC,WAAxBC,EAAM4T,SAAS1D,MAAkBlQ,EAAMM,GAAG,SAE/C,MAAOmB,GAAGS,OAAO2B,KAiBvB4P,EAAgB5S,SAAW,sBAAuB,KAAM,aAlCxDC,QACGC,OAAO,OACP8S,QAAQ,kBAAmBJ,MAqBhC3S,QACGC,OAAO,OACP+J,OAAO,WAAY,WAClB,MAAO,UAAUgJ,EAAOC,GACtB,MAAID,IAAUhT,QAAQkT,QAAQF,GACvBA,EAAMhJ,OAAO,SAAU3B,EAAMc,GAClC,MAAOA,GAAQ,IAAM8J,IAFsBD,KA0CnD,WA7BE,QAASG,GAAQnS,GACf,OACEoS,SAAU,IACVC,OACEF,QAAS,KAEXG,KAAM,SAAUD,EAAOE,EAASC,GAC9BxS,EAAK7B,iBACFC,KAAK,SAAUC,GACXgU,EAAMF,QAAQ7T,QAAQD,EAAKE,YAC5BgU,EAAQE,WAoBpBN,EAAQpT,SAAW,QAnCnBC,QACGC,OAAO,OACPyT,UAAU,UAAWP,MAqB1B,WACEnT,QACGC,OAAO,OACPyT,UAAU,WAAY,WACrB,OACEL,OACExK,QAAS,IACT+H,cAAe,IACf+C,aAAc,KAEhBL,KAAM,SAAUxO,EAAQ8O,EAAMC,GAC5BD,EAAKE,GAAG,SAAU,SAAUC,GAE1BjP,EAAOkP,OAAO,WACZlP,EAAO6O,gBAET,IAAIM,GAAS,GAAIC,WAEjBD,GAAOE,OAAS,SAAUrQ,GACxB,GAAInE,GAAOmE,EAAIsQ,OAAO1L,OAClB2L,EAAWC,KAAKC,KAAK5U,GAAOoJ,KAAM,SAAUyL,WAAW,GAC3D7U,GAAO2U,KAAKG,MAAMC,cAChBL,EAASM,OAAON,EAASO,WAAW,KAElCC,OAAQ/P,EAAO+D,QAAQT,IAAI,SAAUC,GACnC,MAAOA,GAAKJ,QAKlBnD,EAAOkP,OAAO,WACZlP,EAAO8L,eAAejR,KAAMA,IAC5BiU,EAAKkB,IAAI,SAGbb,EAAOc,mBAAmBhB,EAAYK,OAAOY,MAAM,aAO/DhV,QAAQC,OAAO,OAAOQ,KAAK,iBAAkB,SAASwU,GAAiBA,EAAejD,IAAI,oCAAoC,ihIAC9HiD,EAAejD,IAAI,4CAA4C,oBAC/DiD,EAAejD,IAAI,sDAAsD,gkHACzEiD,EAAejD,IAAI,gDAAgD,wYACnEiD,EAAejD,IAAI,oDAAoD,y5OACvEiD,EAAejD,IAAI,8CAA8C,+jDACjEiD,EAAejD,IAAI,0CAA0C,mBAC7DiD,EAAejD,IAAI,0CAA0C,myCAC7DiD,EAAejD,IAAI,8CAA8C;AACjEiD,EAAejD,IAAI,4CAA4C,8zBAC/DiD,EAAejD,IAAI,0CAA0C,oOAC7DiD,EAAejD,IAAI,8CAA8C,43DACjEiD,EAAejD,IAAI,wCAAwC,gmPAC3DiD,EAAejD,IAAI,gDAAgD,gvCACnEiD,EAAejD,IAAI,4CAA4C,yhCAC/DiD,EAAejD,IAAI,kEAAkE,y+EACrFiD,EAAejD,IAAI,yDAAyD,qkDAC5EiD,EAAejD,IAAI,uDAAuD,mhQAC1EiD,EAAejD,IAAI,uEAAuE,ulEAC1FiD,EAAejD,IAAI,mEAAmE,s1CACtFiD,EAAejD,IAAI,+DAA+D,86DAClFiD,EAAejD,IAAI,mEAAmE;AACtFiD,EAAejD,IAAI,yEAAyE,k0JAC5FiD,EAAejD,IAAI,2DAA2D,oyDAC9EiD,EAAejD,IAAI,sDAAsD,kxcACzEiD,EAAejD,IAAI,kEAAkE,kuGACrFiD,EAAejD,IAAI,yDAAyD,ghDAC5EiD,EAAejD,IAAI,6EAA6E,s+CAChGiD,EAAejD,IAAI,uFAAuF,ypCAC1GiD,EAAejD,IAAI,6FAA6F,2hCAChHiD,EAAejD,IAAI,yFAAyF;AAC5GiD,EAAejD,IAAI,mGAAmG,64OACtHiD,EAAejD,IAAI,uFAAuF,qkBAC1GiD,EAAejD,IAAI,wEAAwE,syCAC3FiD,EAAejD,IAAI,gGAAgG,+mNACnHhS,QACGC,OAAO,OACPC,OAAO/B","file":"../../scripts/app-e2429f2e57.js","sourcesContent":["angular\n  .module('app', [\n    'ui.router',\n    'ui.bootstrap',\n    'ngMessages',\n    'angular-loading-bar',\n    'LocalStorageModule',\n    'toastr',\n    'ngAnimate',\n    'angular.chips',\n    'ngFileUpload',\n    'fixed.table.header'\n  ])\n  .config(function ($httpProvider, $compileProvider) {\n    $httpProvider.interceptors.push('AuthInterceptor');\n    $httpProvider.useApplyAsync(true);\n    $compileProvider.debugInfoEnabled(false);\n  })\n  .run(function ($transitions, $q) {\n    var match = {\n      to: function (state) {\n        return state.data && state.data.roles;\n      }\n    };\n    $transitions.onStart(match, function (trans) {\n      var Auth = trans.injector().get('Auth');\n      var state = trans.$to();\n      return Auth.getCurrentUser()\n        .then(function (user) {\n          if(!user.hasOwnProperty('role') || state.data.roles.indexOf(user.role) === -1){\n            return $q.reject('access error');\n          }\n        });\n    });\n    $transitions.onError(match, function (trans) {\n      var $state = trans.router.stateService;\n      $state.go('login');\n    });\n  });\n\n\n(function () {\n  angular\n    .module('app')\n    .component('createSaleComponent', {\n      templateUrl: 'app/components/device/device-category/device-serial-numbers/create/sale-create.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createSalesComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createSalesComponent(Sales, toastr, Upload, Customers) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.sale = vm.resolve.sale;\n      if(vm.sale.date){\n        vm.sale.date = new Date(vm.sale.date);\n      }\n    };\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n    vm.save = function () {\n      if(vm.sale._id){\n        Sales.updateSale(vm.sale)\n          .then(function () {\n            vm.close({$value: vm.sale});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      } else {\n        Sales.createSale(vm.sale)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      }\n    };\n\n    vm.getCustomers = function (customerName) {\n      var query = '?page=1&limit=10&name=' + customerName;\n      return Customers.getAll(query)\n        .then(function (response) {\n          return response.data.docs;\n        });\n    };\n\n    vm.convertDate = function (obj) {\n      if(obj.value){\n        obj.value = new Date(obj.value);\n      }\n    };\n\n    vm.upload = function (file, obj) {\n      Upload.upload({\n        url: '/api/upload',\n        data: {\n          file: file\n        }\n      })\n        .then(function (response) {\n          obj.value = response.data;\n        }, function (resp) {\n          console.log('Error status: ' + resp.status);\n        }, function (evt) {\n          obj.progress = parseInt(100.0 * evt.loaded / evt.total);\n        })\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('createDeviceComponent', {\n      templateUrl: 'app/components/device/device-list/create/device.create.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createDeviceComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createDeviceComponent(Device, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.device = vm.resolve.device;\n    };\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n    vm.save = function () {\n      if(vm.device._id){\n        Device.updateDevice(vm.device)\n          .then(function () {\n            vm.close({$value: vm.device});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      } else {\n        Device.createDevice(vm.device)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceSubcategories', {\n      templateUrl: 'app/components/device/device-category/device-subcategories/device-subcategories.html',\n      controller: deviceSubcategories,\n      controllerAs: 'vm',\n      bindings: {\n        documents: '<',\n        deviceId: '<',\n        category: '<',\n        fields: '<',\n        delete: '&',\n        openDocumentModal: '&'\n      }\n    });\n\n  /** @ngInject */\n  function deviceSubcategories(Documents, toastr, $scope) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.subcategories = [];\n      Documents.getAll(vm.deviceId, vm.category.relatedCategory)\n        .then(function (response) {\n          vm.subcategories = [];\n          response.data.forEach(function (document) {\n            for(var i = 0; i < document.fields.length; i++){\n              if(document.fields[i].field._id === vm.category.subcategoryField){\n                vm.subcategories.push(document.fields[i]);\n                break;\n              }\n            }\n          });\n          vm.filterDocuments();\n        })\n        .catch(function () {\n          toastr.error('Error on load subcategories', 'Error');\n        });\n      $scope.$watchCollection('vm.documents', vm.filterDocuments);\n    };\n\n    vm.onDelelte = function (document) {\n      vm.delete({\n        document: document\n      });\n    };\n\n    vm.create = function (document) {\n      vm.openDocumentModal({\n        document: document\n      });\n    };\n\n    vm.onCreateClick = function (sub, ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n      vm.create({\n        subcategoryField: sub._id\n      });\n    };\n\n    vm.filterDocuments = function () {\n      if(vm.subcategories.length && vm.documents) {\n        vm.subcategories.forEach(function (sub) {\n          sub.documents = [];\n          vm.documents.forEach(function (doc) {\n            if(doc.subcategoryField === sub._id) {\n              sub.documents.push(doc);\n            }\n          })\n        })\n      }\n    }\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceSerialNumbersComponent', {\n      templateUrl: 'app/components/device/device-category/device-serial-numbers/device-serial-numbers-component.html',\n      controller: deviceSerialNumbersComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function deviceSerialNumbersComponent($stateParams, Sales, toastr, $uibModal, localStorageService, $scope, $httpParamSerializer, StaticFields) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.model = 'Sale';\n      vm.modelOptions = {\n        debounce: 300\n      };\n      vm.limits = [10, 20, 50, 100];\n      vm.pagination = {\n        page: 1,\n        limit: localStorageService.get('paginationLimit') || 10\n      };\n      vm.sortFilters = localStorageService.get('salesSortFilters') || {\n          sort: 'salesOrder',\n          order: true\n        };\n      vm.searchFilters = {};\n      if ($stateParams.serialNumber) {\n        vm.searchFilters.serialNumber = $stateParams.serialNumber;\n      }\n      $scope.$watch('vm.searchFilters', function () {\n        vm.loadSales();\n      }, true);\n      StaticFields.getFields(vm.model)\n        .then(function (response) {\n          vm.fields = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n\n    };\n\n    vm.onLimitChange = function () {\n      localStorageService.set('paginationLimit', vm.pagination.limit);\n      vm.loadSales();\n    };\n\n    vm.loadSales = function () {\n      var query = '?product=' + $stateParams.id + '&';\n      query += $httpParamSerializer(vm.searchFilters) + '&';\n      query += 'sort=' + (vm.sortFilters.order ? '' : '-') + vm.sortFilters.sort + '&';\n      query = query + 'page=' + vm.pagination.page + '&';\n      query = query + 'limit=' + vm.pagination.limit;\n      Sales.getAll(query)\n        .then(function (response) {\n          vm.sales = response.data.docs;\n          vm.pagination.total = response.data.total;\n          vm.pagination.page = response.data.page;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n\n    };\n\n    vm.reset = function () {\n      vm.searchFilters = {};\n      vm.loadSales();\n    };\n\n    vm.onSortFiltersChanged = function (key) {\n      if (vm.sortFilters.sort === key) {\n        vm.sortFilters.order = !vm.sortFilters.order;\n      } else {\n        vm.sortFilters.sort = key;\n        vm.sortFilters.order = true;\n      }\n      localStorageService.set('salesSortFilters', vm.sortFilters);\n      vm.loadSales();\n    };\n    vm.openCreateModal = function (sale) {\n      if (!sale._id) {\n        sale.product = $stateParams.id;\n        sale.fields = vm.fields.map(function (item) {\n          return {\n            field: item\n          }\n        });\n      }\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createSaleComponent',\n        resolve: {\n          sale: function () {\n            return angular.copy(sale);\n          }\n        }\n      });\n\n      modalInstance.result.then(function () {\n        vm.loadSales();\n      });\n    };\n    vm.openImportModal = function () {\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'importComponent',\n        size: 'lg',\n        resolve: {\n          headers: function () {\n            return [\n              {\n                key: 'serialNumber',\n                label: 'Serial Number',\n                type: 'text',\n                required: true\n              },\n              {\n                key: 'version',\n                label: 'Version',\n                type: 'text',\n                required: true\n              },\n              {\n                key: 'salesOrder',\n                label: 'Sales Order',\n                type: 'text',\n                required: false\n              },\n              {\n                key: 'date',\n                label: 'Date',\n                type: 'date',\n                required: false\n              }\n            ];\n          },\n          save: function () {\n            return function (data) {\n              data.forEach(function (sale) {\n                sale.product = $stateParams.id;\n                sale.fields = vm.fields.map(function (item) {\n                  return {\n                    field: item\n                  }\n                });\n              });\n              return Sales.createCollection(data)\n                .catch(function () {\n                  toastr.error('Something went wrong', 'Error');\n                });\n            }\n          },\n          parser: function () {\n            return function (data) {\n              data.forEach(function (item) {\n                item.date = +item.date ? new Date(1900, 0, +item.date - 1) : null;\n              });\n            }\n          }\n        }\n      });\n\n      modalInstance.result.finally(function () {\n        vm.loadSales();\n      });\n    };\n    vm.delete = function (sale, index) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete this sale?';\n          }\n        }\n      }).result.then(function () {\n        Sales.deleteSale(sale)\n          .then(function () {\n            // vm.sales.splice(index, 1);\n            vm.loadSales();\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          });\n      });\n    };\n    function applyByFilters(sale) {\n      return true;\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceCategoryTable', {\n      templateUrl: 'app/components/device/device-category/device-category-table/device-category-table.html',\n      controller: deviceCategoryTable,\n      controllerAs: 'vm',\n      bindings: {\n        documents: '<',\n        fields: '<',\n        openDocumentModal: '&',\n        delete: '&'\n      }\n    });\n\n  /** @ngInject */\n  function deviceCategoryTable() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceCategoryGallery', {\n      templateUrl: 'app/components/device/device-category/device-category-gallery/device-category-gallery.html',\n      controller: deviceCategoryGallery,\n      controllerAs: 'vm',\n      bindings: {\n        documents: '<',\n        delete: '&'\n      }\n    });\n\n  /** @ngInject */\n  function deviceCategoryGallery() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceCategoryForm', {\n      templateUrl: 'app/components/device/device-category/device-category-form/device-category-form.html',\n      controller: deviceCategoryForm,\n      controllerAs: 'vm',\n      bindings: {\n        documents: '<',\n        openDocumentModal: '&',\n        delete: '&'\n      }\n    });\n\n  /** @ngInject */\n  function deviceCategoryForm() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('createStaticFieldComponent', {\n      templateUrl: 'app/components/categories/static/create/create.static-field.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createStaticFieldComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createStaticFieldComponent(StaticFields, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.field = vm.resolve.field;\n      StaticFields.loadTypes()\n        .then(function (response) {\n          vm.types = response.data;\n        })\n        .catch(function () {\n          toastr.error('Error on load types', 'Error');\n        })\n    };\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n    vm.save = function () {\n      vm.loadInProgress = true;\n      if(vm.field._id){\n        StaticFields.updateField(vm.field)\n          .then(function () {\n            vm.close({$value: vm.field});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });\n      } else {\n        StaticFields.createField(vm.field)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('createUserComponent', {\n      templateUrl: 'app/components/users/create/create.user.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createUserComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createUserComponent(Auth, Users, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.user = vm.resolve.user;\n      var allRoles = [\n        {\n          label: 'Production admin',\n          value: 'productionAdmin'\n        },\n        {\n          label: 'Production user',\n          value: 'productionUser'\n        },\n        {\n          label: 'Sales admin',\n          value: 'salesAdmin'\n        },\n        {\n          label: 'Sales user',\n          value: 'salesUser'\n        },\n        {\n          label: 'Super Admin',\n          value: 'admin'\n        },\n        {\n          label: 'Support',\n          value: 'support'\n        }\n      ];\n      Auth.getCurrentUser()\n        .then(function (user) {\n          if(user.role === 'admin'){\n            vm.roles = allRoles;\n          } else if (user.role === 'productionAdmin'){\n            vm.roles = allRoles.filter(function (role) {\n              return role.value.indexOf('productionUser') !== -1;\n            });\n          } else if (user.role === 'salesAdmin'){\n            vm.roles = allRoles.filter(function (role) {\n              return role.value.indexOf('salesUser') !== -1;\n            });\n          } else {\n            vm.roles = [];\n          }\n        })\n    };\n\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n    vm.save = function () {\n      if(vm.user._id){\n        Users.updateUser(vm.user)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      } else {\n        Users.createUser(vm.user)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('serialsListComponent', {\n      templateUrl: 'app/components/serials/serials-list/serials-list.component.html',\n      controller: serialsListComponent,\n      controllerAs: 'vm',\n      bindings: {\n        serials: '<',\n        delete: '&',\n        sortFilters: '<',\n        onSortFiltersChanged: '&'\n      }\n    });\n\n  /** @ngInject */\n  function serialsListComponent() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('rmaCreateComponent', {\n      templateUrl: 'app/components/rma/create/rma-create.component.html',\n      controller: rmaCreateComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function rmaCreateComponent(\n    Customers,\n    StaticFields,\n    toastr,\n    $uibModal,\n    Upload,\n    Sales,\n    Rma,\n    $state,\n    $stateParams,\n    $filter,\n    $scope,\n    Auth) {\n    var vm = this;\n    vm.$onInit = function () {\n      Auth.getCurrentUser()\n        .then(function (user) {\n          vm.user = user\n        });\n      vm.model = 'Rma';\n      $scope.$watch('vm.rma', vm.matchCustomers, true);\n      vm.customerFields = StaticFields.static['Customer'];\n      vm.options = {};\n      if($stateParams.id){\n        vm.editMode = true;\n        Rma.getOne($stateParams.id)\n          .then(function (response) {\n            vm.rma = response.data;\n            // vm.defaultData = angular.copy(vm.rma);\n          })\n          .catch(function () {\n            toastr.error('Error loading RMA', 'Error');\n          });\n\n      } else {\n        vm.editMode = false;\n        vm.rma = {};\n        vm.rma.products = [];\n        vm.options.formNumberStatic = 'RY' + $filter('date')(new Date(), 'MMddyyyy');\n        // vm.defaultData = angular.copy(vm.rma);\n      }\n      vm.loadStaticFields();\n    };\n\n    vm.getCustomers = function (customerName) {\n      var query = '?page=1&limit=10&name=' + customerName;\n      return Customers.getAll(query)\n        .then(function (response) {\n          return response.data.docs;\n        });\n    };\n\n    vm.getSerials = function (sn) {\n      var query = '?page=1&limit=10&serialNumber=' + sn;\n      return Sales.getAll(query)\n        .then(function (response) {\n          return response.data.docs;\n        });\n    };\n\n    vm.openCustomerModal = function (ev) {\n      ev.preventDefault();\n      vm.loadCustomerFields()\n        .then(function (fields) {\n          var customer = {};\n          customer.fields = fields.map(function (item) {\n            return {\n              field: item\n            }\n          });\n          return customer;\n        })\n        .then(function (customer) {\n          return $uibModal.open({\n            animation: true,\n            component: 'createCustomerComponent',\n            resolve: {\n              customer: function () {\n                return angular.copy(customer);\n              }\n            }\n          });\n        })\n        .then(function (modalInstance) {\n          modalInstance.result.then(function (customer) {\n            vm.rma.customer = customer;\n            vm.onCustomerChanged();\n          });\n        });\n    };\n\n    vm.loadCustomerFields = function () {\n      return StaticFields.getFields('Customer')\n        .then(function (response) {\n          return response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n\n    vm.onCustomerChanged = function (fromSerial) {\n      vm.options.customerFromSerial = !!fromSerial;\n    };\n\n    vm.onSerialNumberChanged = function () {\n      if(!vm.serialNumber) return false;\n      var selected = vm.rma.products.some(function (item) {\n        return item.sale._id === vm.serialNumber._id;\n      });\n      if(!selected) {\n        vm.rma.products.push({\n          closed: false,\n          sale: vm.serialNumber,\n          fields: vm.staticFields.map(function (field) {\n            return {\n              field: field,\n              value: ''\n            };\n          })\n        });\n        if(!vm.rma.customer) {\n          vm.rma.customer = vm.serialNumber.customer;\n          vm.onCustomerChanged(true);\n        }\n      }\n      vm.serialNumber = '';\n    };\n\n    vm.deleteSerialNumber = function (sn) {\n      for(var i = 0; i < vm.rma.products.length; i++){\n        if(vm.rma.products[i]._id === sn._id) {\n          vm.rma.products.splice(i, 1);\n          break;\n        }\n      }\n      if(!vm.rma.products.length && vm.options.customerFromSerial){\n        vm.rma.customer = '';\n      }\n    };\n\n    vm.loadStaticFields = function () {\n      StaticFields.getFields(vm.model)\n        .then(function (response) {\n          vm.staticFields = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n    vm.save = function () {\n      vm.rma.totalCount = vm.rma.products.length;\n      if(!vm.rma.totalCount) return false;\n      vm.rma.closedCount = vm.rma.products.filter(function (product) {\n        return product.closed;\n      }).length;\n      vm.rma.closed = vm.rma.totalCount === vm.rma.closedCount;\n      if(vm.editMode){\n        Rma.update(vm.rma)\n          .then(function () {\n            $state.go('rma')\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          });\n      } else{\n        vm.rma.formNumber = vm.options.formNumberStatic + vm.options.formNumberDynamic;\n        Rma.create(vm.rma)\n          .then(function () {\n            $state.go('rma')\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          });\n      }\n    };\n\n    vm.convertDate = function (obj) {\n      if(obj.value){\n        obj.value = new Date(obj.value);\n      }\n    };\n\n    vm.upload = function (file, obj) {\n      Upload.upload({\n        url: '/api/upload',\n        data: {\n          file: file\n        }\n      })\n        .then(function (response) {\n          obj.value = response.data;\n        }, function (resp) {\n          console.log('Error status: ' + resp.status);\n        }, function (evt) {\n          obj.progress = parseInt(100.0 * evt.loaded / evt.total);\n        })\n    };\n\n    vm.toggleEditedState = function (sn) {\n      sn.editable = !sn.editable;\n    };\n    vm.matchCustomers = function () {\n      if(!vm.rma || !vm.rma.customer || !vm.rma.products.length){\n        return vm.invalidCustomer = false;\n      }\n      var invalidProducts = vm.rma.products.filter(function (product) {\n        if(!product.sale.customer) return true;\n        return product.sale.customer._id !== vm.rma.customer._id;\n      });\n      vm.invalidCustomer = !!invalidProducts.length;\n    };\n    vm.updateSerialsCustomer = function () {\n      if(!vm.rma.customer) return false;\n      vm.rma.products.forEach(function (product) {\n        product.sale.customer = vm.rma.customer;\n      });\n    };\n    // vm.uiCanExit = function () {\n    //   return angular.equals(vm.rma, vm.defaultData);\n    // }\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('createFieldComponent', {\n      templateUrl: 'app/components/fields/create/create.field.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createFieldComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createFieldComponent(Fields, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.field = vm.resolve.field;\n      Fields.loadTypes()\n        .then(function (response) {\n          vm.types = response.data;\n        })\n        .catch(function () {\n          toastr.error('Error on load types', 'Error');\n        })\n    };\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n    vm.save = function () {\n      vm.loadInProgress = true;\n      if(vm.field._id){\n        Fields.updateField(vm.field)\n          .then(function () {\n            vm.close({$value: vm.field});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });\n      } else {\n        Fields.createField(vm.field)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('documentCreateComponent', {\n      templateUrl: 'app/components/document/document-create/document-create.component.html',\n      controller: documentCreateComponent,\n      controllerAs: 'vm',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      }\n    });\n\n  /** @ngInject */\n  function documentCreateComponent(Documents, Upload) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.document = vm.resolve.document;\n    };\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n    vm.save = function () {\n      vm.loadInProgress = true;\n      if(vm.document._id){\n        Documents.updateDocument(vm.document)\n          .then(function () {\n            vm.close({$value: vm.document});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });;\n      } else {\n        Documents.createDocument(vm.document)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });;\n      }\n    };\n\n    vm.convertDate = function (obj) {\n      if(obj.value){\n        obj.value = new Date(obj.value);\n      }\n    };\n\n    vm.upload = function (file, obj) {\n      Upload.upload({\n        url: '/api/upload',\n        data: {\n          file: file\n        }\n      })\n        .then(function (response) {\n          obj.value = response.data;\n        }, function (resp) {\n          console.log('Error status: ' + resp.status);\n        }, function (evt) {\n          obj.progress = parseInt(100.0 * evt.loaded / evt.total);\n        })\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceSearchComponent', {\n      templateUrl: 'app/components/device/device-search/device-search.component.html',\n      bindings: {\n        onFiltersChanged: '&',\n        filters: '<',\n        openDeviceModal: '&',\n        mode: '<'\n      },\n      controller: DeviceSearchController,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function DeviceSearchController() {\n    var vm = this;\n\n    vm.reset = function () {\n      vm.filters = {};\n      vm.search();\n    };\n    vm.search = function () {\n      vm.onFiltersChanged({\n        filters: vm.filters\n      });\n    };\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceListComponent', {\n      templateUrl: 'app/components/device/device-list/device-list-component.html',\n      controller: deviceListComponent,\n      controllerAs: 'vm',\n      bindings: {\n        devices: '<',\n        openDeviceModal: '&',\n        delete: '&',\n        sortFilters: '<',\n        onSortFiltersChanged: '&'\n      }\n    });\n\n  /** @ngInject */\n  function deviceListComponent() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceDetailComponent', {\n      templateUrl: 'app/components/device/device-detail/device-detail.component.html',\n      controller: deviceDetailComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function deviceDetailComponent($stateParams, Category, Device, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      Category.getCategories()\n        .then(function (response) {\n          vm.categories = response.data;\n        })\n        .catch(function () {\n          toastr.error('Error on load categories', 'Error');\n        });\n      Device.getDevice($stateParams.id)\n        .then(function (response) {\n          vm.device = response.data;\n        })\n        .catch(function () {\n          toastr.error('Error on load this device', 'Error');\n        })\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('deviceCategoryComponent', {\n      templateUrl: 'app/components/device/device-category/device-category.component.html',\n      controller: deviceCategoryComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function deviceCategoryComponent($stateParams, Documents, Fields, $uibModal, Category) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.deviceId = $stateParams.id;\n      vm.categoryId = $stateParams.categoryId;\n      vm.loadDocuments();\n      Category.getCategory($stateParams.categoryId)\n        .then(function (response) {\n          vm.category = response.data;\n        });\n      Fields.getFields($stateParams.categoryId)\n        .then(function (response) {\n          vm.fields = response.data;\n        })\n    };\n    vm.loadDocuments = function () {\n      Documents.getAll($stateParams.id, $stateParams.categoryId)\n        .then(function (response) {\n          vm.documents = response.data;\n        });\n    };\n    vm.openDocumentModal = function (document) {\n      if (!document._id) {\n        document.category = $stateParams.categoryId;\n        document.product = $stateParams.id;\n        document.fields = vm.fields.map(function (item) {\n          return {\n            field: item\n          }\n        });\n      }\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'documentCreateComponent',\n        resolve: {\n          document: function () {\n            return angular.copy(document);\n          }\n        }\n      });\n\n      modalInstance.result.then(function () {\n        vm.loadDocuments();\n      });\n    };\n    vm.delete = function (document) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete this document?';\n          }\n        }\n      }).result.then(function () {\n        Documents.deleteDocument(document)\n          .then(function () {\n            vm.loadDocuments();\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    }\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('createCustomerComponent', {\n      templateUrl: 'app/components/customers/create/create-customer.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createCustomerComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createCustomerComponent(Customers, toastr, StaticFields, Upload) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.fields = StaticFields.static['Customer'];\n      vm.customer = vm.resolve.customer;\n    };\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n\n    vm.convertDate = function (obj) {\n      if(obj.value){\n        obj.value = new Date(obj.value);\n      }\n    };\n\n    vm.upload = function (file, obj) {\n      Upload.upload({\n        url: '/api/upload',\n        data: {\n          file: file\n        }\n      })\n        .then(function (response) {\n          obj.value = response.data;\n        }, function (resp) {\n          console.log('Error status: ' + resp.status);\n        }, function (evt) {\n          obj.progress = parseInt(100.0 * evt.loaded / evt.total);\n        })\n    };\n    vm.save = function () {\n      if(vm.customer._id){\n        Customers.update(vm.customer)\n          .then(function () {\n            vm.close({$value: vm.customer});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      } else {\n        Customers.create(vm.customer)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          });\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('staticComponent', {\n      templateUrl: 'app/components/categories/static/static.component.html',\n      controller: staticComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function staticComponent(StaticFields, $stateParams, toastr, $state, $uibModal) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.model = $stateParams.model[0].toUpperCase() + $stateParams.model.slice(1);\n      vm.staticFields = StaticFields.static[vm.model];\n      if (!vm.staticFields){\n        toastr.error('Static table with name ' + vm.model + ' not found', 'Error');\n        $state.go('categories');\n      }\n      StaticFields.getFields(vm.model)\n        .then(function (response) {\n          vm.fields = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n    vm.openFieldModal = function (field, index) {\n      if(!field.model) field.model = vm.model;\n      field.required = !!field.required;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createStaticFieldComponent',\n        resolve: {\n          field: function () {\n            return angular.copy(field);\n          }\n        }\n      });\n\n      modalInstance.result.then(function (result) {\n        if(field._id === result._id) {\n          vm.fields[index] = result;\n        } else {\n          vm.fields.push(result);\n        }\n      });\n    };\n    vm.delete = function (field, index) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete field ' + field.title + '?';\n          }\n        }\n      }).result.then(function () {\n        StaticFields.deleteField(field)\n          .then(function () {\n            vm.fields.splice(index, 1);\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('createCategoryComponent', {\n      templateUrl: 'app/components/categories/create/create.category.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: createCategoryComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function createCategoryComponent(Category, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.category = vm.resolve.category;\n      Category.getCategoriesForSub()\n        .then(function (response) {\n          vm.relationCategories = response.data;\n          if (vm.category._id && vm.category.type === 'Table with subcategory') {\n            for(var i = 0; i < vm.relationCategories.length; i++){\n              if(vm.relationCategories[i]._id === vm.category.relatedCategory){\n                vm.category.relatedCategory = vm.relationCategories[i];\n                break;\n              }\n            }\n            for(i = 0; i < vm.category.relatedCategory.fields.length; i++){\n              if(vm.category.relatedCategory.fields[i]._id === vm.category.subcategoryField){\n                vm.category.subcategoryField = vm.category.relatedCategory.fields[i];\n                break;\n              }\n            }\n          }\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n\n      vm.categoryType = ['Table', 'Attachments', 'Gallery', 'Table with subcategory'];\n    };\n\n    vm.clearRelatedCategory =function () {\n      delete vm.category.relatedCategory;\n      vm.clearRelatedField();\n    };\n\n    vm.clearRelatedField = function () {\n      delete vm.category.subcategoryField;\n    };\n\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n\n    vm.save = function () {\n      vm.loadInProgress = true;\n      if(vm.category._id){\n        Category.updateCategory(vm.category)\n          .then(function () {\n            vm.close({$value: vm.category});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });\n      } else {\n        Category.createCategory(vm.category)\n          .then(function (response) {\n            vm.close({$value: response.data});\n          })\n          .catch(function (error) {\n            var message;\n            if (error.data && error.data.message) {\n              message = error.data.message;\n            } else {\n              message = 'Something went wrong';\n            }\n            toastr.error(message, 'Error');\n          })\n          .finally(function () {\n            vm.loadInProgress = false;\n          });;\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('usersComponent', {\n      templateUrl: 'app/components/users/users.component.html',\n      controller: usersComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function usersComponent(Auth, Users, $uibModal) {\n    var vm = this;\n    vm.$onInit = function () {\n      Auth.getCurrentUser()\n        .then(function (user) {\n          vm.user = user;\n        });\n      Users.getUsers()\n        .then(function (response) {\n          vm.users = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        })\n    };\n\n\n    vm.openUserModal = function (user, index) {\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createUserComponent',\n        resolve: {\n          user: function () {\n            return angular.copy(user);\n          }\n        }\n      });\n\n      modalInstance.result.then(function (result) {\n        if(user._id === result._id) {\n          vm.users[index] = result;\n        } else {\n          vm.users.push(result);\n        }\n      });\n    };\n    vm.delete = function (user, index) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete user ' + user.name + '?';\n          }\n        }\n      }).result.then(function () {\n        Users.deleteUser(user)\n          .then(function () {\n            vm.users.splice(index, 1);\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('serialsComponent', {\n      templateUrl: 'app/components/serials/serials.component.html',\n      controller: serialsComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function serialsComponent(localStorageService, Sales, toastr, $uibModal, $httpParamSerializer) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.serials = [];\n      vm.sortFilters = localStorageService.get('serialsSortFilters') || {\n          sort: 'product.model',\n          order: true\n        };\n      vm.limits = [10, 20, 50, 100];\n      vm.pagination = {\n        page: 1,\n        limit: localStorageService.get('paginationLimit') || 10\n      };\n      vm.filters = localStorageService.get('serialsFilters') || {};\n      if(vm.filters.dateFrom) {\n        vm.filters.dateFrom = new Date(vm.filters.dateFrom);\n      }\n      if(vm.filters.dateTo) {\n        vm.filters.dateTo = new Date(vm.filters.dateTo);\n      }\n      vm.loadSerials();\n    };\n    vm.onLimitChange = function () {\n      localStorageService.set('paginationLimit', vm.pagination.limit);\n      vm.loadSerials();\n    };\n\n    vm.loadSerials = function () {\n      var query = '?';\n      var filtersCopy = angular.copy(vm.filters);\n      if(filtersCopy.product) {\n        filtersCopy.product = filtersCopy.product._id;\n      }\n      query += $httpParamSerializer(filtersCopy) + '&';\n      // for(var key in vm.filters) {\n      //   if(vm.filters[key]){\n      //     query = query + key + '=' + vm.filters[key] + '&'\n      //   }\n      // }\n      query = query + 'sort=' + (vm.sortFilters.order ? '' : '-') + vm.sortFilters.sort + '&';\n      query = query + 'page=' + vm.pagination.page + '&';\n      query = query + 'limit=' + vm.pagination.limit;\n      Sales.getAll(query)\n        .then(function (response) {\n          vm.serials = response.data.docs;\n          vm.pagination.total = response.data.total;\n          vm.pagination.page = response.data.page;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n\n    vm.onSortFiltersChanged = function (key) {\n      if(vm.sortFilters.sort === key){\n        vm.sortFilters.order = !vm.sortFilters.order;\n      } else {\n        vm.sortFilters.sort = key;\n        vm.sortFilters.order = true;\n      }\n      localStorageService.set('serialsSortFilters', vm.sortFilters);\n      vm.loadSerials();\n    };\n\n    vm.onFiltersChanged  = function (filters) {\n      localStorageService.set('serialsFilters', filters);\n      vm.filters = filters;\n      vm.loadSerials();\n    };\n\n    vm.delete = function (serial) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete serial number ' + serial.serialNumber + '?';\n          }\n        }\n      }).result.then(function () {\n        Sales.deleteSale(serial)\n          .then(function () {\n            vm.loadSerials();\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    };\n\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('rmaComponent', {\n      templateUrl: 'app/components/rma/rma.component.html',\n      controller: rmaComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function rmaComponent(Rma, toastr, localStorageService, $uibModal, $httpParamSerializer) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.rmaes = [];\n      vm.sortFilters = localStorageService.get('rmaSortFilters') || {\n          sort: 'formNumber',\n          order: true\n        };\n      vm.limits = [10, 20, 50, 100];\n      vm.pagination = {\n        total: 0,\n        page: 1,\n        limit: localStorageService.get('paginationLimit') || 10\n      };\n      vm.filters = localStorageService.get('rmaFilters') || {};\n      vm.loadRma();\n    };\n\n    vm.onLimitChange = function () {\n      localStorageService.set('paginationLimit', vm.pagination.limit);\n      vm.loadRma();\n    };\n\n    vm.onFiltersChanged  = function (filters) {\n      localStorageService.set('rmaFilters', filters);\n      vm.filters = filters;\n      vm.loadRma();\n    };\n\n    vm.onSortFiltersChanged = function (key) {\n      if(vm.sortFilters.sort === key){\n        vm.sortFilters.order = !vm.sortFilters.order;\n      } else {\n        vm.sortFilters.sort = key;\n        vm.sortFilters.order = true;\n      }\n      localStorageService.set('rmaSortFilters', vm.sortFilters);\n      vm.loadRma();\n    };\n\n    vm.loadRma = function () {\n      var query = '?';\n      query += $httpParamSerializer(vm.filters) + '&';\n      query = query + 'sort=' + (vm.sortFilters.order ? '' : '-') + vm.sortFilters.sort + '&';\n      query = query + 'page=' + vm.pagination.page + '&';\n      query = query + 'limit=' + vm.pagination.limit;\n      Rma.getAll(query)\n        .then(function (response) {\n          vm.rmaes = response.data.docs;\n          // vm.rmaes.forEach(function (rma) {\n          //   rma.closedCount = rma.products.filter(function (product) {\n          //     return product.closed;\n          //   }).length;\n          // });\n          vm.pagination.total = response.data.total;\n          vm.pagination.page = response.data.page;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n\n    vm.delete = function (rma) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete RMA ' + rma.formNumber + ' ?';\n          }\n        }\n      }).result.then(function () {\n        Rma.delete(rma)\n          .then(function () {\n            vm.loadRma();\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    };\n\n    vm.reset = function () {\n      vm.filters = {};\n      vm.loadRma();\n    };\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('navbarComponent', {\n      templateUrl: 'app/components/navbar/navbar.component.html',\n      controller: NavbarController,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function NavbarController(Auth) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.isNavCollapsed = false;\n      Auth.getCurrentUser()\n        .then(function (user) {\n          vm.user = user;\n        });\n    };\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('mainComponent', {\n      templateUrl: 'app/components/main/main.component.html',\n      controller: MainController,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function MainController() {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.currentDate = new Date();\n    };\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('loginComponent', {\n      templateUrl: 'app/components/login/login.component.html',\n      controller: LoginComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function LoginComponent(Auth, $state, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      Auth.logOut();\n      vm.data = {};\n    };\n    vm.login = function () {\n      Auth.login(vm.data)\n        .then(function (currentUser) {\n          if(currentUser.role === 'salesAdmin' || currentUser.role === 'salesUser'){\n            $state.go('serials')\n          }\n          else if(currentUser.role === 'support'){\n            $state.go('rma')\n          }\n          else $state.go('home')\n        })\n        .catch(function (error) {\n          var message;\n          if (error.data && error.data.message) {\n            message = error.data.message;\n          } else {\n            message = 'Something went wrong';\n          }\n          toastr.error(message, 'Error');\n        });\n    };\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('importComponent', {\n      templateUrl: 'app/components/import/import.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: importComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function importComponent() {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.loadInProgress = false;\n      vm.headers = vm.resolve.headers;\n      vm.data = [];\n      vm.editedData = [];\n      vm.pagination = {\n        limit: 50,\n        parts: 0,\n        total: 0,\n        part: 0\n      };\n    };\n    vm.onParseStarted = function () {\n      vm.loadInProgress = true;\n    };\n\n    vm.onDataChanged = function (data) {\n      vm.data = data;\n      if(vm.resolve.parser) {\n        vm.resolve.parser(vm.data);\n      }\n      vm.pagination.total = vm.data.length;\n      vm.pagination.part = 0;\n      vm.pagination.parts = Math.ceil(vm.pagination.total / vm.pagination.limit);\n      vm.nextPart();\n      vm.loadInProgress = false;\n    };\n\n    vm.nextPart =function () {\n      vm.pagination.part++;\n      vm.editedData = vm.data.splice(0, vm.pagination.limit);\n    };\n\n    vm.save = function () {\n      vm.loadInProgress = true;\n      vm.resolve.save(vm.editedData)\n        .then(function () {\n          if(!vm.data.length) {\n            vm.close();\n          } else {\n            vm.nextPart();\n          }\n        })\n        .finally(function () {\n          vm.loadInProgress = false;\n        });\n    };\n\n    vm.cancel = function () {\n      vm.dismiss({$value: 'cancel'});\n    };\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('homeComponent', {\n      templateUrl: 'app/components/home/home.component.html',\n      controller: HomeController,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function HomeController(localStorageService, Device, toastr, $uibModal) {\n    var vm = this;\n\n    vm.$onInit = function () {\n      // Device.generate();\n      vm.devices = [];\n      vm.sortFilters = localStorageService.get('deviceSortFilters') || {\n        sort: 'model',\n        order: true\n      };\n      vm.limits = [10, 20, 50, 100];\n      vm.pagination = {\n        page: 1,\n        limit: localStorageService.get('paginationLimit') || 10\n      };\n      vm.filters = localStorageService.get('deviceFilters') || {};\n      vm.loadDevices();\n    };\n\n    vm.onLimitChange = function () {\n      localStorageService.set('paginationLimit', vm.pagination.limit);\n      vm.loadDevices();\n    };\n\n    vm.onFiltersChanged  = function (filters) {\n      localStorageService.set('deviceFilters', filters);\n      vm.filters = filters;\n      vm.loadDevices();\n    };\n\n    vm.onSortFiltersChanged = function (key) {\n      if(vm.sortFilters.sort === key){\n        vm.sortFilters.order = !vm.sortFilters.order;\n      } else {\n        vm.sortFilters.sort = key;\n        vm.sortFilters.order = true;\n      }\n      localStorageService.set('deviceSortFilters', vm.sortFilters);\n      vm.loadDevices();\n    };\n\n    vm.loadDevices = function () {\n      var query = '?';\n      for(var key in vm.filters) {\n        if(vm.filters[key]){\n          query = query + key + '=' + vm.filters[key] + '&'\n        }\n      }\n      query = query + 'sort=' + (vm.sortFilters.order ? '' : '-') + vm.sortFilters.sort + '&';\n      query = query + 'page=' + vm.pagination.page + '&';\n      query = query + 'limit=' + vm.pagination.limit;\n      Device.getAll(query)\n        .then(function (response) {\n          vm.devices = response.data.docs;\n          vm.pagination.total = response.data.total;\n          vm.pagination.page = response.data.page;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n\n    vm.openDeviceModal = function (device, index) {\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createDeviceComponent',\n        resolve: {\n          device: function () {\n            return angular.copy(device);\n          }\n        }\n      });\n\n      modalInstance.result.then(function (result) {\n        // if(device._id === result._id) {\n        //   vm.devices[index] = result;\n        // } else if (applyByFilters(result)){\n        //   vm.devices.push(result);\n        // }\n        vm.loadDevices();\n      });\n    };\n    vm.delete = function (device, index) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete device ' + device.model + '?';\n          }\n        }\n      }).result.then(function () {\n        Device.deleteDevice(device)\n          .then(function () {\n            // vm.devices.splice(index, 1);\n            vm.loadDevices();\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    };\n    // function applyByFilters(device) {\n    //   var apply = true;\n    //   for (var key in vm.filters) {\n    //     if(vm.filters[key].length && device[key].indexOf(vm.filters[key]) === -1) {\n    //       apply = false;\n    //       break;\n    //     }\n    //   }\n    //   return apply;\n    // }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('helpComponent', {\n      templateUrl: 'app/components/help/help-component.html',\n      controller: helpComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function helpComponent() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('fieldsComponent', {\n      templateUrl: 'app/components/fields/fields.component.html',\n      controller: fieldsComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function fieldsComponent(Fields, $stateParams, $uibModal, Category, $state, toastr) {\n    var vm = this;\n    vm.$onInit = function () {\n      Category.getCategory($stateParams.id)\n        .then(function (response) {\n          vm.category = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n          $state.go('categories');\n        });\n\n      Fields.getFields($stateParams.id)\n        .then(function (response) {\n          vm.fields = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n    vm.openFieldModal = function (field, index) {\n      if(!field.category) field.category = $stateParams.id;\n      field.required = !!field.required;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createFieldComponent',\n        resolve: {\n          field: function () {\n            return angular.copy(field);\n          }\n        }\n      });\n\n      modalInstance.result.then(function (result) {\n        if(field._id === result._id) {\n          vm.fields[index] = result;\n        } else {\n          vm.fields.push(result);\n        }\n      });\n    };\n    vm.delete = function (field, index) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete field ' + field.title + '?';\n          }\n        }\n      }).result.then(function () {\n        Fields.deleteField(field)\n          .then(function () {\n            vm.fields.splice(index, 1);\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('customersComponent', {\n      templateUrl: 'app/components/customers/customers.component.html',\n      controller: customersComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function customersComponent(Customers, toastr, localStorageService, $uibModal, $scope, StaticFields) {\n    var vm = this;\n    vm.$onInit = function () {\n      vm.model = 'Customer';\n      vm.fields = StaticFields.static[vm.model];\n      vm.customers = [];\n      vm.sortFilters = localStorageService.get('customersSortFilters') || {\n          sort: 'name',\n          order: true\n        };\n      vm.limits = [10, 20, 50, 100];\n      vm.pagination = {\n        total: 0,\n        page: 1,\n        limit: localStorageService.get('paginationLimit') || 10\n      };\n      vm.filters = localStorageService.get('customersFilters') || {};\n      vm.dynamicFields = [];\n      StaticFields.getFields(vm.model)\n        .then(function (response) {\n          vm.dynamicFields = response.data;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n      // $scope.$watch('vm.filters', function () {\n      //   vm.loadCustomers();\n      // }, true);\n      vm.loadCustomers()\n    };\n\n    vm.loadCustomers = function () {\n      var query = '?';\n      for(var key in vm.filters) {\n        if(vm.filters[key]){\n          query = query + key + '=' + vm.filters[key] + '&'\n        }\n      }\n      query = query + 'sort=' + (vm.sortFilters.order ? '' : '-') + vm.sortFilters.sort + '&';\n      query = query + 'page=' + vm.pagination.page + '&';\n      query = query + 'limit=' + vm.pagination.limit;\n      Customers.getAll(query)\n        .then(function (response) {\n          vm.customers = response.data.docs;\n          vm.pagination.total = response.data.total;\n          vm.pagination.page = response.data.page;\n        })\n        .catch(function () {\n          toastr.error('Something went wrong', 'Error');\n        });\n    };\n\n    vm.openCustomerModal = function (customer) {\n      if(!customer._id){\n        customer.fields = vm.dynamicFields.map(function (item) {\n          return {\n            field: item\n          }\n        });\n      }\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createCustomerComponent',\n        resolve: {\n          customer: function () {\n            return angular.copy(customer);\n          }\n        }\n      });\n\n      modalInstance.result.then(function () {\n        vm.loadCustomers();\n      });\n    };\n    vm.openImportModal = function () {\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'importComponent',\n        size: 'lg',\n        resolve: {\n          headers: function () {\n            return vm.fields;\n          },\n          save: function () {\n            return function (data) {\n              // data.forEach(function (sale) {\n              //   sale.product = $stateParams.id;\n              //   sale.fields = vm.fields.map(function (item) {\n              //     return {\n              //       field: item\n              //     }\n              //   });\n              // });\n              return Customers.createCollection(data)\n                .catch(function () {\n                  toastr.error('Something went wrong', 'Error');\n                });\n            }\n          }\n        }\n      });\n\n      modalInstance.result.finally(function () {\n        vm.loadCustomers();\n      });\n    };\n\n    vm.delete = function (customer) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete customer ' + customer.name + '?';\n          }\n        }\n      }).result.then(function () {\n        Customers.delete(customer)\n          .then(function () {\n            vm.loadCustomers();\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    };\n\n    vm.onLimitChange = function () {\n      localStorageService.set('paginationLimit', vm.pagination.limit);\n      vm.loadCustomers();\n    };\n\n    vm.onFiltersChanged  = function (filters) {\n      localStorageService.set('customersFilters', filters);\n      vm.filters = filters;\n      vm.loadCustomers();\n    };\n\n    vm.onSortFiltersChanged = function (key) {\n      if(vm.sortFilters.sort === key){\n        vm.sortFilters.order = !vm.sortFilters.order;\n      } else {\n        vm.sortFilters.sort = key;\n        vm.sortFilters.order = true;\n      }\n      localStorageService.set('customersSortFilters', vm.sortFilters);\n      vm.loadCustomers();\n    };\n\n    vm.reset = function () {\n      vm.filters = {};\n      vm.loadCustomers();\n    };\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('confirmComponent', {\n      templateUrl: 'app/components/confirm/confirm.component.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: function () {\n\n      },\n      controllerAs: 'vm'\n    });\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('categoriesComponent', {\n      templateUrl: 'app/components/categories/categories.component.html',\n      controller: categoriesComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function categoriesComponent(Category, toastr, $uibModal) {\n    var vm = this;\n    vm.$onInit = function () {\n      Category.getCategories()\n        .then(function (response) {\n          vm.categories = response.data;\n        })\n        .catch(function () {\n          toastr.error('Error on load categories', 'Error');\n        })\n    };\n    vm.openCategoryModal = function (category, index) {\n      var modalInstance = $uibModal.open({\n        animation: true,\n        component: 'createCategoryComponent',\n        resolve: {\n          category: function () {\n            return angular.copy(category);\n          }\n        }\n      });\n\n      modalInstance.result.then(function (result) {\n        // // vm.selected = selectedItem;\n        // console.log(result)\n        if(category._id === result._id) {\n          vm.categories[index] = result;\n        } else {\n          vm.categories.push(result);\n        }\n      });\n    };\n    vm.delete = function (category, index) {\n      $uibModal.open({\n        animation: true,\n        component: 'confirmComponent',\n        size: 'sm',\n        resolve: {\n          message: function () {\n            return 'Are you sure to delete category ' + category.title + '?';\n          }\n        }\n      }).result.then(function () {\n        Category.deleteCategory(category)\n          .then(function () {\n            vm.categories.splice(index, 1);\n          })\n          .catch(function () {\n            toastr.error('Something went wrong', 'Error');\n          })\n      });\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .component('aboutComponent', {\n      templateUrl: 'app/components/about/about-component.html',\n      controller: aboutComponent,\n      controllerAs: 'vm'\n    });\n\n  /** @ngInject */\n  function aboutComponent() {\n    var vm = this;\n\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Users', Users);\n\n  /** @ngInject */\n  function Users($http) {\n    var self = this;\n\n    self.getUsers = function () {\n      return $http.get('/api/users');\n    };\n\n    self.createUser = function (user) {\n      return $http.post('/api/users', user)\n    };\n\n    self.updateUser  = function (user) {\n      return $http.put('/api/users/' + user._id, user)\n    };\n    self.deleteUser = function (user) {\n      return $http.delete('/api/users/' + user._id)\n    };\n\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('StaticFields', StaticFields);\n\n  /** @ngInject */\n  function StaticFields($http) {\n    var self = this;\n\n    self.getFields = function (model) {\n      return $http.get('/api/static-fields?model=' + model);\n    };\n\n    self.getField = function (id) {\n      return $http.get('/api/static-fields/' + id);\n    };\n\n    self.createField = function (field) {\n      return $http.post('/api/static-fields', field)\n    };\n\n    self.updateField  = function (field) {\n      return $http.put('/api/static-fields/' + field._id, field)\n    };\n    self.deleteField = function (field) {\n      return $http.delete('/api/static-fields/' + field._id)\n    };\n    self.loadTypes = function () {\n      return $http.get('/api/types')\n    };\n\n    var Field = function (name, type, required) {\n      this.label = name;\n      this.type = type;\n      this.required = required;\n    };\n\n    self.static = {\n      'Sale': [\n        new  Field('Serial Number', 'String', true),\n        new  Field('Version', 'String', true),\n        new  Field('Sales Order', 'String', false),\n        new  Field('Date', 'Date', false),\n        new  Field('Customer Name', 'Customer', false)\n      ],\n      'Customer': [\n        {\n          key: 'name',\n          label: 'Name',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'phone',\n          label: 'Phone',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'contactPerson',\n          label: 'Contact Person',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'email',\n          label: 'Email',\n          required: true,\n          type: 'email'\n        },\n        {\n          key: 'salesRep',\n          label: 'Sales Rep',\n          required: false,\n          type: 'text'\n        },\n        {\n          key: 'address',\n          label: 'Address',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'city',\n          label: 'City',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'zipCode',\n          label: 'Zip Code',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'state',\n          label: 'State',\n          required: true,\n          type: 'text'\n        },\n        {\n          key: 'country',\n          label: 'Country',\n          required: true,\n          type: 'text'\n        }\n      ],\n      'Rma': [\n        new  Field('Serial Number', 'String', true),\n        new  Field('Version', 'String', true),\n        new  Field('Sales Order', 'String', true),\n        new  Field('Date', 'Date', true),\n        new  Field('Customer Name', 'Customer', true)\n      ]\n    }\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Sales', Sales);\n\n  /** @ngInject */\n  function Sales($http) {\n    var self = this;\n    self.getAll = function (query) {\n      return $http.get('/api/sales' + query);\n    };\n    // self.getDevice = function (id) {\n    //   return $http.get('/api/products/' + id);\n    // };\n    self.createSale = function (sale) {\n      return $http.post('/api/sales', sale)\n    };\n\n    self.updateSale  = function (sale) {\n      return $http.put('/api/sales/' + sale._id, sale)\n    };\n    self.deleteSale = function (sale) {\n      return $http.delete('/api/sales/' + sale._id)\n    };\n    self.createCollection = function (sales) {\n      return $http.post('/api/sales/collection', sales)\n    };\n\n\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Rma', Rma);\n\n  /** @ngInject */\n  function Rma($http) {\n    var self = this;\n\n    self.getAll = function (query) {\n      return $http.get('/api/rma' + query);\n    };\n\n    self.getOne = function (id) {\n      return $http.get('/api/rma/' + id);\n    };\n\n    self.create = function (rma) {\n      return $http.post('/api/rma', rma)\n    };\n\n    self.update  = function (rma) {\n      return $http.put('/api/rma/' + rma._id, rma)\n    };\n    self.delete = function (rma) {\n      return $http.delete('/api/rma/' + rma._id)\n    };\n\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Fields', Fields);\n\n  /** @ngInject */\n  function Fields($http) {\n    var self = this;\n\n    self.getFields = function (categoryId) {\n      return $http.get('/api/fields?category=' + categoryId);\n    };\n\n    self.getField = function (id) {\n      return $http.get('/api/fields/' + id);\n    };\n\n    self.createField = function (field) {\n      return $http.post('/api/fields', field)\n    };\n\n    self.updateField  = function (field) {\n      return $http.put('/api/fields/' + field._id, field)\n    };\n    self.deleteField = function (field) {\n      return $http.delete('/api/fields/' + field._id)\n    };\n    self.loadTypes = function () {\n      return $http.get('/api/types')\n    };\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Documents', Documents);\n\n  /** @ngInject */\n  function Documents($http) {\n    var self = this;\n\n    self.getAll = function (deviceId, categoryId) {\n      return $http.get('/api/documents?product=' + deviceId + '&category=' + categoryId);\n    };\n    // self.getByDeviceAndField = function (deviceId, fieldId) {\n    //   return $http.get('/api/documents?product=' + deviceId + '&field=' + fieldId);\n    // };\n    // self.getDevice = function (id) {\n    //   return $http.get('/api/products/' + id);\n    // };\n    self.createDocument = function (document) {\n      return $http.post('/api/documents', document)\n    };\n\n    self.updateDocument  = function (document) {\n      return $http.put('/api/documents/' + document._id, document)\n    };\n    self.deleteDocument = function (document) {\n      return $http.delete('/api/documents/' + document._id)\n    };\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Device', Device);\n\n  /** @ngInject */\n  function Device($http) {\n    var self = this;\n\n    self.getAll = function (query) {\n      return $http.get('/api/products' + query);\n    };\n    self.getDevice = function (id) {\n      return $http.get('/api/products/' + id);\n    };\n    self.createDevice = function (device) {\n      return $http.post('/api/products', device)\n    };\n\n    self.updateDevice  = function (device) {\n      return $http.put('/api/products/' + device._id, device)\n    };\n    self.deleteDevice = function (device) {\n      return $http.delete('/api/products/' + device._id)\n    };\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Customers', Customers);\n\n  /** @ngInject */\n  function Customers($http) {\n    var self = this;\n\n    self.getAll = function (query) {\n      return $http.get('/api/customers' + query);\n    };\n\n    self.create = function (customer) {\n      return $http.post('/api/customers', customer)\n    };\n    self.createCollection = function (customers) {\n      return $http.post('/api/customers/collection', customers)\n    };\n\n    self.update  = function (customer) {\n      return $http.put('/api/customers/' + customer._id, customer)\n    };\n    self.delete = function (customer) {\n      return $http.delete('/api/customers/' + customer._id)\n    };\n\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Category', Category);\n\n  /** @ngInject */\n  function Category($http) {\n    var self = this;\n\n    self.getCategories = function () {\n      return $http.get('/api/categories');\n    };\n    self.getCategory = function (id) {\n      return $http.get('/api/categories/' + id);\n    };\n    self.getCategoriesForSub = function () {\n      return $http.get('/api/categories/relation/fields')\n    };\n    self.createCategory = function (category) {\n      return $http.post('/api/categories', category)\n    };\n\n    self.updateCategory  = function (category) {\n      return $http.put('/api/categories/' + category._id, category)\n    };\n    self.deleteCategory = function (category) {\n      return $http.delete('/api/categories/' + category._id)\n    };\n\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .service('Auth', Auth);\n\n  /** @ngInject */\n  function Auth($http, localStorageService, $q) {\n    var self = this;\n    self.isLoggedin = !!localStorageService.get('token');\n    var currentUser = {};\n\n    if (self.isLoggedin) {\n      currentUser = me();\n    }\n\n    self.login = function (data) {\n      return $http.post('/api/auth/local', data)\n        .then(function (response) {\n          localStorageService.set('token', response.data.token);\n          self.isLoggedin = true;\n          currentUser = me();\n          return currentUser;\n        });\n    };\n\n    self.getCurrentUser = function () {\n      return $q.when(currentUser);\n    };\n\n    self.logOut = function () {\n      localStorageService.remove('token');\n      localStorageService.remove('deviceFilters');\n      localStorageService.remove('deviceSortFilters');\n      self.isLoggedin = false;\n      currentUser = {};\n    };\n\n    function me() {\n      return $http.get('/api/users/me')\n        .then(function (response) {\n          return response.data;\n        });\n    }\n  }\n\n})();\n\n(function () {\n  angular\n    .module('app')\n    .factory('AuthInterceptor', AuthInterceptor);\n\n  /** @ngInject */\n  function AuthInterceptor (localStorageService, $q, $injector) {\n    return {\n      request: function (config) {\n        config.headers = config.headers || {};\n        config.headers['authorization'] = 'Bearer ' + localStorageService.get('token');\n        return config;\n      },\n      responseError: function (response) {\n        if(response.status === 401){\n          var state = $injector.get('$state');\n          if(state.$current.name !== 'login') state.go('login');\n        }\n        return $q.reject(response);\n      }\n    };\n  }\n})();\n\nangular\n  .module('app')\n  .filter('nthChild', function () {\n    return function (items, nth) {\n      if(!items || !angular.isArray(items)) return items;\n      return items.filter(function (item, index) {\n        return index % 2 === nth;\n      });\n    };\n  });\n\n(function () {\n  angular\n    .module('app')\n    .directive('hasRole', hasRole);\n\n  /** @ngInject */\n  function hasRole(Auth) {\n    return {\n      restrict: 'A',\n      scope: {\n        hasRole: '<'\n      },\n      link: function (scope, element, attr) {\n        Auth.getCurrentUser()\n          .then(function (user) {\n            if(scope.hasRole.indexOf(user.role) === -1){\n              element.hide();\n            }\n          })\n      }\n    }\n  }\n})();\n\n(function () {\n  angular\n    .module('app')\n    .directive('fileread', function () {\n      return {\n        scope: {\n          headers: '<',\n          onDataChanged: '&',\n          parseStarted: '&'\n        },\n        link: function ($scope, $elm, $attrs) {\n          $elm.on('change', function (changeEvent) {\n\n            $scope.$apply(function () {\n              $scope.parseStarted();\n            });\n            var reader = new FileReader();\n\n            reader.onload = function (evt) {\n              var data = evt.target.result;\n              var workbook = XLSX.read(data, {type: 'binary', cellDates: true});\n              data = XLSX.utils.sheet_to_json(\n                workbook.Sheets[workbook.SheetNames[0]],\n                {\n                  header: $scope.headers.map(function (item) {\n                    return item.key\n                  })\n                }\n              );\n\n              $scope.$apply(function () {\n                $scope.onDataChanged({data: data});\n                $elm.val(null);\n              });\n            };\n            reader.readAsBinaryString(changeEvent.target.files[0]);\n          });\n        }\n      }\n    })\n})();\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/templates/dynamic-fields.html\",\"<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'number\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <input type=\\\"number\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'text\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'link\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"http://{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-pattern=\\\"/https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'longText\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <textarea ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" placeholder=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\"></textarea>\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'select\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <select ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" ng-options=\\\"option as option for option in obj.field.options\\\">\\n  </select>\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'file\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <div class=\\\"load-progress\\\">\\n    <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n      <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n    </uib-progressbar>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n    <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" class=\\\"form-control\\\" placeholder=\\\"{{obj.field.title}}\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n  </div>\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'img\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <div class=\\\"load-progress\\\">\\n    <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n      <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n    </uib-progressbar>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\" ngf-accept=\\\"\\'image/*\\'\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n    <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" placeholder=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n  </div>\\n</div>\\n<div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'date\\'\\\">\\n  <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n  <p class=\\\"input-group\\\" ng-init=\\\"vm.convertDate(obj)\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"obj.value\\\" popup-placement=\\\"auto\\\" placeholder=\\\"{{obj.field.title}}\\\" is-open=\\\"obj.open\\\" ng-required=\\\"obj.required\\\" close-text=\\\"Close\\\">\\n    <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"obj.open = !obj.open\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n  </p>\\n</div>\\n\");\n$templateCache.put(\"app/components/about/about-component.html\",\"<h1>About</h1>\\n\");\n$templateCache.put(\"app/components/categories/categories.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 table-responsive\\\">\\n    <p class=\\\"no-print\\\">\\n      <button class=\\\"btn btn-primary btn-sm\\\" ng-click=\\\"vm.openCategoryModal({})\\\">New</button>\\n    </p>\\n    <table class=\\\"table table-bordered\\\">\\n      <thead>\\n      <th>Name</th>\\n      <th>Production</th>\\n      <th>Sales</th>\\n      <th>Published</th>\\n      <th>Type</th>\\n      <th>Date create</th>\\n      <th class=\\\"col-actions no-print\\\">Actions</th>\\n      </thead>\\n      <tbody>\\n      <tr ng-repeat=\\\"category in vm.categories\\\">\\n        <td>{{category.title}}</td>\\n        <td>{{category.production}}</td>\\n        <td>{{category.sales}}</td>\\n        <td>{{category.published}}</td>\\n        <td>{{category.type}}</td>\\n        <td>{{category.dateCreate | date : \\'MM.dd.yyyy HH:mm\\'}}</td>\\n        <td class=\\\"col-actions no-print\\\">\\n          <a ui-sref=\\\"fields({id: category._id})\\\" class=\\\"btn btn-success btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n          </a>\\n          <button type=\\\"button\\\" ng-click=\\\"vm.openCategoryModal(category, $index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" ng-click=\\\"vm.delete(category, $index)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>Serial Numbers</td>\\n        <td>false</td>\\n        <td>true</td>\\n        <td>true</td>\\n        <td>Table</td>\\n        <td>static</td>\\n        <td class=\\\"col-actions no-print\\\">\\n          <a ui-sref=\\\"static({model: \\'sale\\'})\\\" class=\\\"btn btn-success btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n          </a>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>Customers</td>\\n        <td>false</td>\\n        <td>true</td>\\n        <td>true</td>\\n        <td>Table</td>\\n        <td>static</td>\\n        <td class=\\\"col-actions no-print\\\">\\n          <a ui-sref=\\\"static({model: \\'customer\\'})\\\" class=\\\"btn btn-success btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n          </a>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>Serials in RMA</td>\\n        <td>false</td>\\n        <td>false</td>\\n        <td>true</td>\\n        <td>Table</td>\\n        <td>static</td>\\n        <td class=\\\"col-actions no-print\\\">\\n          <a ui-sref=\\\"static({model: \\'rma\\'})\\\" class=\\\"btn btn-success btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n          </a>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/confirm/confirm.component.html\",\"<div class=\\\"modal-header\\\">\\n  <h4>{{vm.resolve.title ? vm.resolve.title : \\'Confirm\\'}}</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>{{vm.resolve.message}}</p>\\n</div>\\n<div class=\\\"modal-footer text-right\\\">\\n  <button class=\\\"btn btn-danger\\\" ng-click=\\\"vm.dismiss({$value: false})\\\">Cancel</button>\\n  <button class=\\\"btn btn-success\\\" ng-click=\\\"vm.close({$value: true})\\\">Ok</button>\\n</div>\\n\");\n$templateCache.put(\"app/components/customers/customers.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3 no-print sm-spacer\\\">\\n    <form name=\\\"vm.form\\\" ng-submit=\\\"vm.loadCustomers()\\\">\\n      <div class=\\\"form-group form-group-sm\\\" ng-repeat=\\\"field in vm.fields | limitTo: 5\\\">\\n        <label for=\\\"{{field.key}}\\\">{{field.label}}:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.filters[field.key]\\\" id=\\\"{{field.key}}\\\" name=\\\"{{field.key}}\\\" class=\\\"form-control\\\" placeholder=\\\"{{field.label}}\\\">\\n      </div>\\n\\n      <div class=\\\"text-right\\\">\\n        <button class=\\\"btn btn-info btn-sm\\\" type=\\\"button\\\" has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\" ng-click=\\\"vm.openImportModal()\\\">Import\\n        </button>\\n        <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" has-role=\\\"[\\'admin\\']\\\" ng-click=\\\"vm.openCustomerModal({})\\\">New\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" ng-click=\\\"vm.reset()\\\">Reset\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\">Search\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-md-9\\\">\\n    <div>\\n      <div class=\\\"table-responsive scroled-table\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead fix-head>\\n          <tr>\\n            <th ng-repeat=\\\"field in vm.fields\\\" ng-click=\\\"vm.onSortFiltersChanged(field.key)\\\">\\n              {{field.label}}\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === field.key\\\"></span>\\n            </th>\\n            <th ng-repeat=\\\"field in vm.dynamicFields | orderBy : \\'_id\\'\\\">{{field.title}}</th>\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'name\\')\\\">-->\\n            <!--Name:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'name\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'phone\\')\\\">-->\\n            <!--Phone:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'phone\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'contactPerson\\')\\\">-->\\n            <!--Contact Person:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'contactPerson\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'email\\')\\\">-->\\n            <!--Email:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'email\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'address\\')\\\">-->\\n            <!--Address:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'address\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'city\\')\\\">-->\\n            <!--City:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'city\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'zipCode\\')\\\">-->\\n            <!--Zip Code:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'zipCode\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'state\\')\\\">-->\\n            <!--State:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'state\\'\\\"></span>-->\\n            <!--</th>-->\\n            <!--<th ng-click=\\\"vm.onSortFiltersChanged(\\'country\\')\\\">-->\\n            <!--Country:-->\\n            <!--<span class=\\\"glyphicon glyphicon-triangle-bottom\\\"-->\\n            <!--ng-class=\\\"{reverse: vm.sortFilters.order}\\\"-->\\n            <!--ng-show=\\\"vm.sortFilters.sort === \\'country\\'\\\"></span>-->\\n            <!--</th>-->\\n            <th class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\']\\\">Actions\\n            </th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr ng-repeat=\\\"customer in vm.customers\\\">\\n            <!--<td ng-repeat=\\\"field in vm.fields\\\">{{customer[field.key]}}-->\\n            <!--<a ng-if=\\\"field.key === \\'name\\'\\\" ui-sref=\\\"serials({id: customer._id})\\\">{{customer.name}}</a>-->\\n            <!--</td>-->\\n            <td>{{customer.name}}</td>\\n            <td>{{customer.phone}}</td>\\n            <td>{{customer.contactPerson}}</td>\\n            <td>{{customer.email}}</td>\\n            <td>{{customer.salesRep}}</td>\\n            <td>{{customer.address}}</td>\\n            <td>{{customer.city}}</td>\\n            <td>{{customer.zipCode}}</td>\\n            <td>{{customer.state}}</td>\\n            <td>{{customer.country}}</td>\\n            <td ng-repeat=\\\"field in customer.fields | orderBy : \\'field._id\\'\\\">\\n              <a href=\\\"/api/uploads/{{field.value.filename}}\\\" ng-if=\\\"field.field.type.value === \\'file\\' || field.field.type.value === \\'img\\'\\\" target=\\\"_blank\\\">{{field.value.originalname}}</a>\\n              <span ng-if=\\\"field.field.type.value === \\'text\\' ||\\n                     field.field.type.value === \\'number\\' ||\\n                     field.field.type.value === \\'select\\' ||\\n                     field.field.type.value === \\'longText\\' \\\">{{field.value}}</span>\\n              <span ng-if=\\\"field.field.type.value === \\'date\\'\\\">{{field.value | date : \\'MM.dd.yyyy\\'}}</span>\\n              <a href=\\\"{{field.value}}\\\" ng-if=\\\"field.field.type.value === \\'link\\'\\\" target=\\\"_blank\\\">{{field.value}}</a>\\n            </td>\\n            <td class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\']\\\">\\n              <button type=\\\"button\\\" ng-click=\\\"vm.openCustomerModal(customer)\\\" class=\\\"btn btn-primary btn-sm\\\">\\n                <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n              </button>\\n              <button type=\\\"button\\\" ng-click=\\\"vm.delete(customer)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n              </button>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"pagination-wrapper no-print\\\">\\n      <ul uib-pagination total-items=\\\"vm.pagination.total\\\" ng-model=\\\"vm.pagination.page\\\" ng-change=\\\"vm.loadCustomers()\\\" max-size=\\\"6\\\" items-per-page=\\\"vm.pagination.limit\\\" class=\\\"pagination-sm pull-left\\\" boundary-link-numbers=\\\"true\\\"></ul>\\n      <span class=\\\"full-flex\\\"></span>\\n      <div class=\\\"btn-group btn-group-sm\\\">\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Items per page</label>\\n        <label class=\\\"btn btn-success\\\" ng-model=\\\"vm.pagination.limit\\\" ng-change=\\\"vm.onLimitChange()\\\" ng-repeat=\\\"limit in vm.limits\\\" uib-btn-radio=\\\"limit\\\">{{limit}}</label>\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Count: {{vm.pagination.total}}</label>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/fields/fields.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 table-responsive\\\">\\n    <h3>Category: {{vm.category.title}}</h3>\\n    <p ng-if=\\\"vm.category.type !== \\'Gallery\\' && vm.category.type !== \\'Attachments\\'\\\">\\n      <button class=\\\"btn btn-primary btn-sm\\\" ng-click=\\\"vm.openFieldModal({})\\\">New</button>\\n    </p>\\n    <table class=\\\"table table-bordered\\\" ng-if=\\\"vm.fields.length > 0\\\">\\n      <thead>\\n      <th>Field name</th>\\n      <th>Field type</th>\\n      <th>Required</th>\\n      <th>Use as subcategory</th>\\n      <th class=\\\"col-actions\\\" ng-if=\\\"vm.category.type !== \\'Gallery\\' && vm.category.type !== \\'Attachments\\'\\\">Actions</th>\\n      </thead>\\n      <tbody>\\n      <tr ng-repeat=\\\"field in vm.fields\\\">\\n        <td>{{field.title}}</td>\\n        <td>{{field.type.label}}</td>\\n        <td>{{field.required}}</td>\\n        <td>{{field.useAsSubcategory}}</td>\\n        <td class=\\\"col-actions\\\" ng-if=\\\"vm.category.type !== \\'Gallery\\' && vm.category.type !== \\'Attachments\\'\\\">\\n          <button type=\\\"button\\\" ng-click=\\\"vm.openFieldModal(field, $index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" ng-click=\\\"vm.delete(field, $index)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"col-xs-12\\\" ng-if=\\\"vm.fields.length === 0\\\">\\n    <div class=\\\"jumbotron text-center\\\">\\n      <h4>Selected category don\\'t has any field.</h4>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/help/help-component.html\",\"<h1>Help</h1>\\n\");\n$templateCache.put(\"app/components/home/home.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3 no-print sm-spacer\\\">\\n    <device-search-component filters=\\\"vm.filters\\\" mode=\\\"\\'production\\'\\\" open-device-modal=\\\"vm.openDeviceModal(device)\\\" on-filters-changed=\\\"vm.onFiltersChanged(filters)\\\"></device-search-component>\\n  </div>\\n  <div class=\\\"col-md-9\\\">\\n    <device-list-component devices=\\\"vm.devices\\\" delete=\\\"vm.delete(device, index)\\\" sort-filters=\\\"vm.sortFilters\\\" on-sort-filters-changed=\\\"vm.onSortFiltersChanged(key)\\\" open-device-modal=\\\"vm.openDeviceModal(device, index)\\\"></device-list-component>\\n\\n    <div class=\\\"pagination-wrapper no-print\\\">\\n      <ul uib-pagination total-items=\\\"vm.pagination.total\\\" ng-model=\\\"vm.pagination.page\\\" ng-change=\\\"vm.loadDevices()\\\" max-size=\\\"6\\\" items-per-page=\\\"vm.pagination.limit\\\" class=\\\"pagination-sm pull-left\\\" boundary-link-numbers=\\\"true\\\"></ul>\\n      <span class=\\\"full-flex\\\"></span>\\n      <div class=\\\"btn-group btn-group-sm\\\">\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Items per page</label>\\n        <label class=\\\"btn btn-success\\\" ng-model=\\\"vm.pagination.limit\\\" ng-change=\\\"vm.onLimitChange()\\\" ng-repeat=\\\"limit in vm.limits\\\" uib-btn-radio=\\\"limit\\\">{{limit}}</label>\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Count: {{vm.pagination.total}}</label>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/import/import.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <label class=\\\"btn btn-default btn-sm btn-file\\\">\\n      Select File\\n      <input type=\\\"file\\\" fileread parse-started=\\\"vm.onParseStarted()\\\" headers=\\\"vm.headers\\\" data=\\\"vm.data\\\" on-data-changed=\\\"vm.onDataChanged(data)\\\" accept=\\\".xlsx, .xls\\\" style=\\\"display: none\\\">\\n    </label>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p ng-if=\\\"vm.editedData.length\\\">\\n      Part: {{vm.pagination.part}}/{{vm.pagination.parts}}. Total {{vm.pagination.total}} items.\\n    </p>\\n    <div ng-if=\\\"vm.editedData.length\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n        <tr class=\\\"info\\\">\\n          <th ng-repeat=\\\"header in vm.headers\\\">{{header.label}}</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr ng-repeat=\\\"row in vm.editedData\\\">\\n          <td ng-repeat=\\\"header in vm.headers\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" ng-required=\\\"header.required\\\" name=\\\"input{{$parent.$parent.$index}}{{$index}}\\\" ng-model=\\\"row[header.key]\\\" ng-if=\\\"header.type === \\'text\\'\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control input-sm\\\" ng-required=\\\"header.required\\\" name=\\\"input{{$parent.$parent.$index}}{{$index}}\\\" ng-model=\\\"row[header.key]\\\" ng-if=\\\"header.type === \\'email\\'\\\">\\n            <p class=\\\"input-group input-group-sm\\\" ng-if=\\\"header.type === \\'date\\'\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" name=\\\"input{{$parent.$parent.$index}}{{$index}}\\\" ng-required=\\\"header.required\\\" ng-model=\\\"row[header.key]\\\" datepicker-options=\\\"{}\\\" is-open=\\\"row.open[$index]\\\" close-text=\\\"Close\\\">\\n              <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"row.open[$index] = !row.open[$index]\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span></p></td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <div class=\\\"jumbotron text-center\\\" ng-if=\\\"!vm.editedData.length\\\">\\n      <h4>Please select .xls file</h4>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <div class=\\\"progress pull-left\\\" ng-if=\\\"vm.loadInProgress\\\" style=\\\"width: 150px; margin-bottom: 0; margin-top: 11px\\\">\\n      <div class=\\\"progress-bar progress-bar-success progress-bar-striped active\\\" role=\\\"progressbar\\\" style=\\\"width: 100%\\\">\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"!vm.editedData.length || vm.loadInProgress\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/login/login.component.html\",\"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-offset-3 col-sm-6\\\">\\n     <div class=\\\"jumbotron\\\">\\n       <form name=\\\"vm.form\\\" ng-submit=\\\"vm.login()\\\">\\n         <div class=\\\"form-group\\\">\\n           <label for=\\\"email\\\">Username</label>\\n           <input type=\\\"text\\\" ng-model=\\\"vm.data.email\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required>\\n         </div>\\n         <div class=\\\"form-group\\\">\\n           <label for=\\\"password\\\">Password</label>\\n           <input type=\\\"password\\\" ng-model=\\\"vm.data.password\\\" id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" required>\\n         </div>\\n         <button type=\\\"submit\\\" class=\\\"btn btn-success btn-md\\\" ng-disabled=\\\"vm.form.$invalid\\\">Log in</button>\\n       </form>\\n     </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/main/main.component.html\",\"<navbar-component class=\\\"no-print\\\"></navbar-component>\\n<div class=\\\"container-fluid\\\">\\n  <ui-view></ui-view>\\n</div>\\n<div class=\\\"footer-main no-print\\\">\\n  <p>© Incognito LCC {{vm.currentDate | date: \\'yyyy\\'}}</p>\\n</div>\\n\");\n$templateCache.put(\"app/components/navbar/navbar.component.html\",\"<div>\\n  <nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" ng-click=\\\"vm.isNavCollapsed = !vm.isNavCollapsed\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" ui-sref=\\\"home\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\', \\'productionUser\\']\\\">Devices</a>\\n        <a class=\\\"navbar-brand\\\" ui-sref=\\\"serials\\\" has-role=\\\"[\\'salesAdmin\\', \\'salesUser\\']\\\">Sales</a>\\n        <a class=\\\"navbar-brand\\\" ui-sref=\\\"rma\\\" has-role=\\\"[\\'support\\']\\\">RMA</a>\\n      </div>\\n      <div class=\\\"collapse navbar-collapse\\\" uib-collapse=\\\"vm.isNavCollapsed\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li has-role=\\\"[\\'admin\\']\\\" ui-sref-active=\\\"active\\\"><a ui-sref=\\\"serials\\\">Sales</a></li>\\n          <li has-role=\\\"[\\'admin\\']\\\" ui-sref-active=\\\"active\\\"><a ui-sref=\\\"categories\\\">Categories</a></li>\\n          <li has-role=\\\"[\\'admin\\', \\'productionAdmin\\', \\'salesAdmin\\']\\\" ui-sref-active=\\\"active\\\"><a ui-sref=\\\"users\\\">Users</a></li>\\n          <li has-role=\\\"[\\'admin\\']\\\" ui-sref-active=\\\"active\\\"><a ui-sref=\\\"rma\\\">RMA</a></li>\\n          <li has-role=\\\"[\\'admin\\', \\'salesAdmin\\', \\'support\\']\\\" ui-sref-active=\\\"active\\\"><a ui-sref=\\\"customers\\\">Customers</a></li>\\n          <li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"about\\\">About</a></li>\\n          <li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"help\\\">Help</a></li>\\n        </ul>\\n        <p class=\\\"navbar-text navbar-right visible-xs\\\">{{vm.user.name}}</p>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li><a ui-sref=\\\"login\\\">Logout</a></li>\\n        </ul>\\n        <p class=\\\"navbar-text navbar-right hidden-xs\\\">{{vm.user.name}}</p>\\n      </div>\\n    </div>\\n  </nav>\\n</div>\\n\");\n$templateCache.put(\"app/components/rma/rma.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3 no-print sm-spacer\\\">\\n    <form name=\\\"vm.form\\\" ng-submit=\\\"vm.loadRma()\\\">\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"formNumber\\\">Form Number:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.filters.formNumber\\\" id=\\\"formNumber\\\" name=\\\"formNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Form Number\\\">\\n      </div>\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"customerName\\\">Customer:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.filters._customerName\\\" id=\\\"customerName\\\" name=\\\"customerName\\\" class=\\\"form-control\\\" placeholder=\\\"Customer Name\\\">\\n      </div>\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"rxCarrier\\\">Rx Carrier:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.filters.rxCarrier\\\" id=\\\"rxCarrier\\\" name=\\\"rxCarrier\\\" class=\\\"form-control\\\" placeholder=\\\"Rx Carrier\\\">\\n      </div>\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"rxTracking\\\">Rx Tracking:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.filters.rxTracking\\\" id=\\\"rxTracking\\\" name=\\\"rxTracking\\\" class=\\\"form-control\\\" placeholder=\\\"Rx Tracking\\\">\\n      </div>\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"description\\\">Description:</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.filters.description\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\">\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"dateFrom\\\">From Date:</label>\\n            <p class=\\\"input-group input-group-sm\\\">\\n              <input type=\\\"text\\\" id=\\\"dateFrom\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.filters.dateFrom\\\" popup-placement=\\\"auto\\\" placeholder=\\\"From Date\\\" is-open=\\\"openFrom\\\" datepicker-options=\\\"{maxDate: vm.filters.dateTo}\\\" close-text=\\\"Close\\\">\\n              <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"openFrom = !openFrom\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n            </p>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"dateTo\\\">To Date:</label>\\n            <p class=\\\"input-group input-group-sm\\\">\\n              <input type=\\\"text\\\" id=\\\"dateTo\\\" class=\\\"form-control\\\" placeholder=\\\"To Date\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.filters.dateTo\\\" datepicker-options=\\\"{minDate: vm.filters.dateFrom}\\\" popup-placement=\\\"auto\\\" is-open=\\\"openTo\\\" close-text=\\\"Close\\\">\\n              <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"openTo = !openTo\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"text-right\\\">\\n        <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" ui-sref=\\\"rmaCreate\\\">New\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" ng-click=\\\"vm.reset()\\\">Reset\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\">Search\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-md-9\\\">\\n    <div>\\n      <div class=\\\"table-responsive scroled-table\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead fix-head>\\n          <tr>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'formNumber\\')\\\">\\n              RMA Form Number\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'formNumber\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'customer.name\\')\\\">\\n              Customer\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'customer.name\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'rxCarrier\\')\\\">\\n              Rx Carrier\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'rxCarrier\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'rxTracking\\')\\\">\\n              Rx Tracking\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'rxTracking\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'description\\')\\\">\\n              Description\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'description\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'closed\\')\\\">\\n              Status\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'closed\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'totalCount\\')\\\">\\n              Total Items\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'totalCount\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'closedCount\\')\\\">\\n              Closed Items\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'closedCount\\'\\\"></span>\\n            </th>\\n            <th ng-click=\\\"vm.onSortFiltersChanged(\\'dateCreate\\')\\\">\\n              Date Create\\n              <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'dateCreate\\'\\\"></span>\\n            </th>\\n            <th class=\\\"col-actions no-print\\\">Actions</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr ng-repeat=\\\"rma in vm.rmaes\\\">\\n            <td><a ui-sref=\\\"rmaDetail({id: rma._id})\\\">{{rma.formNumber}}</a></td>\\n            <td>{{rma.customer.name}}</td>\\n            <td>{{rma.rxCarrier}}</td>\\n            <td><a target=\\\"_blank\\\" href=\\\"http://www.google.com/search?q={{rma.rxTracking}}\\\">{{rma.rxTracking}}</a></td>\\n            <td>{{rma.description}}</td>\\n            <td>{{rma.closed ? \\'Closed\\' : \\'Open\\'}}</td>\\n            <td>{{rma.totalCount}}</td>\\n            <td>{{rma.closedCount}}</td>\\n            <td>{{rma.dateCreate | date: \\'MM.dd.yyyy\\'}}</td>\\n            <td class=\\\"text-center\\\">\\n              <button type=\\\"button\\\" ng-click=\\\"vm.delete(rma)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n              </button>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"pagination-wrapper no-print\\\">\\n      <ul uib-pagination total-items=\\\"vm.pagination.total\\\" ng-model=\\\"vm.pagination.page\\\" ng-change=\\\"vm.loadRma()\\\" max-size=\\\"6\\\" items-per-page=\\\"vm.pagination.limit\\\" class=\\\"pagination-sm pull-left\\\" boundary-link-numbers=\\\"true\\\"></ul>\\n      <span class=\\\"full-flex\\\"></span>\\n      <div class=\\\"btn-group btn-group-sm\\\">\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Items per page</label>\\n        <label class=\\\"btn btn-success\\\" ng-model=\\\"vm.pagination.limit\\\" ng-change=\\\"vm.onLimitChange()\\\" ng-repeat=\\\"limit in vm.limits\\\" uib-btn-radio=\\\"limit\\\">{{limit}}</label>\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Count: {{vm.pagination.total}}</label>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\");\n$templateCache.put(\"app/components/serials/serials.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3 no-print sm-spacer\\\">\\n    <device-search-component filters=\\\"vm.filters\\\" mode=\\\"\\'sales\\'\\\" on-filters-changed=\\\"vm.onFiltersChanged(filters)\\\">\\n\\n    </device-search-component>\\n  </div>\\n  <div class=\\\"col-md-9\\\">\\n    <serials-list-component serials=\\\"vm.serials\\\" delete=\\\"vm.delete(serial)\\\" sort-filters=\\\"vm.sortFilters\\\" on-sort-filters-changed=\\\"vm.onSortFiltersChanged(key)\\\" open-device-modal=\\\"vm.openDeviceModal(device, index)\\\">\\n\\n    </serials-list-component>\\n\\n    <div class=\\\"pagination-wrapper no-print\\\">\\n      <ul uib-pagination total-items=\\\"vm.pagination.total\\\" ng-model=\\\"vm.pagination.page\\\" ng-change=\\\"vm.loadSerials()\\\" max-size=\\\"6\\\" items-per-page=\\\"vm.pagination.limit\\\" class=\\\"pagination-sm\\\" boundary-link-numbers=\\\"true\\\"></ul>\\n      <span class=\\\"full-flex\\\"></span>\\n      <div class=\\\"btn-group btn-group-sm\\\">\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Items per page</label>\\n        <label class=\\\"btn btn-success\\\" ng-model=\\\"vm.pagination.limit\\\" ng-change=\\\"vm.onLimitChange()\\\" ng-repeat=\\\"limit in vm.limits\\\" uib-btn-radio=\\\"limit\\\">{{limit}}</label>\\n        <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Count: {{vm.pagination.total}}</label>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/users/users.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <p class=\\\"no-print\\\">\\n      <button class=\\\"btn btn-primary btn-sm\\\" ng-click=\\\"vm.openUserModal({})\\\">New</button>\\n    </p>\\n    <table class=\\\"table table-bordered\\\">\\n      <thead>\\n      <th>Name</th>\\n      <th>Email</th>\\n      <th>Role</th>\\n      <th class=\\\"col-actions no-print\\\">Actions</th>\\n      </thead>\\n      <tbody>\\n      <tr ng-repeat=\\\"user in vm.users\\\">\\n        <td>{{user.name}}</td>\\n        <td>{{user.email}}</td>\\n        <td>{{user.role}}</td>\\n        <td class=\\\"col-actions no-print\\\">\\n          <button type=\\\"button\\\" ng-click=\\\"vm.openUserModal(user, $index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" ng-click=\\\"vm.delete(user, $index)\\\" ng-disabled=\\\"user._id === vm.user._id\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/categories/create/create.category.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Category details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"categoryName\\\">Name</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.category.title\\\" id=\\\"categoryName\\\" name=\\\"categoryName\\\" class=\\\"form-control\\\" required placeholder=\\\"category name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.category.production\\\">\\n          Production\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.category.sales\\\">\\n          Sales\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.category.published\\\">\\n          Published\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"category-type\\\">Category type</label>\\n      <select name=\\\"category-type\\\" id=\\\"category-type\\\" ng-model=\\\"vm.category.type\\\" ng-disabled=\\\"vm.category._id\\\" class=\\\"form-control\\\" ng-change=\\\"vm.clearRelatedCategory()\\\" required ng-options=\\\"type as type for type in vm.categoryType\\\">\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\" ng-if=\\\"vm.category.type === \\'Table with subcategory\\'\\\">\\n      <label for=\\\"relatedCategory\\\">Please select related category</label>\\n      <select name=\\\"relatedCategory\\\" id=\\\"relatedCategory\\\" ng-model=\\\"vm.category.relatedCategory\\\" class=\\\"form-control\\\" ng-disabled=\\\"vm.category._id\\\" ng-change=\\\"vm.clearRelatedField()\\\" required ng-options=\\\"category as category.title for category in vm.relationCategories\\\">\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\" ng-if=\\\"vm.category.relatedCategory\\\">\\n      <label for=\\\"subcategoryField\\\">Please select related field</label>\\n      <select name=\\\"subcategoryField\\\" id=\\\"subcategoryField\\\" ng-disabled=\\\"vm.category._id\\\" ng-model=\\\"vm.category.subcategoryField\\\" class=\\\"form-control\\\" required ng-options=\\\"field as field.title for field in vm.category.relatedCategory.fields\\\">\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid || vm.loadInProgress\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\" ng-disabled=\\\"vm.loadInProgress\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/categories/static/static.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 table-responsive\\\">\\n    <h3>Model: {{vm.model}}</h3>\\n    <p>\\n      <button class=\\\"btn btn-primary btn-sm\\\" ng-click=\\\"vm.openFieldModal({})\\\">New</button>\\n    </p>\\n    <table class=\\\"table table-bordered\\\">\\n      <thead>\\n      <th>Field name</th>\\n      <th>Field type</th>\\n      <th>Required</th>\\n      <th class=\\\"col-actions\\\">Actions</th>\\n      </thead>\\n      <tbody>\\n      <tr ng-repeat=\\\"field in vm.staticFields\\\">\\n        <td>{{field.label}}</td>\\n        <td>{{field.type}}</td>\\n        <td>{{field.required}}</td>\\n        <td class=\\\"col-actions\\\">\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" disabled=\\\"disabled\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      <tr ng-repeat=\\\"field in vm.fields\\\">\\n        <td>{{field.title}}</td>\\n        <td>{{field.type.label}}</td>\\n        <td>{{field.required}}</td>\\n        <td class=\\\"col-actions\\\">\\n          <button type=\\\"button\\\" ng-click=\\\"vm.openFieldModal(field, $index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" ng-click=\\\"vm.delete(field, $index)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/customers/create/create-customer.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Customer details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\" ng-repeat=\\\"field in vm.fields\\\">\\n      <label for=\\\"{{field.key}}\\\">{{field.label}}:</label>\\n      <input type=\\\"{{field.type}}\\\" ng-model=\\\"vm.customer[field.key]\\\" id=\\\"{{field.key}}\\\" name=\\\"{{field.key}}\\\" class=\\\"form-control\\\" ng-required=\\\"field.required\\\" placeholder=\\\"{{field.label}}\\\">\\n    </div>\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"phone\\\">Phone:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.phone\\\"-->\\n             <!--id=\\\"phone\\\"-->\\n             <!--name=\\\"phone\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"Phone\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"contactPerson\\\">Contact Person:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.contactPerson\\\"-->\\n             <!--id=\\\"contactPerson\\\"-->\\n             <!--name=\\\"contactPerson\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"Contact Person\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"email\\\">Email:</label>-->\\n      <!--<input type=\\\"email\\\"-->\\n             <!--ng-model=\\\"vm.customer.email\\\"-->\\n             <!--id=\\\"email\\\"-->\\n             <!--name=\\\"email\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"Email\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"address\\\">Address:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.address\\\"-->\\n             <!--id=\\\"address\\\"-->\\n             <!--name=\\\"address\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"Address\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"city\\\">City:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.city\\\"-->\\n             <!--id=\\\"city\\\"-->\\n             <!--name=\\\"city\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"City\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"zipCode\\\">Zip Code:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.zipCode\\\"-->\\n             <!--id=\\\"zipCode\\\"-->\\n             <!--name=\\\"zipCode\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"Zip Code\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"state\\\">State:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.state\\\"-->\\n             <!--id=\\\"state\\\"-->\\n             <!--name=\\\"state\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"State\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"country\\\">Country:</label>-->\\n      <!--<input type=\\\"text\\\"-->\\n             <!--ng-model=\\\"vm.customer.country\\\"-->\\n             <!--id=\\\"country\\\"-->\\n             <!--name=\\\"country\\\"-->\\n             <!--class=\\\"form-control\\\"-->\\n             <!--required-->\\n             <!--placeholder=\\\"Country\\\">-->\\n    <!--</div>-->  <!--dynamic fields-->\\n    <div ng-repeat=\\\"obj in vm.customer.fields\\\">\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'number\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"number\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'text\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'link\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"http://{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-pattern=\\\"/https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'longText\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <textarea ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" placeholder=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'select\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <select ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" ng-options=\\\"option as option for option in obj.field.options\\\">\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'file\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <div class=\\\"load-progress\\\">\\n          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n          </uib-progressbar>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" class=\\\"form-control\\\" placeholder=\\\"{{obj.field.title}}\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'img\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <div class=\\\"load-progress\\\">\\n          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n          </uib-progressbar>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\" ngf-accept=\\\"\\'image/*\\'\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" placeholder=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'date\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <p class=\\\"input-group\\\" ng-init=\\\"vm.convertDate(obj)\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"obj.value\\\" popup-placement=\\\"auto\\\" placeholder=\\\"{{obj.field.title}}\\\" is-open=\\\"obj.open\\\" ng-required=\\\"obj.required\\\" close-text=\\\"Close\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"obj.open = !obj.open\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-category.component.html\",\"<div class=\\\"row\\\">\\n  <p class=\\\"col-sm-12 no-print\\\" ng-if=\\\"vm.fields.length > 0 && vm.category.type !== \\'Table with subcategory\\'\\\">\\n    <button class=\\\"btn btn-primary btn-sm\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\', \\'salesAdmin\\']\\\" ng-click=\\\"vm.openDocumentModal({})\\\">New\\n    </button>\\n  </p>\\n  <!--<p ng-if=\\\"vm.category.type === \\'Form\\' && vm.documents.length >=1\\\">-->\\n    <!--<button type=\\\"button\\\"-->\\n            <!--ng-click=\\\"vm.openDocumentModal(vm.documents[0], 0)\\\"-->\\n            <!--class=\\\"btn btn-primary btn-sm\\\">-->\\n      <!--Edit-->\\n    <!--</button>-->\\n  <!--</p>-->\\n  <device-category-table ng-if=\\\"vm.category.type === \\'Table\\' && vm.fields.length > 0 && vm.documents.length > 0\\\" open-document-modal=\\\"vm.openDocumentModal(document)\\\" delete=\\\"vm.delete(document)\\\" fields=\\\"vm.fields\\\" documents=\\\"vm.documents\\\"></device-category-table>\\n  <device-category-gallery ng-if=\\\"vm.category.type === \\'Gallery\\'\\\" delete=\\\"vm.delete(document)\\\" documents=\\\"vm.documents\\\"></device-category-gallery>\\n  <device-category-form ng-if=\\\"vm.category.type === \\'Attachments\\' && vm.documents[0]\\\" open-document-modal=\\\"vm.openDocumentModal(document)\\\" delete=\\\"vm.delete(document)\\\" documents=\\\"vm.documents\\\"></device-category-form>\\n  <device-subcategories ng-if=\\\"vm.category.type === \\'Table with subcategory\\'\\\" documents=\\\"vm.documents\\\" fields=\\\"vm.fields\\\" device-id=\\\"vm.deviceId\\\" delete=\\\"vm.delete(document)\\\" open-document-modal=\\\"vm.openDocumentModal(document)\\\" category=\\\"vm.category\\\"></device-subcategories>\\n  <div class=\\\"col-xs-12\\\" ng-if=\\\"vm.fields.length === 0\\\">\\n    <div class=\\\"jumbotron col-xs-12 text-center\\\">\\n      <h4>\\n        Selected category don\\'t has any field.\\n      </h4>\\n      <a ui-sref=\\\"fields({id: vm.categoryId})\\\" class=\\\"btn btn-primary\\\" has-role=\\\"[\\'admin\\']\\\">Add fields</a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-xs-12\\\" ng-if=\\\"vm.fields.length > 0 &&\\n              vm.documents.length === 0 &&\\n              vm.category.type != \\'Table with subcategory\\'\\\">\\n    <div class=\\\"jumbotron text-center\\\">\\n      <h4>Selected device don\\'t has any info in this category.</h4>\\n    </div>\\n  </div>\\n</div>\\n\\n\");\n$templateCache.put(\"app/components/device/device-detail/device-detail.component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n        <tr class=\\\"info\\\">\\n          <th>Model name</th>\\n          <th>Part number</th>\\n          <th>UPC</th>\\n          <th>Description</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr class=\\\"active\\\">\\n          <td>{{vm.device.model}}</td>\\n          <td>{{vm.device.partNumber}}</td>\\n          <td>{{vm.device.upc}}</td>\\n          <td>{{vm.device.description}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3 col-lg-2 sm-spacer no-print\\\">\\n    <ul class=\\\"nav nav-pills nav-stacked\\\">\\n      <li ng-repeat=\\\"category in vm.categories\\\" ui-sref-active=\\\"active\\\">\\n        <a ui-sref=\\\".category({categoryId: category._id})\\\">\\n          {{category.title}}\\n        </a>\\n      </li>\\n      <li ui-sref-active=\\\"active\\\" has-role=\\\"[\\'admin\\', \\'salesAdmin\\', \\'salesUser\\']\\\">\\n        <a ui-sref=\\\"device.serialNumbers\\\">Serial Numbers</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-md-9 col-lg-10\\\">\\n    <div class=\\\"row\\\">\\n      <ui-view class=\\\"col-xs-12\\\">\\n        <div class=\\\"jumbotron text-center\\\">\\n          <h4>Select category for detail.</h4>\\n        </div>\\n      </ui-view>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-list/device-list-component.html\",\"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'model\\'})\\\">\\n      Model name\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'model\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'partNumber\\'})\\\">\\n      Part number\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'partNumber\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'upc\\'})\\\">\\n      UPC\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'upc\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'description\\'})\\\">\\n      Description\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'description\\'\\\"></span>\\n    </th>\\n    <th class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\']\\\">Actions</th>\\n    </thead>\\n    <tbody>\\n    <tr ng-repeat=\\\"device in vm.devices\\\">\\n      <td><a ui-sref=\\\"device({id: device._id})\\\">{{device.model}}</a></td>\\n      <td>{{device.partNumber}}</td>\\n      <td>{{device.upc}}</td>\\n      <td>{{device.description}}</td>\\n      <td class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\']\\\">\\n        <button type=\\\"button\\\" ng-click=\\\"vm.openDeviceModal({device: device, index: $index})\\\" class=\\\"btn btn-primary btn-sm\\\">\\n          <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" ng-click=\\\"vm.delete({device: device, index: $index})\\\" class=\\\"btn btn-danger btn-sm\\\">\\n          <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-search/device-search.component.html\",\"<form name=\\\"vm.form\\\" ng-submit=\\\"vm.search()\\\">\\n  <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"vm.mode === \\'sales\\'\\\">\\n    <label for=\\\"serialNumber\\\">Serial number:</label>\\n    <input type=\\\"text\\\" ng-model=\\\"vm.filters.serialNumber\\\" id=\\\"serialNumber\\\" name=\\\"serialNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Serial number\\\">\\n  </div>\\n\\n  <div class=\\\"form-group form-group-sm\\\">\\n    <label for=\\\"modelName\\\">Model name:</label>\\n    <input type=\\\"text\\\" ng-model=\\\"vm.filters.model\\\" id=\\\"modelName\\\" name=\\\"modelName\\\" class=\\\"form-control\\\" placeholder=\\\"Model name\\\">\\n  </div>\\n  <div class=\\\"form-group form-group-sm\\\">\\n    <label for=\\\"partNumber\\\">Part Number:</label>\\n    <input type=\\\"text\\\" ng-model=\\\"vm.filters.partNumber\\\" id=\\\"partNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Part number\\\" name=\\\"partNumber\\\">\\n  </div>\\n  <div class=\\\"form-group form-group-sm\\\">\\n    <label for=\\\"upc\\\">UPC:</label>\\n    <input type=\\\"text\\\" ng-model=\\\"vm.filters.upc\\\" id=\\\"upc\\\" class=\\\"form-control\\\" placeholder=\\\"UPC\\\" name=\\\"upc\\\">\\n  </div>\\n  <div class=\\\"form-group form-group-sm\\\">\\n    <label for=\\\"description\\\">Description:</label>\\n    <input type=\\\"text\\\" ng-model=\\\"vm.filters.description\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\">\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vm.mode === \\'sales\\'\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"dateFrom\\\">From Date:</label>\\n        <p class=\\\"input-group input-group-sm\\\">\\n          <input type=\\\"text\\\" id=\\\"dateFrom\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.filters.dateFrom\\\" popup-placement=\\\"auto\\\" placeholder=\\\"From Date\\\" is-open=\\\"openFrom\\\" datepicker-options=\\\"{maxDate: vm.filters.dateTo}\\\" close-text=\\\"Close\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"openFrom = !openFrom\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n        </p>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group form-group-sm\\\">\\n        <label for=\\\"dateTo\\\">To Date:</label>\\n        <p class=\\\"input-group input-group-sm\\\">\\n          <input type=\\\"text\\\" id=\\\"dateTo\\\" class=\\\"form-control\\\" placeholder=\\\"To Date\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.filters.dateTo\\\" datepicker-options=\\\"{minDate: vm.filters.dateFrom}\\\" popup-placement=\\\"auto\\\" is-open=\\\"openTo\\\" close-text=\\\"Close\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"openTo = !openTo\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"vm.mode === \\'sales\\'\\\">\\n    <label for=\\\"customerName\\\">Customer name:</label>\\n    <input type=\\\"text\\\" ng-model=\\\"vm.filters.customerName\\\" id=\\\"customerName\\\" name=\\\"customerName\\\" class=\\\"form-control\\\" placeholder=\\\"Customer name\\\">\\n  </div>\\n\\n  <div class=\\\"text-right\\\">\\n    <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" ng-if=\\\"vm.mode === \\'production\\'\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\']\\\" ng-click=\\\"vm.openDeviceModal({device: {}})\\\">New</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" ng-click=\\\"vm.reset()\\\">Reset</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\">Search</button></div>\\n</form>\\n\");\n$templateCache.put(\"app/components/document/document-create/document-create.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Document details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div ng-repeat=\\\"obj in vm.document.fields\\\">\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'number\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"number\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'text\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'link\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"http://{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-pattern=\\\"/https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'longText\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <textarea ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" placeholder=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'select\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <select ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" ng-options=\\\"option as option for option in obj.field.options\\\">\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'file\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <div class=\\\"load-progress\\\">\\n          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n          </uib-progressbar>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" class=\\\"form-control\\\" placeholder=\\\"{{obj.field.title}}\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'img\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <div class=\\\"load-progress\\\">\\n          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n          </uib-progressbar>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\" ngf-accept=\\\"\\'image/*\\'\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" placeholder=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'date\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <p class=\\\"input-group\\\" ng-init=\\\"vm.convertDate(obj)\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" popup-placement=\\\"auto\\\" is-open=\\\"obj.open\\\" ng-required=\\\"obj.required\\\" close-text=\\\"Close\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"obj.open = !obj.open\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid || vm.loadInProgress\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\" ng-disabled=\\\"vm.loadInProgress\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/fields/create/create.field.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Field details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"field-title\\\">Title</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.field.title\\\" id=\\\"field-title\\\" name=\\\"fieldTitle\\\" class=\\\"form-control\\\" required placeholder=\\\"Title\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.field.required\\\">\\n          Required\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"field-type\\\">Field type</label>\\n      <select name=\\\"field-type\\\" id=\\\"field-type\\\" ng-model=\\\"vm.field.type\\\" ng-change=\\\"vm.field.useAsSubcategory = false\\\" class=\\\"form-control\\\" required ng-options=\\\"type as type.label for type in vm.types track by type._id\\\">\\n      </select>\\n    </div>\\n    <chips ng-model=\\\"vm.field.options\\\" required ng-if=\\\"vm.field.type.value === \\'select\\'\\\">\\n      <chip-tmpl>\\n        <div class=\\\"default-chip\\\">\\n          {{chip}}\\n          <span class=\\\"glyphicon glyphicon-remove\\\" remove-chip></span>\\n        </div>\\n      </chip-tmpl>\\n      <input chip-control placeholder=\\\"Enter an options\\\">\\n    </chips>\\n    <div ng-if=\\\"vm.field.type.value === \\'text\\'\\\" class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.field.useAsSubcategory\\\">\\n          Can be used as subcategory\\n        </label>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid || vm.loadInProgress\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\" ng-disabled=\\\"vm.loadInProgress\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/rma/create/rma-create.component.html\",\"<form name=\\\"vm.form\\\" ng-submit=\\\"vm.save()\\\" autocomplete=\\\"off\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 col-md-6\\\">\\n      <fieldset name=\\\"basic\\\">\\n        <legend>Basic RMA info</legend>\\n        <div class=\\\"form-group form-group-sm\\\">\\n          <label for=\\\"formNumber\\\">RMA Form Number:</label>\\n          <input type=\\\"text\\\" ng-if=\\\"vm.editMode\\\" ng-model=\\\"vm.rma.formNumber\\\" class=\\\"form-control\\\" id=\\\"formNumber\\\" disabled=\\\"disabled\\\" name=\\\"formNumber\\\" required placeholder=\\\"RMA Form Number\\\">\\n          <div class=\\\"input-group input-group-sm\\\" ng-if=\\\"!vm.editMode\\\">\\n            <span class=\\\"input-group-addon\\\" id=\\\"basic-addon1\\\">{{vm.options.formNumberStatic}}</span>\\n            <input type=\\\"text\\\" ng-model=\\\"vm.options.formNumberDynamic\\\" class=\\\"form-control\\\" id=\\\"formNumber\\\" name=\\\"formNumber\\\" required placeholder=\\\"RMA Form Number\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group form-group-sm\\\">\\n          <label for=\\\"rxCarrier\\\">Rx Carrier:</label>\\n          <input type=\\\"text\\\" ng-model=\\\"vm.rma.rxCarrier\\\" class=\\\"form-control\\\" id=\\\"rxCarrier\\\" name=\\\"rxCarrier\\\" placeholder=\\\"Rx Carrier\\\">\\n        </div>\\n        <div class=\\\"form-group form-group-sm\\\">\\n          <label for=\\\"rxTracking\\\">Rx Tracking:</label>\\n          <input type=\\\"text\\\" ng-model=\\\"vm.rma.rxTracking\\\" class=\\\"form-control\\\" id=\\\"rxTracking\\\" name=\\\"rxTracking\\\" placeholder=\\\"Rx Tracking\\\">\\n        </div>\\n        <div class=\\\"form-group form-group-sm\\\">\\n          <label for=\\\"description\\\">Description:</label>\\n          <textarea name=\\\"description\\\" id=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" ng-model=\\\"vm.rma.description\\\"></textarea>\\n        </div>\\n      </fieldset>\\n      <button class=\\\"btn btn-sm btn-primary pull-right visible-lg\\\" type=\\\"submit\\\" ng-disabled=\\\"!vm.rma.products.length || !vm.rma.customer || vm.form.$invalid\\\">Save</button>\\n    </div>\\n    <div class=\\\"col-lg-3 col-md-6 col-lg-push-6\\\">\\n      <fieldset name=\\\"customer\\\">\\n        <legend>Customer info</legend>\\n\\n        <div class=\\\"form-group form-group-sm with-autocomplete\\\">\\n          <a href=\\\"#\\\" class=\\\"pull-right\\\" ng-click=\\\"vm.openCustomerModal($event)\\\">New</a>\\n          <label for=\\\"clientName\\\">Customer Name:</label>\\n          <input type=\\\"text\\\" typeahead-editable=\\\"false\\\" id=\\\"clientName\\\" ng-model=\\\"vm.rma.customer\\\" ng-model-options=\\\"{debounce: 300}\\\" placeholder=\\\"Customer Name\\\" uib-typeahead=\\\"customer as customer.name for customer in vm.getCustomers($viewValue)\\\" typeahead-loading=\\\"loadingCustomers\\\" typeahead-on-select=\\\"vm.onCustomerChanged()\\\" typeahead-no-results=\\\"noResults\\\" class=\\\"form-control\\\">\\n          <i ng-show=\\\"loadingCustomers\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i>\\n          <div ng-show=\\\"noResults\\\">\\n            <i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found\\n          </div>\\n        </div>\\n        <div class=\\\"well well-sm\\\" ng-if=\\\"vm.rma.customer\\\">\\n          <table class=\\\"table table-sm\\\">\\n            <tbody>\\n            <tr ng-repeat=\\\"field in vm.customerFields\\\">\\n              <td><b>{{field.label}}:</b></td>\\n              <td>{{vm.rma.customer[field.key]}}</td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </fieldset>\\n    </div>\\n    <div class=\\\"col-lg-6 col-md-12 col-lg-pull-3\\\">\\n      <fieldset ng-form=\\\"vm.form.devices\\\">\\n        <legend>RMA devices</legend>\\n        <div class=\\\"form-group form-group-sm with-autocomplete\\\">\\n          <label for=\\\"serialNumber\\\">Serial Number:</label>\\n          <input type=\\\"text\\\" typeahead-editable=\\\"false\\\" id=\\\"serialNumber\\\" ng-model=\\\"vm.serialNumber\\\" ng-model-options=\\\"{debounce: 300}\\\" placeholder=\\\"Serial Number\\\" uib-typeahead=\\\"sn as sn.serialNumber for sn in vm.getSerials($viewValue)\\\" typeahead-loading=\\\"loadingSerials\\\" typeahead-template-url=\\\"serial-template.html\\\" typeahead-no-results=\\\"noSerialsResults\\\" typeahead-on-select=\\\"vm.onSerialNumberChanged()\\\" class=\\\"form-control\\\">\\n          <i ng-show=\\\"loadingSerials\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i>\\n          <div ng-show=\\\"noSerialsResults\\\">\\n            <i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found\\n          </div>\\n        </div>\\n        <div class=\\\"alert-card\\\" ng-if=\\\"vm.invalidCustomer\\\">\\n          <div class=\\\"alert-card-message\\\">Selected customer and customers in devices don\\'t match!</div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" ng-click=\\\"vm.updateSerialsCustomer()\\\">Update</button>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\" ng-repeat=\\\"nth in [0, 1]\\\">\\n            <div class=\\\"rma-serial-card\\\" ng-class=\\\"{\\'rma-card-closed\\': sn.closed}\\\" ng-repeat=\\\"sn in vm.rma.products | orderBy: \\'closed\\' | nthChild: nth\\\">\\n              <button class=\\\"edit-serial-card\\\" type=\\\"button\\\" ng-disabled=\\\"vm.form.devices[\\'device\\' + $index + $parent.$index].$invalid\\\" ng-click=\\\"vm.toggleEditedState(sn)\\\">\\n                <span class=\\\"glyphicon\\\" ng-class=\\\"{\\'glyphicon-ok\\': sn.editable, \\'glyphicon-pencil\\': !sn.editable}\\\">\\n                </span>\\n              </button>\\n              <button class=\\\"delete-serial-card\\\" ng-disabled=\\\"sn.closed && vm.user.role !== \\'admin\\'\\\" ng-click=\\\"vm.deleteSerialNumber(sn)\\\" type=\\\"button\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\">\\n                </span>\\n              </button>\\n              <fieldset ng-form=\\\"vm.form.devices[\\'device\\' + $index + \\'\\' + $parent.$index]\\\">\\n                <table class=\\\"table table-sm\\\">\\n                  <tbody>\\n                  <tr>\\n                    <td><b>Model Name</b></td>\\n                    <td>{{sn.sale._productModel}}</td>\\n                  </tr>\\n                  <tr>\\n                    <td><b>Serial Number:</b></td>\\n                    <td>{{sn.sale.serialNumber}}</td>\\n                  </tr>\\n                  <tr>\\n                    <td><b>Sales Order:</b></td>\\n                    <td>{{sn.sale.salesOrder}}</td>\\n                  </tr>\\n                  <tr>\\n                    <td><b>Date:</b></td>\\n                    <td>{{sn.sale.date | date: \\'MM.dd.yyyy\\'}}</td>\\n                  </tr>\\n                  <tr class=\\\"max-two-columns\\\">\\n                    <td><b>Version:</b></td>\\n                    <td ng-if=\\\"!sn.editable\\\">\\n                      <span>{{sn.sale.version}}</span>\\n                    </td>\\n                    <td ng-if=\\\"sn.editable\\\">\\n                      <input class=\\\"form-control input-sm\\\" type=\\\"text\\\" name=\\\"version\\\" ng-model=\\\"sn.sale.version\\\" required>\\n                    </td>\\n                  </tr>\\n                  <tr class=\\\"max-two-columns\\\">\\n                    <td><b>Customer:</b></td>\\n                    <td ng-if=\\\"!sn.editable\\\">{{sn.sale.customer.name}}</td>\\n                    <td class=\\\"form-group form-group-sm with-autocomplete\\\" ng-if=\\\"sn.editable\\\">\\n                      <input type=\\\"text\\\" typeahead-editable=\\\"false\\\" id=\\\"snClientName\\\" ng-model=\\\"sn.sale.customer\\\" ng-model-options=\\\"{debounce: 300}\\\" placeholder=\\\"Customer Name\\\" uib-typeahead=\\\"customer as customer.name for customer in vm.getCustomers($viewValue)\\\" typeahead-loading=\\\"loadingCustomers\\\" typeahead-no-results=\\\"noResults\\\" class=\\\"form-control\\\">\\n                      <i ng-show=\\\"loadingCustomers\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i>\\n                      <div ng-show=\\\"noResults\\\">\\n                        <i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr ng-repeat=\\\"obj in sn.fields | orderBy : \\'obj._id\\'\\\" class=\\\"max-two-columns\\\" ng-show=\\\"obj.value || sn.editable\\\">\\n                    <td><b>{{obj.field.title}}:</b></td>\\n                    <td ng-if=\\\"!sn.editable\\\">\\n                      <a href=\\\"/api/uploads/{{obj.value.filename}}\\\" ng-if=\\\"obj.field.type.value === \\'file\\' || obj.field.type.value === \\'img\\'\\\" target=\\\"_blank\\\">{{obj.value.originalname}}</a>\\n                      <span ng-if=\\\"obj.field.type.value === \\'text\\' ||\\n                     obj.field.type.value === \\'number\\' ||\\n                     obj.field.type.value === \\'select\\' ||\\n                     obj.field.type.value === \\'longText\\' \\\">{{obj.value}}</span>\\n                      <span ng-if=\\\"obj.field.type.value === \\'date\\'\\\">{{obj.value | date : \\'MM.dd.yyyy\\'}}</span>\\n                      <a href=\\\"{{obj.value}}\\\" ng-if=\\\"obj.field.type.value === \\'link\\'\\\" target=\\\"_blank\\\">{{obj.value}}</a>\\n                    </td>\\n                    <td class=\\\"clear-form-group-margin\\\" ng-if=\\\"sn.editable\\\">\\n\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'number\\'\\\">\\n                        <input type=\\\"number\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'text\\'\\\">\\n                        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'link\\'\\\">\\n                        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"http://{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-pattern=\\\"/https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'longText\\'\\\">\\n                        <textarea ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" placeholder=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\"></textarea>\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'select\\'\\\">\\n                        <select ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" ng-options=\\\"option as option for option in obj.field.options\\\">\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'file\\'\\\">\\n                        <div class=\\\"load-progress\\\">\\n                          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n                            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n                          </uib-progressbar>\\n                        </div>\\n                        <div class=\\\"clearfix\\\"></div>\\n                        <div class=\\\"input-group input-group-sm\\\" ngf-select=\\\"vm.upload($file, obj)\\\">\\n                  <span class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\">Search</button>\\n                  </span>\\n                          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" class=\\\"form-control\\\" placeholder=\\\"{{obj.field.title}}\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'img\\'\\\">\\n                        <div class=\\\"load-progress\\\">\\n                          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n                            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n                          </uib-progressbar>\\n                        </div>\\n                        <div class=\\\"clearfix\\\"></div>\\n                        <div class=\\\"input-group input-group-sm\\\" ngf-select=\\\"vm.upload($file, obj)\\\" ngf-accept=\\\"\\'image/*\\'\\\">\\n                  <span class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n                  </span>\\n                          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" placeholder=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group form-group-sm\\\" ng-if=\\\"obj.field.type.value === \\'date\\'\\\">\\n                        <p class=\\\"input-group input-group-sm\\\" ng-init=\\\"vm.convertDate(obj)\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"obj.value\\\" popup-placement=\\\"auto\\\" placeholder=\\\"{{obj.field.title}}\\\" is-open=\\\"obj.open\\\" ng-required=\\\"obj.required\\\" close-text=\\\"Close\\\">\\n                          <span class=\\\"input-group-btn\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"obj.open = !obj.open\\\">\\n                        <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n                          </span>\\n                        </p>\\n                      </div>\\n\\n                    </td>\\n                  </tr>\\n                  <tr ng-if=\\\"vm.editMode\\\">\\n                    <td><b>Status:</b></td>\\n                    <td>\\n                      <input type=\\\"checkbox\\\" ng-disabled=\\\"sn.closed && vm.user.role !== \\'admin\\'\\\" ng-model=\\\"sn.closed\\\">\\n                      <span>{{sn.closed ? \\'Closed\\' : \\'Open\\'}}</span>\\n                    </td>\\n                  </tr>\\n                  </tbody>\\n                </table>\\n              </fieldset>\\n            </div>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 hidden-lg\\\">\\n      <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\" ng-disabled=\\\"!vm.rma.products.length || !vm.rma.customer || vm.form.$invalid\\\">Save</button>\\n    </div>\\n  </div>\\n</form>\\n<script type=\\\"text/ng-template\\\" id=\\\"serial-template.html\\\">\\n  <a>\\n    Serial Number: <span ng-bind-html=\\\"match.model.serialNumber | uibTypeaheadHighlight:query\\\"></span><br>\\n    Version: <span>{{match.model.version}}</span><br>\\n    Sales Order: <span>{{match.model.salesOrder}}</span><br>\\n    Date: <span>{{match.model.date | date: \\'MM.dd.yyyy\\'}}</span><br>\\n    Customer: <span>{{match.model.customer.name}}</span><br>\\n  </a>\\n</script>\\n\");\n$templateCache.put(\"app/components/serials/serials-list/serials-list.component.html\",\"<div class=\\\"table-responsive scroled-table\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <thead fix-head>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'serialNumber\\'})\\\">\\n      Serial Number\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'serialNumber\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'product.model\\'})\\\">\\n      Model name\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'product.model\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'product.partNumber\\'})\\\">\\n      Part number\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'product.partNumber\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'product.upc\\'})\\\">\\n      UPC\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'product.upc\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'product.description\\'})\\\">\\n      Description\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'product.description\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'date\\'})\\\">\\n      Date\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'date\\'\\\"></span>\\n    </th>\\n    <th ng-click=\\\"vm.onSortFiltersChanged({key: \\'customerName\\'})\\\">\\n      Customer Name\\n      <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'customerName\\'\\\"></span>\\n    </th>\\n    <!--<th class=\\\"col-actions\\\"-->\\n        <!--has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\">Actions</th>-->\\n    </thead>\\n    <tbody>\\n    <tr ng-repeat=\\\"serial in vm.serials\\\">\\n      <td><a ui-sref=\\\"device.serialNumbers({id: serial.product._id, serialNumber: serial.serialNumber})\\\">{{serial.serialNumber}}</a></td>\\n      <td><a ui-sref=\\\"device({id: serial.product._id})\\\">{{serial.product.model}}</a></td>\\n      <td>{{serial.product.partNumber}}</td>\\n      <td>{{serial.product.upc}}</td>\\n      <td>{{serial.product.description}}</td>\\n      <td>{{serial.date | date: \\'MM.dd.yyyy\\'}}</td>\\n      <td>{{serial.customer.name}}</td>\\n      <!--<td class=\\\"col-actions\\\"-->\\n          <!--has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\">-->\\n        <!--<button type=\\\"button\\\"-->\\n                <!--has-role=\\\"[\\'admin\\']\\\"-->\\n                <!--ng-click=\\\"vm.openDeviceModal({serial: serial, index: $index})\\\"-->\\n                <!--class=\\\"btn btn-primary btn-sm\\\">-->\\n          <!--<span class=\\\"glyphicon glyphicon-edit\\\"></span>-->\\n        <!--</button>-->\\n        <!--<button type=\\\"button\\\"-->\\n                <!--ng-click=\\\"vm.delete({serial: serial, index: $index})\\\"-->\\n                <!--class=\\\"btn btn-danger btn-sm\\\">-->\\n          <!--<span class=\\\"glyphicon glyphicon-trash\\\"></span>-->\\n        <!--</button>-->\\n      <!--</td>-->\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\");\n$templateCache.put(\"app/components/users/create/create.user.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n<div class=\\\"modal-header\\\">\\n  <h4>User details</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userName\\\">Name</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.user.name\\\" id=\\\"userName\\\" name=\\\"userName\\\" class=\\\"form-control\\\" required placeholder=\\\"User name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.user.email\\\" id=\\\"email\\\" name=\\\"email\\\" required class=\\\"form-control\\\" placeholder=\\\"Email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\" ng-if=\\\"vm.user._id\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.changePassword\\\">\\n          Change password\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" ng-if=\\\"!vm.user._id || vm.changePassword\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" ng-model=\\\"vm.user.password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" required placeholder=\\\"Password\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"role\\\">Role</label>\\n      <select name=\\\"role\\\" id=\\\"role\\\" ng-model=\\\"vm.user.role\\\" class=\\\"form-control\\\" required ng-options=\\\"role.value as role.label for role in vm.roles\\\">\\n      </select>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid\\\">Save</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\n</div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/categories/static/create/create.static-field.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Field details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"field-title\\\">Title</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.field.title\\\" id=\\\"field-title\\\" name=\\\"fieldTitle\\\" class=\\\"form-control\\\" required placeholder=\\\"Title\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" ng-model=\\\"vm.field.required\\\">\\n          Required\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"field-type\\\">Field type</label>\\n      <select name=\\\"field-type\\\" id=\\\"field-type\\\" ng-model=\\\"vm.field.type\\\" class=\\\"form-control\\\" required ng-options=\\\"type as type.label for type in vm.types track by type._id\\\">\\n      </select>\\n    </div>\\n    <chips ng-model=\\\"vm.field.options\\\" required ng-if=\\\"vm.field.type.value === \\'select\\'\\\">\\n      <chip-tmpl>\\n        <div class=\\\"default-chip\\\">\\n          {{chip}}\\n          <span class=\\\"glyphicon glyphicon-remove\\\" remove-chip></span>\\n        </div>\\n      </chip-tmpl>\\n      <input chip-control placeholder=\\\"Enter an options\\\">\\n    </chips>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid || vm.loadInProgress\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\" ng-disabled=\\\"vm.loadInProgress\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-category-form/device-category-form.html\",\"<div class=\\\"col-md-8 col-md-offset-2\\\">\\n  <div class=\\\"well well-sm\\\">\\n    <div class=\\\"form-horizontal\\\">\\n      <div ng-repeat=\\\"document in vm.documents\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-4 control-label\\\" ng-repeat=\\\"field in document.fields | filter: {field: {type: {value:\\'text\\'}}}\\\">{{field.value}}</label>\\n          <div class=\\\"col-sm-5\\\" ng-repeat=\\\"field in document.fields | filter: {field: {type: {value:\\'file\\'}}}\\\">\\n            <p class=\\\"form-control-static\\\">\\n              <a href=\\\"/api/uploads/{{field.value.filename}}\\\" target=\\\"_blank\\\">{{field.value.originalname}}</a>\\n            </p>\\n          </div>\\n          <div class=\\\"col-sm-3 no-print\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"vm.openDocumentModal({document: document})\\\" class=\\\"btn btn-primary btn-sm\\\">\\n              <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n            </button>\\n            <button type=\\\"button\\\" ng-click=\\\"vm.delete({document: document})\\\" class=\\\"btn btn-danger btn-sm\\\">\\n              <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-category-gallery/device-category-gallery.html\",\"<div class=\\\"col-sm-12\\\">\\n  <div uib-carousel active=\\\"vm.active\\\" interval=\\\"0\\\" class=\\\"gallery\\\">\\n    <div uib-slide ng-repeat=\\\"document in vm.documents track by document._id\\\" index=\\\"$index\\\">\\n      <img ng-src=\\\"/api/uploads/{{field.value.filename}}\\\" ng-repeat=\\\"field in document.fields | filter: {field: {type: {value:\\'img\\'}}}\\\" style=\\\"margin:auto; max-height: 450px; min-height: 100px\\\">\\n      <div has-role=\\\"[\\'admin\\', \\'productionAdmin\\', \\'salesAdmin\\']\\\">\\n        <h4 ng-repeat=\\\"field in document.fields | filter: {field: {type: {value:\\'text\\'}}}\\\">{{field.value}}</h4>\\n        <p>\\n          <a href=\\\"/api/uploads/{{document.fields[0].value.filename}}\\\" class=\\\"btn btn-sm btn-success\\\" ng-repeat=\\\"field in document.fields | filter: {field: {type: {value:\\'img\\'}}}\\\" download=\\\"{{field.value.originalname}}\\\" target=\\\"_blank\\\">Download</a>\\n          <button type=\\\"button\\\" ng-click=\\\"vm.delete({document: document})\\\" class=\\\"btn btn-danger btn-sm\\\">\\n            Delete\\n          </button>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-category-table/device-category-table.html\",\"<div class=\\\"col-sm-12 table-responsive\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n    <th ng-repeat=\\\"field in vm.fields | orderBy : \\'_id\\'\\\">{{field.title}}</th>\\n    <th class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\', \\'salesAdmin\\']\\\">Actions</th>\\n    </thead>\\n    <tbody>\\n    <tr ng-repeat=\\\"document in vm.documents track by document._id\\\">\\n      <td ng-repeat=\\\"field in document.fields | orderBy : \\'field._id\\'\\\">\\n        <a href=\\\"/api/uploads/{{field.value.filename}}\\\" ng-if=\\\"field.field.type.value === \\'file\\' || field.field.type.value === \\'img\\'\\\" target=\\\"_blank\\\">{{field.value.originalname}}</a>\\n        <span ng-if=\\\"field.field.type.value === \\'text\\' ||\\n                     field.field.type.value === \\'number\\' ||\\n                     field.field.type.value === \\'select\\' ||\\n                     field.field.type.value === \\'longText\\' \\\">{{field.value}}</span>\\n        <span ng-if=\\\"field.field.type.value === \\'date\\'\\\">{{field.value | date : \\'MM.dd.yyyy\\'}}</span>\\n        <a href=\\\"{{field.value}}\\\" ng-if=\\\"field.field.type.value === \\'link\\'\\\" target=\\\"_blank\\\">{{field.value}}</a>\\n      </td>\\n      <td class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\', \\'productionAdmin\\', \\'salesAdmin\\']\\\">\\n        <button type=\\\"button\\\" ng-click=\\\"vm.openDocumentModal({document: document})\\\" class=\\\"btn btn-primary btn-sm\\\">\\n          <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" ng-click=\\\"vm.delete({document: document})\\\" class=\\\"btn btn-danger btn-sm\\\">\\n          <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-serial-numbers/device-serial-numbers-component.html\",\"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-md-push-9 col-md-3 sm-spacer no-print\\\">\\n        <form novalidate ng-submit=\\\"vm.loadSales()\\\">\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"serialNumber\\\">Serial Number</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"serialNumber\\\" ng-model=\\\"vm.searchFilters.serialNumber\\\">\\n          </div>\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"version\\\">Version</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"version\\\" ng-model=\\\"vm.searchFilters.version\\\">\\n          </div>\\n\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"salesOrder\\\">Sales Order</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"salesOrder\\\" ng-model-options=\\\"vm.modelOptions\\\" ng-model=\\\"vm.searchFilters.salesOrder\\\">\\n          </div>\\n\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"dateFrom\\\">From Date:</label>\\n            <p class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" id=\\\"dateFrom\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.searchFilters.dateFrom\\\" popup-placement=\\\"auto\\\" is-open=\\\"openFrom\\\" datepicker-options=\\\"{maxDate: vm.searchFilters.dateTo}\\\" close-text=\\\"Close\\\">\\n              <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"openFrom = !openFrom\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"dateTo\\\">To Date:</label>\\n            <p class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" id=\\\"dateTo\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.searchFilters.dateTo\\\" datepicker-options=\\\"{minDate: vm.searchFilters.dateFrom}\\\" popup-placement=\\\"auto\\\" is-open=\\\"openTo\\\" close-text=\\\"Close\\\">\\n              <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"openTo = !openTo\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group form-group-sm\\\">\\n            <label for=\\\"customerName\\\">Customer Name</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"customerName\\\" ng-model=\\\"vm.searchFilters.customerName\\\">\\n          </div>\\n\\n          <div class=\\\"text-right\\\">\\n            <button class=\\\"btn btn-info btn-sm\\\" type=\\\"button\\\" has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\" ng-click=\\\"vm.openImportModal()\\\">Import\\n            </button>\\n            <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\" ng-click=\\\"vm.openCreateModal({})\\\">New\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" ng-click=\\\"vm.reset()\\\">Reset</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-sm\\\">Search</button>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"col-xs-12 table-responsive col-md-pull-3 col-md-9\\\">\\n        <div>\\n\\n          <div class=\\\"scroled-table\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead fix-head>\\n              <th ng-click=\\\"vm.onSortFiltersChanged(\\'serialNumber\\')\\\">\\n                Serial Number\\n                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'serialNumber\\'\\\"></span>\\n              </th>\\n              <th ng-click=\\\"vm.onSortFiltersChanged(\\'version\\')\\\">\\n                Version\\n                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'version\\'\\\"></span>\\n              </th>\\n              <th ng-click=\\\"vm.onSortFiltersChanged(\\'salesOrder\\')\\\">\\n                Sales Order\\n                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'salesOrder\\'\\\"></span>\\n              </th>\\n              <th ng-click=\\\"vm.onSortFiltersChanged(\\'date\\')\\\">\\n                Date\\n                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'date\\'\\\"></span>\\n              </th>\\n              <th ng-click=\\\"vm.onSortFiltersChanged(\\'customerName\\')\\\">\\n                Customer Name\\n                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" ng-class=\\\"{reverse: vm.sortFilters.order}\\\" ng-show=\\\"vm.sortFilters.sort === \\'customerName\\'\\\"></span>\\n              </th>\\n              <th ng-repeat=\\\"field in vm.fields | orderBy : \\'_id\\'\\\">{{field.title}}</th>\\n              <th class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\">Actions</th>\\n              </thead>\\n              <tbody>\\n              <tr ng-repeat=\\\"sale in vm.sales\\\">\\n                <td>{{sale.serialNumber}}</td>\\n                <td>{{sale.version}}</td>\\n                <td>{{sale.salesOrder}}</td>\\n                <td>{{sale.date | date: \\'MM.dd.yyyy\\'}}</td>\\n                <td>{{sale.customer.name}}</td>\\n                <td ng-repeat=\\\"field in sale.fields | orderBy : \\'field._id\\'\\\">\\n                  <a href=\\\"/api/uploads/{{field.value.filename}}\\\" ng-if=\\\"field.field.type.value === \\'file\\' || field.field.type.value === \\'img\\'\\\" target=\\\"_blank\\\">{{field.value.originalname}}</a>\\n                  <span ng-if=\\\"field.field.type.value === \\'text\\' ||\\n                     field.field.type.value === \\'number\\' ||\\n                     field.field.type.value === \\'select\\' ||\\n                     field.field.type.value === \\'longText\\' \\\">{{field.value}}</span>\\n                  <span ng-if=\\\"field.field.type.value === \\'date\\'\\\">{{field.value | date : \\'MM.dd.yyyy\\'}}</span>\\n                  <a href=\\\"{{field.value}}\\\" ng-if=\\\"field.field.type.value === \\'link\\'\\\" target=\\\"_blank\\\">{{field.value}}</a>\\n                </td>\\n                <td class=\\\"col-actions no-print\\\" has-role=\\\"[\\'admin\\', \\'salesAdmin\\']\\\">\\n                  <button type=\\\"button\\\" ng-click=\\\"vm.openCreateModal(sale, $index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                  </button>\\n                  <button type=\\\"button\\\" ng-click=\\\"vm.delete(sale, $index)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                    <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                  </button>\\n                </td>\\n              </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"pagination-wrapper no-print\\\">\\n          <ul uib-pagination total-items=\\\"vm.pagination.total\\\" ng-model=\\\"vm.pagination.page\\\" ng-change=\\\"vm.loadSales()\\\" max-size=\\\"6\\\" items-per-page=\\\"vm.pagination.limit\\\" class=\\\"pagination-sm pull-left\\\" boundary-link-numbers=\\\"true\\\"></ul>\\n          <span class=\\\"full-flex\\\"></span>\\n          <div class=\\\"btn-group btn-group-sm\\\">\\n            <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Items per page</label>\\n            <label class=\\\"btn btn-success\\\" ng-model=\\\"vm.pagination.limit\\\" ng-change=\\\"vm.onLimitChange()\\\" ng-repeat=\\\"limit in vm.limits\\\" uib-btn-radio=\\\"limit\\\">{{limit}}</label>\\n            <label class=\\\"btn btn-success\\\" disabled=\\\"disabled\\\">Count: {{vm.pagination.total}}</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-subcategories/device-subcategories.html\",\"\\n<div class=\\\"col-xs-12\\\">\\n  <uib-accordion>\\n    <div uib-accordion-group ng-repeat=\\\"sub in vm.subcategories\\\" class=\\\"panel-default\\\">\\n      <uib-accordion-heading>\\n        <a href=\\\"#\\\" ng-click=\\\"vm.onCreateClick(sub, $event)\\\" class=\\\"pull-right\\\">New</a>\\n        {{sub.value}}\\n      </uib-accordion-heading>\\n\\n      <div class=\\\"row\\\">\\n        <device-category-table open-document-modal=\\\"vm.create(document)\\\" delete=\\\"vm.onDelelte(document)\\\" fields=\\\"vm.fields\\\" documents=\\\"sub.documents\\\">\\n        </device-category-table>\\n      </div>\\n    </div>\\n  </uib-accordion>\\n</div>\\n\");\n$templateCache.put(\"app/components/device/device-list/create/device.create.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Device details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"deviceName\\\">Model name:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.device.model\\\" id=\\\"deviceName\\\" name=\\\"deviceName\\\" class=\\\"form-control\\\" required placeholder=\\\"Model name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"partNumber\\\">Part Number:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.device.partNumber\\\" id=\\\"partNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Part number\\\" required name=\\\"partNumber\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"upc\\\">UPC:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.device.upc\\\" id=\\\"upc\\\" class=\\\"form-control\\\" required placeholder=\\\"UPC\\\" name=\\\"upc\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.device.description\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" required placeholder=\\\"Description\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");\n$templateCache.put(\"app/components/device/device-category/device-serial-numbers/create/sale-create.component.html\",\"<form ng-submit=\\\"vm.save()\\\" name=\\\"vm.form\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4>Sale details</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"serialNumber\\\">Serial number:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.sale.serialNumber\\\" id=\\\"serialNumber\\\" name=\\\"serialNumber\\\" class=\\\"form-control\\\" required placeholder=\\\"Serial number\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"version\\\">Version:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.sale.version\\\" id=\\\"version\\\" name=\\\"version\\\" class=\\\"form-control\\\" required placeholder=\\\"Version\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"salesOrder\\\">Sales Order:</label>\\n      <input type=\\\"text\\\" ng-model=\\\"vm.sale.salesOrder\\\" id=\\\"salesOrder\\\" class=\\\"form-control\\\" placeholder=\\\"Sales Order\\\" name=\\\"salesOrder\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"date\\\">Date:</label>\\n      <p class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" id=\\\"date\\\" placeholder=\\\"Date\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"vm.sale.date\\\" popup-placement=\\\"auto\\\" is-open=\\\"open\\\" close-text=\\\"Close\\\">\\n        <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"open = !open\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n      </p>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"clientName\\\">Customer Name:</label>\\n      <input type=\\\"text\\\" typeahead-editable=\\\"false\\\" id=\\\"clientName\\\" ng-model=\\\"vm.sale.customer\\\" ng-model-options=\\\"{debounce: 300}\\\" placeholder=\\\"Customer Name\\\" uib-typeahead=\\\"customer as customer.name for customer in vm.getCustomers($viewValue)\\\" typeahead-loading=\\\"loadingCustomers\\\" typeahead-no-results=\\\"noResults\\\" class=\\\"form-control\\\">\\n      <i ng-show=\\\"loadingCustomers\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i>\\n      <div ng-show=\\\"noResults\\\">\\n        <i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found\\n      </div>\\n    </div>\\n\\n\\n    <!--dynamic fields-->\\n    <div ng-repeat=\\\"obj in vm.sale.fields\\\">\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'number\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"number\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'text\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'link\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <input type=\\\"text\\\" ng-model=\\\"obj.value\\\" placeholder=\\\"http://{{obj.field.title}}\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-pattern=\\\"/https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'longText\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <textarea ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" placeholder=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'select\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <select ng-model=\\\"obj.value\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" ng-options=\\\"option as option for option in obj.field.options\\\">\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'file\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <div class=\\\"load-progress\\\">\\n          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n          </uib-progressbar>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" class=\\\"form-control\\\" placeholder=\\\"{{obj.field.title}}\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'img\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <div class=\\\"load-progress\\\">\\n          <uib-progressbar max=\\\"100\\\" value=\\\"obj.progress\\\" ng-if=\\\"obj.progress >= 0\\\">\\n            <span style=\\\"color:white; white-space:nowrap\\\">{{obj.progress}} / 100</span>\\n          </uib-progressbar>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"input-group\\\" ngf-select=\\\"vm.upload($file, obj)\\\" ngf-accept=\\\"\\'image/*\\'\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n          <input type=\\\"text\\\" id=\\\"{{obj.field.title}}\\\" name=\\\"{{obj.field.title}}\\\" ng-model=\\\"obj.value.originalname\\\" placeholder=\\\"{{obj.field.title}}\\\" class=\\\"form-control\\\" ng-required=\\\"obj.field.required\\\" readonly=\\\"readonly\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"obj.field.type.value === \\'date\\'\\\">\\n        <label for=\\\"{{obj.field.title}}\\\">{{obj.field.title}}</label>\\n        <p class=\\\"input-group\\\" ng-init=\\\"vm.convertDate(obj)\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"MM.dd.yyyy\\\" ng-model=\\\"obj.value\\\" popup-placement=\\\"auto\\\" placeholder=\\\"{{obj.field.title}}\\\" is-open=\\\"obj.open\\\" ng-required=\\\"obj.required\\\" close-text=\\\"Close\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"obj.open = !obj.open\\\">\\n              <i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n          </span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-disabled=\\\"vm.form.$invalid\\\">Save</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\");}]);\nangular\n  .module('app')\n  .config(routesConfig);\n\n/** @ngInject */\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\n  var allRoles = ['admin', 'productionAdmin', 'productionUser', 'salesAdmin', 'salesUser', 'support'];\n  var admins = ['admin', 'productionAdmin', 'salesAdmin'];\n  var sales = ['admin', 'salesAdmin', 'salesUser'];\n  var productions = ['admin', 'productionAdmin', 'productionUser'];\n  var support = ['admin', 'support'];\n  $locationProvider.html5Mode(true).hashPrefix('!');\n  $urlRouterProvider.otherwise(function ($injector) {\n    var auth = $injector.get('Auth');\n    var state = $injector.get('$state');\n    auth.getCurrentUser()\n      .then(function (user) {\n        if(productions.indexOf(user.role) !== -1){\n          state.go('home');\n        } else if(sales.indexOf(user.role) !== -1) {\n          state.go('serials')\n        } else if(support.indexOf(user.role) !== -1) {\n          state.go('rma')\n        } else {\n          state.go('login');\n        }\n      })\n  });\n  $stateProvider\n    .state('main', {\n      abstract: true,\n      component: 'mainComponent',\n      data: {\n        roles: allRoles\n      }\n    })\n    .state('home', {\n      url: '/devices',\n      parent: 'main',\n      component: 'homeComponent',\n      data: {\n        roles: productions\n      }\n    })\n    .state('serials', {\n      url: '/sales',\n      parent: 'main',\n      component: 'serialsComponent',\n      data: {\n        roles: sales\n      }\n    })\n    .state('users', {\n      url: '/users',\n      parent: 'main',\n      component: 'usersComponent',\n      data: {\n        roles: admins\n      }\n    })\n    .state('categories', {\n      url: '/categories',\n      parent: 'main',\n      component: 'categoriesComponent',\n      data: {\n        roles: ['admin']\n      }\n    })\n    .state('rma', {\n      url: '/rma',\n      parent: 'main',\n      component: 'rmaComponent',\n      data: {\n        roles: support\n      }\n    })\n    .state('rmaDetail', {\n      url: '/rma/:id',\n      parent: 'main',\n      component: 'rmaCreateComponent',\n      data: {\n        roles: support\n      }\n    })\n    .state('rmaCreate', {\n      url: '/rma-create',\n      parent: 'main',\n      component: 'rmaCreateComponent',\n      data: {\n        roles: support\n      }\n    })\n    .state('about', {\n      url: '/about',\n      parent: 'main',\n      component: 'aboutComponent',\n      data: {\n        roles: allRoles\n      }\n    })\n    .state('help', {\n      url: '/help',\n      parent: 'main',\n      component: 'helpComponent',\n      data: {\n        roles: allRoles\n      }\n    })\n    .state('customers', {\n      url: '/customers',\n      parent: 'main',\n      component: 'customersComponent',\n      data: {\n        roles: allRoles\n      }\n    })\n    .state('static', {\n      url: '/categories/static/:model',\n      parent: 'main',\n      component: 'staticComponent',\n      data: {\n        roles: ['admin']\n      }\n    })\n    .state('fields', {\n      url: '/categories/:id',\n      parent: 'main',\n      component: 'fieldsComponent',\n      data: {\n        roles: ['admin']\n      }\n    })\n    .state('device', {\n      url: '/device/:id',\n      parent: 'main',\n      component: 'deviceDetailComponent',\n      data: {\n        roles: allRoles\n      }\n    })\n    .state('device.serialNumbers', {\n      url: '/serialNumber?serialNumber',\n      parent: 'device',\n      component: 'deviceSerialNumbersComponent',\n      data: {\n        roles: sales\n      }\n    })\n    .state('device.category', {\n      url: '/:categoryId',\n      parent: 'device',\n      component: 'deviceCategoryComponent',\n      data: {\n        roles: allRoles\n      }\n\n    })\n    .state('login', {\n      url: '/login',\n      component: 'loginComponent'\n    });\n}\n"]}